2025-06-11 19:06:57,350:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:06:57,350:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:06:57,350:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:06:57,350:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:06:59,099:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\utils\autologging_utils\versioning.py:6: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  from pkg_resources import resource_filename

2025-06-11 19:07:01,515:INFO:PyCaret ClassificationExperiment
2025-06-11 19:07:01,515:INFO:Logging name: riesgo_credito_multiclase
2025-06-11 19:07:01,516:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-11 19:07:01,516:INFO:version 3.2.0
2025-06-11 19:07:01,516:INFO:Initializing setup()
2025-06-11 19:07:01,516:INFO:self.USI: 51f9
2025-06-11 19:07:01,516:INFO:self._variable_keys: {'X_train', 'is_multiclass', 'exp_name_log', 'target_param', 'X_test', '_available_plots', 'fold_shuffle_param', 'y', 'fold_generator', 'data', 'logging_param', 'log_plots_param', 'n_jobs_param', 'gpu_param', '_ml_usecase', 'idx', 'exp_id', 'html_param', 'gpu_n_jobs_param', 'USI', 'fix_imbalance', 'X', 'seed', 'pipeline', 'y_test', 'y_train', 'fold_groups_param', 'memory'}
2025-06-11 19:07:01,516:INFO:Checking environment
2025-06-11 19:07:01,516:INFO:python_version: 3.11.9
2025-06-11 19:07:01,516:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-06-11 19:07:01,516:INFO:machine: AMD64
2025-06-11 19:07:01,538:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-11 19:07:01,551:INFO:Memory: svmem(total=33554628608, available=11944460288, percent=64.4, used=21610168320, free=11944460288)
2025-06-11 19:07:01,551:INFO:Physical Core: 6
2025-06-11 19:07:01,551:INFO:Logical Core: 12
2025-06-11 19:07:01,551:INFO:Checking libraries
2025-06-11 19:07:01,551:INFO:System:
2025-06-11 19:07:01,551:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-06-11 19:07:01,551:INFO:executable: C:\Users\amonreal\Documents\amlbash\.venv\Scripts\python.exe
2025-06-11 19:07:01,551:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-11 19:07:01,551:INFO:PyCaret required dependencies:
2025-06-11 19:07:02,641:INFO:                 pip: 24.0
2025-06-11 19:07:02,641:INFO:          setuptools: 80.9.0
2025-06-11 19:07:02,641:INFO:             pycaret: 3.2.0
2025-06-11 19:07:02,641:INFO:             IPython: 9.3.0
2025-06-11 19:07:02,641:INFO:          ipywidgets: 8.1.7
2025-06-11 19:07:02,641:INFO:                tqdm: 4.67.1
2025-06-11 19:07:02,641:INFO:               numpy: 1.25.2
2025-06-11 19:07:02,641:INFO:              pandas: 1.5.3
2025-06-11 19:07:02,641:INFO:              jinja2: 3.1.6
2025-06-11 19:07:02,641:INFO:               scipy: 1.10.1
2025-06-11 19:07:02,641:INFO:              joblib: 1.2.0
2025-06-11 19:07:02,641:INFO:             sklearn: 1.2.2
2025-06-11 19:07:02,641:INFO:                pyod: 2.0.5
2025-06-11 19:07:02,641:INFO:            imblearn: 0.12.4
2025-06-11 19:07:02,641:INFO:   category_encoders: 2.7.0
2025-06-11 19:07:02,641:INFO:            lightgbm: 4.6.0
2025-06-11 19:07:02,641:INFO:               numba: 0.58.1
2025-06-11 19:07:02,641:INFO:            requests: 2.32.4
2025-06-11 19:07:02,641:INFO:          matplotlib: 3.6.0
2025-06-11 19:07:02,642:INFO:          scikitplot: 0.3.7
2025-06-11 19:07:02,642:INFO:         yellowbrick: 1.5
2025-06-11 19:07:02,642:INFO:              plotly: 5.24.1
2025-06-11 19:07:02,642:INFO:    plotly-resampler: Not installed
2025-06-11 19:07:02,642:INFO:             kaleido: 0.2.1
2025-06-11 19:07:02,642:INFO:           schemdraw: 0.15
2025-06-11 19:07:02,642:INFO:         statsmodels: 0.14.4
2025-06-11 19:07:02,642:INFO:              sktime: 0.21.1
2025-06-11 19:07:02,642:INFO:               tbats: 1.1.3
2025-06-11 19:07:02,642:INFO:            pmdarima: 2.0.4
2025-06-11 19:07:02,642:INFO:              psutil: 7.0.0
2025-06-11 19:07:02,642:INFO:          markupsafe: 2.1.5
2025-06-11 19:07:02,642:INFO:             pickle5: Not installed
2025-06-11 19:07:02,642:INFO:         cloudpickle: 2.2.1
2025-06-11 19:07:02,642:INFO:         deprecation: 2.1.0
2025-06-11 19:07:02,642:INFO:              xxhash: 3.5.0
2025-06-11 19:07:02,642:INFO:           wurlitzer: Not installed
2025-06-11 19:07:02,642:INFO:PyCaret optional dependencies:
2025-06-11 19:07:09,381:INFO:                shap: 0.47.2
2025-06-11 19:07:09,381:INFO:           interpret: 0.6.11
2025-06-11 19:07:09,381:INFO:                umap: 0.5.7
2025-06-11 19:07:09,381:INFO:     ydata_profiling: 4.6.0
2025-06-11 19:07:09,381:INFO:  explainerdashboard: 0.5.1
2025-06-11 19:07:09,381:INFO:             autoviz: Not installed
2025-06-11 19:07:09,381:INFO:           fairlearn: 0.7.0
2025-06-11 19:07:09,381:INFO:          deepchecks: Not installed
2025-06-11 19:07:09,381:INFO:             xgboost: Not installed
2025-06-11 19:07:09,381:INFO:            catboost: 1.2.8
2025-06-11 19:07:09,381:INFO:              kmodes: 0.12.2
2025-06-11 19:07:09,381:INFO:             mlxtend: 0.23.1
2025-06-11 19:07:09,381:INFO:       statsforecast: 1.5.0
2025-06-11 19:07:09,381:INFO:        tune_sklearn: Not installed
2025-06-11 19:07:09,381:INFO:                 ray: Not installed
2025-06-11 19:07:09,381:INFO:            hyperopt: 0.2.7
2025-06-11 19:07:09,381:INFO:              optuna: 4.3.0
2025-06-11 19:07:09,381:INFO:               skopt: 0.10.2
2025-06-11 19:07:09,381:INFO:              mlflow: 2.22.0
2025-06-11 19:07:09,381:INFO:              gradio: 3.50.2
2025-06-11 19:07:09,381:INFO:             fastapi: 0.115.12
2025-06-11 19:07:09,381:INFO:             uvicorn: 0.34.2
2025-06-11 19:07:09,381:INFO:              m2cgen: 0.10.0
2025-06-11 19:07:09,381:INFO:           evidently: 0.2.8
2025-06-11 19:07:09,381:INFO:               fugue: 0.8.6
2025-06-11 19:07:09,381:INFO:           streamlit: Not installed
2025-06-11 19:07:09,381:INFO:             prophet: Not installed
2025-06-11 19:07:09,381:INFO:None
2025-06-11 19:07:09,381:INFO:Set up data.
2025-06-11 19:07:09,392:INFO:Set up folding strategy.
2025-06-11 19:07:09,392:INFO:Set up train/test split.
2025-06-11 19:07:09,400:INFO:Set up index.
2025-06-11 19:07:09,401:INFO:Assigning column types.
2025-06-11 19:07:09,404:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-11 19:07:09,443:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:07:09,448:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-11 19:07:09,495:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:07:09,495:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:07:09,663:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:07:09,665:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-11 19:07:09,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:07:09,694:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:07:09,694:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-11 19:07:09,743:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-11 19:07:09,765:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:07:09,765:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:07:09,802:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-11 19:07:09,828:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:07:09,828:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:07:09,829:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-11 19:07:09,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:07:09,888:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:07:09,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:07:09,962:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:07:09,964:INFO:Preparing preprocessing pipeline...
2025-06-11 19:07:09,966:INFO:Set up label encoding.
2025-06-11 19:07:09,966:INFO:Set up simple imputation.
2025-06-11 19:07:09,969:INFO:Set up encoding of categorical features.
2025-06-11 19:07:10,035:INFO:Finished creating preprocessing pipeline.
2025-06-11 19:07:10,042:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-11 19:07:10,042:INFO:Creating final display dataframe.
2025-06-11 19:07:10,243:INFO:Setup _display_container:                     Description                       Value
0                    Session id                         404
1                        Target                  risk_level
2                   Target type                  Multiclass
3                Target mapping  alto: 0, bajo: 1, medio: 2
4           Original data shape                   (1000, 8)
5        Transformed data shape                  (1000, 12)
6   Transformed train set shape                   (700, 12)
7    Transformed test set shape                   (300, 12)
8              Numeric features                           6
9          Categorical features                           1
10                   Preprocess                        True
11              Imputation type                      simple
12           Numeric imputation                        mean
13       Categorical imputation                        mode
14     Maximum one-hot encoding                          25
15              Encoding method                        None
16               Fold Generator             StratifiedKFold
17                  Fold Number                          10
18                     CPU Jobs                          -1
19                      Use GPU                       False
20               Log Experiment                MlflowLogger
21              Experiment Name   riesgo_credito_multiclase
22                          USI                        51f9
2025-06-11 19:07:10,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:07:10,348:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:07:10,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:07:10,435:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:07:10,436:INFO:Logging experiment in loggers
2025-06-11 19:07:10,825:INFO:SubProcess save_model() called ==================================
2025-06-11 19:07:10,836:INFO:Initializing save_model()
2025-06-11 19:07:10,836:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\amonreal\AppData\Local\Temp\tmp2fpaa68p\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-11 19:07:10,836:INFO:Adding model into prep_pipe
2025-06-11 19:07:10,836:WARNING:Only Model saved as it was a pipeline.
2025-06-11 19:07:10,839:INFO:C:\Users\amonreal\AppData\Local\Temp\tmp2fpaa68p\Transformation Pipeline.pkl saved in current working directory
2025-06-11 19:07:10,844:INFO:Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-11 19:07:10,844:INFO:save_model() successfully completed......................................
2025-06-11 19:07:11,021:INFO:SubProcess save_model() end ==================================
2025-06-11 19:07:11,046:INFO:setup() successfully completed in 8.93s...............
2025-06-11 19:07:11,046:INFO:Initializing compare_models()
2025-06-11 19:07:11,046:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-06-11 19:07:11,046:INFO:Checking exceptions
2025-06-11 19:07:11,050:INFO:Preparing display monitor
2025-06-11 19:07:11,056:INFO:Initializing Logistic Regression
2025-06-11 19:07:11,056:INFO:Total runtime is 0.0 minutes
2025-06-11 19:07:11,056:INFO:SubProcess create_model() called ==================================
2025-06-11 19:07:11,056:INFO:Initializing create_model()
2025-06-11 19:07:11,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0A98F9F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:11,056:INFO:Checking exceptions
2025-06-11 19:07:11,056:INFO:Importing libraries
2025-06-11 19:07:11,056:INFO:Copying training dataset
2025-06-11 19:07:11,059:INFO:Defining folds
2025-06-11 19:07:11,059:INFO:Declaring metric variables
2025-06-11 19:07:11,059:INFO:Importing untrained model
2025-06-11 19:07:11,060:INFO:Logistic Regression Imported successfully
2025-06-11 19:07:11,060:INFO:Starting cross validation
2025-06-11 19:07:11,061:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:07:17,033:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:07:17,046:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:07:17,047:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:07:17,047:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:07:17,073:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,081:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,083:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,085:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,086:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,086:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,089:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,089:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,092:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,149:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:07:17,169:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:07:17,188:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,191:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,195:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,206:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:07:17,212:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,224:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,224:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:07:17,228:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,239:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,243:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,246:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,256:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,259:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,259:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:07:17,262:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,291:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,294:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,297:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,374:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:07:17,397:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,399:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,400:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,404:INFO:Calculating mean and std
2025-06-11 19:07:17,405:INFO:Creating metrics dataframe
2025-06-11 19:07:17,409:INFO:Uploading results into container
2025-06-11 19:07:17,410:INFO:Uploading model into container now
2025-06-11 19:07:17,411:INFO:_master_model_container: 1
2025-06-11 19:07:17,411:INFO:_display_container: 2
2025-06-11 19:07:17,412:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=404, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-11 19:07:17,412:INFO:create_model() successfully completed......................................
2025-06-11 19:07:17,593:INFO:SubProcess create_model() end ==================================
2025-06-11 19:07:17,593:INFO:Creating metrics dataframe
2025-06-11 19:07:17,598:INFO:Initializing K Neighbors Classifier
2025-06-11 19:07:17,598:INFO:Total runtime is 0.10904057025909424 minutes
2025-06-11 19:07:17,598:INFO:SubProcess create_model() called ==================================
2025-06-11 19:07:17,598:INFO:Initializing create_model()
2025-06-11 19:07:17,599:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0A98F9F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:17,599:INFO:Checking exceptions
2025-06-11 19:07:17,599:INFO:Importing libraries
2025-06-11 19:07:17,599:INFO:Copying training dataset
2025-06-11 19:07:17,605:INFO:Defining folds
2025-06-11 19:07:17,605:INFO:Declaring metric variables
2025-06-11 19:07:17,605:INFO:Importing untrained model
2025-06-11 19:07:17,606:INFO:K Neighbors Classifier Imported successfully
2025-06-11 19:07:17,606:INFO:Starting cross validation
2025-06-11 19:07:17,607:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:07:17,748:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,749:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,749:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,750:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,752:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,752:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,752:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,753:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,753:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,754:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,755:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:17,755:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,755:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:17,756:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,757:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,757:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,757:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

r, msg_start, len(result))

2025-06-11 19:07:17,758:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,759:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,759:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,768:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,771:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:17,772:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:17,773:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:20,686:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:20,690:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:20,692:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:20,735:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:20,738:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:20,739:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:20,740:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:20,746:INFO:Calculating mean and std
2025-06-11 19:07:20,747:INFO:Creating metrics dataframe
2025-06-11 19:07:20,751:INFO:Uploading results into container
2025-06-11 19:07:20,751:INFO:Uploading model into container now
2025-06-11 19:07:20,752:INFO:_master_model_container: 2
2025-06-11 19:07:20,752:INFO:_display_container: 2
2025-06-11 19:07:20,753:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-11 19:07:20,753:INFO:create_model() successfully completed......................................
2025-06-11 19:07:20,937:INFO:SubProcess create_model() end ==================================
2025-06-11 19:07:20,937:INFO:Creating metrics dataframe
2025-06-11 19:07:20,941:INFO:Initializing Naive Bayes
2025-06-11 19:07:20,941:INFO:Total runtime is 0.1647489070892334 minutes
2025-06-11 19:07:20,941:INFO:SubProcess create_model() called ==================================
2025-06-11 19:07:20,942:INFO:Initializing create_model()
2025-06-11 19:07:20,942:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0A98F9F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:20,942:INFO:Checking exceptions
2025-06-11 19:07:20,942:INFO:Importing libraries
2025-06-11 19:07:20,942:INFO:Copying training dataset
2025-06-11 19:07:20,945:INFO:Defining folds
2025-06-11 19:07:20,945:INFO:Declaring metric variables
2025-06-11 19:07:20,945:INFO:Importing untrained model
2025-06-11 19:07:20,945:INFO:Naive Bayes Imported successfully
2025-06-11 19:07:20,946:INFO:Starting cross validation
2025-06-11 19:07:20,947:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:07:21,037:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,037:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,037:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,039:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,040:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,042:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,041:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,043:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,043:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,045:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,045:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,046:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,048:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,049:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,049:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,049:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,051:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,052:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,052:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,053:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,053:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,054:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,054:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,056:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,056:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,057:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,057:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,058:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,059:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,063:INFO:Calculating mean and std
2025-06-11 19:07:21,064:INFO:Creating metrics dataframe
2025-06-11 19:07:21,067:INFO:Uploading results into container
2025-06-11 19:07:21,067:INFO:Uploading model into container now
2025-06-11 19:07:21,068:INFO:_master_model_container: 3
2025-06-11 19:07:21,068:INFO:_display_container: 2
2025-06-11 19:07:21,068:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-11 19:07:21,068:INFO:create_model() successfully completed......................................
2025-06-11 19:07:21,249:INFO:SubProcess create_model() end ==================================
2025-06-11 19:07:21,249:INFO:Creating metrics dataframe
2025-06-11 19:07:21,255:INFO:Initializing Decision Tree Classifier
2025-06-11 19:07:21,255:INFO:Total runtime is 0.16999026934305828 minutes
2025-06-11 19:07:21,255:INFO:SubProcess create_model() called ==================================
2025-06-11 19:07:21,255:INFO:Initializing create_model()
2025-06-11 19:07:21,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0A98F9F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:21,255:INFO:Checking exceptions
2025-06-11 19:07:21,255:INFO:Importing libraries
2025-06-11 19:07:21,255:INFO:Copying training dataset
2025-06-11 19:07:21,259:INFO:Defining folds
2025-06-11 19:07:21,259:INFO:Declaring metric variables
2025-06-11 19:07:21,259:INFO:Importing untrained model
2025-06-11 19:07:21,260:INFO:Decision Tree Classifier Imported successfully
2025-06-11 19:07:21,260:INFO:Starting cross validation
2025-06-11 19:07:21,261:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:07:21,359:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,361:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,364:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,364:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,364:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,365:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,365:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,365:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,367:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,367:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,367:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,367:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,367:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,368:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,368:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,368:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,369:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,370:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,371:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,371:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,371:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,373:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,373:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,377:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,378:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,379:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,380:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,382:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,382:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,386:INFO:Calculating mean and std
2025-06-11 19:07:21,387:INFO:Creating metrics dataframe
2025-06-11 19:07:21,391:INFO:Uploading results into container
2025-06-11 19:07:21,391:INFO:Uploading model into container now
2025-06-11 19:07:21,391:INFO:_master_model_container: 4
2025-06-11 19:07:21,391:INFO:_display_container: 2
2025-06-11 19:07:21,391:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best')
2025-06-11 19:07:21,391:INFO:create_model() successfully completed......................................
2025-06-11 19:07:21,571:INFO:SubProcess create_model() end ==================================
2025-06-11 19:07:21,571:INFO:Creating metrics dataframe
2025-06-11 19:07:21,574:INFO:Initializing SVM - Linear Kernel
2025-06-11 19:07:21,574:INFO:Total runtime is 0.17530181805292766 minutes
2025-06-11 19:07:21,575:INFO:SubProcess create_model() called ==================================
2025-06-11 19:07:21,575:INFO:Initializing create_model()
2025-06-11 19:07:21,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0A98F9F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:21,575:INFO:Checking exceptions
2025-06-11 19:07:21,575:INFO:Importing libraries
2025-06-11 19:07:21,575:INFO:Copying training dataset
2025-06-11 19:07:21,578:INFO:Defining folds
2025-06-11 19:07:21,578:INFO:Declaring metric variables
2025-06-11 19:07:21,579:INFO:Importing untrained model
2025-06-11 19:07:21,581:INFO:SVM - Linear Kernel Imported successfully
2025-06-11 19:07:21,582:INFO:Starting cross validation
2025-06-11 19:07:21,584:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:07:21,722:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:07:21,722:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:07:21,723:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:07:21,723:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,724:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,724:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,724:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,725:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:07:21,726:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:07:21,726:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:07:21,726:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,726:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,726:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,727:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,727:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,727:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,727:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:21,727:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,728:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:21,728:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:21,729:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,729:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:07:21,729:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,730:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,730:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,730:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,731:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,731:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,731:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,731:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:21,733:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,733:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,733:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,734:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,735:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:21,737:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,737:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:07:21,739:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,741:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:07:21,741:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,742:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,743:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:21,744:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,745:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,747:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:21,750:INFO:Calculating mean and std
2025-06-11 19:07:21,751:INFO:Creating metrics dataframe
2025-06-11 19:07:21,754:INFO:Uploading results into container
2025-06-11 19:07:21,754:INFO:Uploading model into container now
2025-06-11 19:07:21,755:INFO:_master_model_container: 5
2025-06-11 19:07:21,755:INFO:_display_container: 2
2025-06-11 19:07:21,756:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=404, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-11 19:07:21,756:INFO:create_model() successfully completed......................................
2025-06-11 19:07:21,933:INFO:SubProcess create_model() end ==================================
2025-06-11 19:07:21,933:INFO:Creating metrics dataframe
2025-06-11 19:07:21,937:INFO:Initializing Ridge Classifier
2025-06-11 19:07:21,937:INFO:Total runtime is 0.18135050535202027 minutes
2025-06-11 19:07:21,938:INFO:SubProcess create_model() called ==================================
2025-06-11 19:07:21,938:INFO:Initializing create_model()
2025-06-11 19:07:21,938:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0A98F9F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:21,938:INFO:Checking exceptions
2025-06-11 19:07:21,938:INFO:Importing libraries
2025-06-11 19:07:21,938:INFO:Copying training dataset
2025-06-11 19:07:21,941:INFO:Defining folds
2025-06-11 19:07:21,941:INFO:Declaring metric variables
2025-06-11 19:07:21,942:INFO:Importing untrained model
2025-06-11 19:07:21,943:INFO:Ridge Classifier Imported successfully
2025-06-11 19:07:21,943:INFO:Starting cross validation
2025-06-11 19:07:21,947:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:07:22,039:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:07:22,040:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:07:22,041:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,041:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,042:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:07:22,042:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,043:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,043:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,045:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,046:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,046:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,049:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,076:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:07:22,078:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,080:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,082:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,126:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:07:22,127:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:07:22,127:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:07:22,127:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:07:22,128:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,128:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,129:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,129:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:07:22,129:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,130:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:07:22,130:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,131:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,131:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,131:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,132:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,132:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,133:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,133:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,133:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,133:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,133:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,134:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,135:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,138:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,144:INFO:Calculating mean and std
2025-06-11 19:07:22,145:INFO:Creating metrics dataframe
2025-06-11 19:07:22,149:INFO:Uploading results into container
2025-06-11 19:07:22,149:INFO:Uploading model into container now
2025-06-11 19:07:22,150:INFO:_master_model_container: 6
2025-06-11 19:07:22,150:INFO:_display_container: 2
2025-06-11 19:07:22,150:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=404, solver='auto',
                tol=0.0001)
2025-06-11 19:07:22,150:INFO:create_model() successfully completed......................................
2025-06-11 19:07:22,329:INFO:SubProcess create_model() end ==================================
2025-06-11 19:07:22,329:INFO:Creating metrics dataframe
2025-06-11 19:07:22,339:INFO:Initializing Random Forest Classifier
2025-06-11 19:07:22,339:INFO:Total runtime is 0.18805448214213055 minutes
2025-06-11 19:07:22,340:INFO:SubProcess create_model() called ==================================
2025-06-11 19:07:22,340:INFO:Initializing create_model()
2025-06-11 19:07:22,340:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0A98F9F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:22,340:INFO:Checking exceptions
2025-06-11 19:07:22,340:INFO:Importing libraries
2025-06-11 19:07:22,341:INFO:Copying training dataset
2025-06-11 19:07:22,347:INFO:Defining folds
2025-06-11 19:07:22,347:INFO:Declaring metric variables
2025-06-11 19:07:22,347:INFO:Importing untrained model
2025-06-11 19:07:22,348:INFO:Random Forest Classifier Imported successfully
2025-06-11 19:07:22,348:INFO:Starting cross validation
2025-06-11 19:07:22,349:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:07:22,732:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,732:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,732:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,733:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,734:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,735:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,736:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,737:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,738:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,739:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,739:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,739:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,740:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,742:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,742:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,742:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,742:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,748:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,748:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,751:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,755:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,757:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,760:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,762:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,771:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,774:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,774:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,776:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,776:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,779:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:22,783:INFO:Calculating mean and std
2025-06-11 19:07:22,784:INFO:Creating metrics dataframe
2025-06-11 19:07:22,787:INFO:Uploading results into container
2025-06-11 19:07:22,787:INFO:Uploading model into container now
2025-06-11 19:07:22,787:INFO:_master_model_container: 7
2025-06-11 19:07:22,787:INFO:_display_container: 2
2025-06-11 19:07:22,788:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=404, verbose=0, warm_start=False)
2025-06-11 19:07:22,788:INFO:create_model() successfully completed......................................
2025-06-11 19:07:22,970:INFO:SubProcess create_model() end ==================================
2025-06-11 19:07:22,971:INFO:Creating metrics dataframe
2025-06-11 19:07:22,982:INFO:Initializing Quadratic Discriminant Analysis
2025-06-11 19:07:22,982:INFO:Total runtime is 0.19877371390660606 minutes
2025-06-11 19:07:22,983:INFO:SubProcess create_model() called ==================================
2025-06-11 19:07:22,984:INFO:Initializing create_model()
2025-06-11 19:07:22,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0A98F9F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:22,984:INFO:Checking exceptions
2025-06-11 19:07:22,984:INFO:Importing libraries
2025-06-11 19:07:22,984:INFO:Copying training dataset
2025-06-11 19:07:22,988:INFO:Defining folds
2025-06-11 19:07:22,989:INFO:Declaring metric variables
2025-06-11 19:07:22,989:INFO:Importing untrained model
2025-06-11 19:07:22,989:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-11 19:07:22,989:INFO:Starting cross validation
2025-06-11 19:07:22,990:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:07:23,060:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:07:23,060:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:07:23,060:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:07:23,061:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:07:23,062:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:07:23,062:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:07:23,066:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:07:23,066:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:07:23,089:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,090:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,090:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,091:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,092:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,092:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,092:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,092:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,092:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,093:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,093:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,093:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,093:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,094:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,094:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,095:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,095:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,095:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,096:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,096:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,096:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,096:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,097:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,098:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,098:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,099:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,099:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,100:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,102:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,102:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,107:INFO:Calculating mean and std
2025-06-11 19:07:23,108:INFO:Creating metrics dataframe
2025-06-11 19:07:23,110:INFO:Uploading results into container
2025-06-11 19:07:23,111:INFO:Uploading model into container now
2025-06-11 19:07:23,111:INFO:_master_model_container: 8
2025-06-11 19:07:23,111:INFO:_display_container: 2
2025-06-11 19:07:23,111:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-11 19:07:23,111:INFO:create_model() successfully completed......................................
2025-06-11 19:07:23,297:INFO:SubProcess create_model() end ==================================
2025-06-11 19:07:23,297:INFO:Creating metrics dataframe
2025-06-11 19:07:23,302:INFO:Initializing Ada Boost Classifier
2025-06-11 19:07:23,302:INFO:Total runtime is 0.2041122357050578 minutes
2025-06-11 19:07:23,302:INFO:SubProcess create_model() called ==================================
2025-06-11 19:07:23,302:INFO:Initializing create_model()
2025-06-11 19:07:23,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0A98F9F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:23,303:INFO:Checking exceptions
2025-06-11 19:07:23,303:INFO:Importing libraries
2025-06-11 19:07:23,303:INFO:Copying training dataset
2025-06-11 19:07:23,308:INFO:Defining folds
2025-06-11 19:07:23,308:INFO:Declaring metric variables
2025-06-11 19:07:23,309:INFO:Importing untrained model
2025-06-11 19:07:23,309:INFO:Ada Boost Classifier Imported successfully
2025-06-11 19:07:23,309:INFO:Starting cross validation
2025-06-11 19:07:23,310:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:07:23,532:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,536:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,537:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,538:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,539:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,539:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,539:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,540:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,540:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,540:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,541:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,542:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,542:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:23,542:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,542:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,542:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,543:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,543:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,543:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,544:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:23,544:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,545:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,545:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,545:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,546:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,548:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,559:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,561:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,564:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,565:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,567:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,568:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:23,569:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:23,573:INFO:Calculating mean and std
2025-06-11 19:07:23,573:INFO:Creating metrics dataframe
2025-06-11 19:07:23,577:INFO:Uploading results into container
2025-06-11 19:07:23,578:INFO:Uploading model into container now
2025-06-11 19:07:23,578:INFO:_master_model_container: 9
2025-06-11 19:07:23,578:INFO:_display_container: 2
2025-06-11 19:07:23,578:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=404)
2025-06-11 19:07:23,579:INFO:create_model() successfully completed......................................
2025-06-11 19:07:23,756:INFO:SubProcess create_model() end ==================================
2025-06-11 19:07:23,757:INFO:Creating metrics dataframe
2025-06-11 19:07:23,760:INFO:Initializing Gradient Boosting Classifier
2025-06-11 19:07:23,760:INFO:Total runtime is 0.21173981825510663 minutes
2025-06-11 19:07:23,760:INFO:SubProcess create_model() called ==================================
2025-06-11 19:07:23,760:INFO:Initializing create_model()
2025-06-11 19:07:23,760:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0A98F9F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:23,761:INFO:Checking exceptions
2025-06-11 19:07:23,761:INFO:Importing libraries
2025-06-11 19:07:23,761:INFO:Copying training dataset
2025-06-11 19:07:23,765:INFO:Defining folds
2025-06-11 19:07:23,765:INFO:Declaring metric variables
2025-06-11 19:07:23,766:INFO:Importing untrained model
2025-06-11 19:07:23,766:INFO:Gradient Boosting Classifier Imported successfully
2025-06-11 19:07:23,766:INFO:Starting cross validation
2025-06-11 19:07:23,766:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:07:24,540:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,542:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,542:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,544:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,544:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,544:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,545:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,546:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,547:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,547:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,548:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,548:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,549:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,549:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,549:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,549:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,550:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,550:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,551:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,551:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,551:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,551:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,552:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,552:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,554:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,554:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,555:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,564:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,566:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,567:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,571:INFO:Calculating mean and std
2025-06-11 19:07:24,572:INFO:Creating metrics dataframe
2025-06-11 19:07:24,574:INFO:Uploading results into container
2025-06-11 19:07:24,575:INFO:Uploading model into container now
2025-06-11 19:07:24,575:INFO:_master_model_container: 10
2025-06-11 19:07:24,575:INFO:_display_container: 2
2025-06-11 19:07:24,575:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=404, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-11 19:07:24,575:INFO:create_model() successfully completed......................................
2025-06-11 19:07:24,755:INFO:SubProcess create_model() end ==================================
2025-06-11 19:07:24,755:INFO:Creating metrics dataframe
2025-06-11 19:07:24,759:INFO:Initializing Linear Discriminant Analysis
2025-06-11 19:07:24,759:INFO:Total runtime is 0.22838218212127687 minutes
2025-06-11 19:07:24,759:INFO:SubProcess create_model() called ==================================
2025-06-11 19:07:24,760:INFO:Initializing create_model()
2025-06-11 19:07:24,760:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0A98F9F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:24,760:INFO:Checking exceptions
2025-06-11 19:07:24,760:INFO:Importing libraries
2025-06-11 19:07:24,760:INFO:Copying training dataset
2025-06-11 19:07:24,765:INFO:Defining folds
2025-06-11 19:07:24,766:INFO:Declaring metric variables
2025-06-11 19:07:24,766:INFO:Importing untrained model
2025-06-11 19:07:24,766:INFO:Linear Discriminant Analysis Imported successfully
2025-06-11 19:07:24,766:INFO:Starting cross validation
2025-06-11 19:07:24,767:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:07:24,863:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,865:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,865:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,865:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,868:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,868:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,868:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,870:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,871:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,871:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,872:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,874:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,875:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,877:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,877:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,878:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,879:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,880:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,881:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,882:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,882:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,884:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,885:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,886:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,888:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,890:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,896:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,898:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,901:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:24,904:INFO:Calculating mean and std
2025-06-11 19:07:24,905:INFO:Creating metrics dataframe
2025-06-11 19:07:24,908:INFO:Uploading results into container
2025-06-11 19:07:24,909:INFO:Uploading model into container now
2025-06-11 19:07:24,909:INFO:_master_model_container: 11
2025-06-11 19:07:24,909:INFO:_display_container: 2
2025-06-11 19:07:24,910:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-11 19:07:24,910:INFO:create_model() successfully completed......................................
2025-06-11 19:07:25,085:INFO:SubProcess create_model() end ==================================
2025-06-11 19:07:25,086:INFO:Creating metrics dataframe
2025-06-11 19:07:25,093:INFO:Initializing Extra Trees Classifier
2025-06-11 19:07:25,093:INFO:Total runtime is 0.23395813703536988 minutes
2025-06-11 19:07:25,093:INFO:SubProcess create_model() called ==================================
2025-06-11 19:07:25,094:INFO:Initializing create_model()
2025-06-11 19:07:25,094:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0A98F9F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:25,094:INFO:Checking exceptions
2025-06-11 19:07:25,094:INFO:Importing libraries
2025-06-11 19:07:25,094:INFO:Copying training dataset
2025-06-11 19:07:25,099:INFO:Defining folds
2025-06-11 19:07:25,099:INFO:Declaring metric variables
2025-06-11 19:07:25,100:INFO:Importing untrained model
2025-06-11 19:07:25,101:INFO:Extra Trees Classifier Imported successfully
2025-06-11 19:07:25,101:INFO:Starting cross validation
2025-06-11 19:07:25,103:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:07:25,455:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,456:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,457:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,457:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,458:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,459:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,461:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,461:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,462:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,465:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,466:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,467:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,467:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,469:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,470:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,471:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,471:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,473:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,474:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,476:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,509:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,511:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,515:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,516:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,519:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,522:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,542:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,544:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,546:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:25,550:INFO:Calculating mean and std
2025-06-11 19:07:25,550:INFO:Creating metrics dataframe
2025-06-11 19:07:25,553:INFO:Uploading results into container
2025-06-11 19:07:25,553:INFO:Uploading model into container now
2025-06-11 19:07:25,554:INFO:_master_model_container: 12
2025-06-11 19:07:25,554:INFO:_display_container: 2
2025-06-11 19:07:25,555:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=404, verbose=0, warm_start=False)
2025-06-11 19:07:25,555:INFO:create_model() successfully completed......................................
2025-06-11 19:07:25,742:INFO:SubProcess create_model() end ==================================
2025-06-11 19:07:25,742:INFO:Creating metrics dataframe
2025-06-11 19:07:25,751:INFO:Initializing Light Gradient Boosting Machine
2025-06-11 19:07:25,751:INFO:Total runtime is 0.24492640495300294 minutes
2025-06-11 19:07:25,751:INFO:SubProcess create_model() called ==================================
2025-06-11 19:07:25,751:INFO:Initializing create_model()
2025-06-11 19:07:25,751:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0A98F9F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:25,751:INFO:Checking exceptions
2025-06-11 19:07:25,752:INFO:Importing libraries
2025-06-11 19:07:25,752:INFO:Copying training dataset
2025-06-11 19:07:25,756:INFO:Defining folds
2025-06-11 19:07:25,756:INFO:Declaring metric variables
2025-06-11 19:07:25,756:INFO:Importing untrained model
2025-06-11 19:07:25,757:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-11 19:07:25,757:INFO:Starting cross validation
2025-06-11 19:07:25,758:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:07:27,413:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:27,415:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:27,418:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:27,636:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:27,640:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:27,643:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:27,722:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:27,724:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:27,727:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:27,902:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:27,905:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:27,908:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:27,930:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:27,933:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:27,936:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:27,995:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:28,004:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:28,006:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:28,007:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:28,010:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:28,013:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:28,045:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:28,047:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:28,049:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:28,057:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:28,059:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:28,062:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:28,065:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:28,068:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:28,070:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:28,074:INFO:Calculating mean and std
2025-06-11 19:07:28,075:INFO:Creating metrics dataframe
2025-06-11 19:07:28,079:INFO:Uploading results into container
2025-06-11 19:07:28,079:INFO:Uploading model into container now
2025-06-11 19:07:28,079:INFO:_master_model_container: 13
2025-06-11 19:07:28,080:INFO:_display_container: 2
2025-06-11 19:07:28,080:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=404, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-11 19:07:28,080:INFO:create_model() successfully completed......................................
2025-06-11 19:07:28,263:INFO:SubProcess create_model() end ==================================
2025-06-11 19:07:28,263:INFO:Creating metrics dataframe
2025-06-11 19:07:28,269:INFO:Initializing CatBoost Classifier
2025-06-11 19:07:28,269:INFO:Total runtime is 0.2868958632151286 minutes
2025-06-11 19:07:28,269:INFO:SubProcess create_model() called ==================================
2025-06-11 19:07:28,269:INFO:Initializing create_model()
2025-06-11 19:07:28,269:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0A98F9F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:28,269:INFO:Checking exceptions
2025-06-11 19:07:28,269:INFO:Importing libraries
2025-06-11 19:07:28,269:INFO:Copying training dataset
2025-06-11 19:07:28,273:INFO:Defining folds
2025-06-11 19:07:28,273:INFO:Declaring metric variables
2025-06-11 19:07:28,273:INFO:Importing untrained model
2025-06-11 19:07:28,273:INFO:CatBoost Classifier Imported successfully
2025-06-11 19:07:28,273:INFO:Starting cross validation
2025-06-11 19:07:28,274:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:07:31,790:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:31,792:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:31,795:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:31,808:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:31,810:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:31,812:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:31,815:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\model_selection\_validation.py:378: FitFailedWarning: 
8 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
8 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\joblib\memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\catboost\core.py", line 5245, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline, use_best_model,
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\catboost\core.py", line 2410, in _fit
    self._train(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\catboost\core.py", line 1790, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 5023, in _catboost._CatBoost._train
  File "_catboost.pyx", line 5072, in _catboost._CatBoost._train
_catboost.CatBoostError: catboost/libs/train_lib/dir_helper.cpp:20: Can't create train working dir: catboost_info


2025-06-11 19:07:31,816:INFO:Calculating mean and std
2025-06-11 19:07:31,817:INFO:Creating metrics dataframe
2025-06-11 19:07:31,821:INFO:Uploading results into container
2025-06-11 19:07:31,822:INFO:Uploading model into container now
2025-06-11 19:07:31,822:INFO:_master_model_container: 14
2025-06-11 19:07:31,822:INFO:_display_container: 2
2025-06-11 19:07:31,822:INFO:<catboost.core.CatBoostClassifier object at 0x000001F0A98FAE50>
2025-06-11 19:07:31,822:INFO:create_model() successfully completed......................................
2025-06-11 19:07:31,999:WARNING:create_model() for <catboost.core.CatBoostClassifier object at 0x000001F0A98FAE50> raised an exception or returned all 0.0, trying without fit_kwargs:
2025-06-11 19:07:32,002:WARNING:Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2025-06-11 19:07:32,002:INFO:Initializing create_model()
2025-06-11 19:07:32,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0A98F9F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:32,002:INFO:Checking exceptions
2025-06-11 19:07:32,002:INFO:Importing libraries
2025-06-11 19:07:32,002:INFO:Copying training dataset
2025-06-11 19:07:32,006:INFO:Defining folds
2025-06-11 19:07:32,006:INFO:Declaring metric variables
2025-06-11 19:07:32,006:INFO:Importing untrained model
2025-06-11 19:07:32,006:INFO:CatBoost Classifier Imported successfully
2025-06-11 19:07:32,007:INFO:Starting cross validation
2025-06-11 19:07:32,007:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:07:39,069:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,072:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,074:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,196:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,198:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,201:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,203:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,207:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,209:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,283:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,286:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,289:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,293:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,295:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,298:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,420:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,420:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,421:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,423:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,423:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,424:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,425:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,426:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,427:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,444:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,447:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,449:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,488:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,491:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,493:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,496:INFO:Calculating mean and std
2025-06-11 19:07:39,497:INFO:Creating metrics dataframe
2025-06-11 19:07:39,501:INFO:Uploading results into container
2025-06-11 19:07:39,502:INFO:Uploading model into container now
2025-06-11 19:07:39,502:INFO:_master_model_container: 15
2025-06-11 19:07:39,502:INFO:_display_container: 2
2025-06-11 19:07:39,502:INFO:<catboost.core.CatBoostClassifier object at 0x000001F0A9BEE610>
2025-06-11 19:07:39,503:INFO:create_model() successfully completed......................................
2025-06-11 19:07:39,698:INFO:SubProcess create_model() end ==================================
2025-06-11 19:07:39,698:INFO:Creating metrics dataframe
2025-06-11 19:07:39,703:INFO:Initializing Dummy Classifier
2025-06-11 19:07:39,703:INFO:Total runtime is 0.4774601538976034 minutes
2025-06-11 19:07:39,703:INFO:SubProcess create_model() called ==================================
2025-06-11 19:07:39,704:INFO:Initializing create_model()
2025-06-11 19:07:39,704:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F0A98F9F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:39,704:INFO:Checking exceptions
2025-06-11 19:07:39,704:INFO:Importing libraries
2025-06-11 19:07:39,704:INFO:Copying training dataset
2025-06-11 19:07:39,708:INFO:Defining folds
2025-06-11 19:07:39,708:INFO:Declaring metric variables
2025-06-11 19:07:39,708:INFO:Importing untrained model
2025-06-11 19:07:39,708:INFO:Dummy Classifier Imported successfully
2025-06-11 19:07:39,708:INFO:Starting cross validation
2025-06-11 19:07:39,710:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:07:39,790:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,792:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,794:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,794:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:39,795:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,796:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,798:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:39,798:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,798:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,798:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,801:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,802:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,802:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:39,803:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,804:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:39,804:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,804:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:39,804:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,805:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,805:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,805:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,806:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,807:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,807:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,808:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,808:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,808:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:39,808:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:39,809:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:39,810:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:39,810:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,810:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,811:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,811:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,812:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,816:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,817:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:07:39,818:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:07:39,824:INFO:Calculating mean and std
2025-06-11 19:07:39,825:INFO:Creating metrics dataframe
2025-06-11 19:07:39,828:INFO:Uploading results into container
2025-06-11 19:07:39,829:INFO:Uploading model into container now
2025-06-11 19:07:39,829:INFO:_master_model_container: 16
2025-06-11 19:07:39,829:INFO:_display_container: 2
2025-06-11 19:07:39,830:INFO:DummyClassifier(constant=None, random_state=404, strategy='prior')
2025-06-11 19:07:39,830:INFO:create_model() successfully completed......................................
2025-06-11 19:07:40,017:INFO:SubProcess create_model() end ==================================
2025-06-11 19:07:40,017:INFO:Creating metrics dataframe
2025-06-11 19:07:40,024:INFO:Initializing create_model()
2025-06-11 19:07:40,024:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:07:40,024:INFO:Checking exceptions
2025-06-11 19:07:40,025:INFO:Importing libraries
2025-06-11 19:07:40,025:INFO:Copying training dataset
2025-06-11 19:07:40,027:INFO:Defining folds
2025-06-11 19:07:40,027:INFO:Declaring metric variables
2025-06-11 19:07:40,028:INFO:Importing untrained model
2025-06-11 19:07:40,028:INFO:Declaring custom model
2025-06-11 19:07:40,028:INFO:Decision Tree Classifier Imported successfully
2025-06-11 19:07:40,029:INFO:Cross validation set to False
2025-06-11 19:07:40,029:INFO:Fitting Model
2025-06-11 19:07:40,062:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best')
2025-06-11 19:07:40,062:INFO:create_model() successfully completed......................................
2025-06-11 19:07:40,238:INFO:Creating Dashboard logs
2025-06-11 19:07:40,238:INFO:Model: Decision Tree Classifier
2025-06-11 19:07:40,325:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 404, 'splitter': 'best'}
2025-06-11 19:07:40,568:INFO:Initializing predict_model()
2025-06-11 19:07:40,568:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0A99ACAE0>)
2025-06-11 19:07:40,568:INFO:Checking exceptions
2025-06-11 19:07:40,568:INFO:Preloading libraries
2025-06-11 19:07:40,686:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-06-11 19:07:40,692:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-06-11 19:07:40,695:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-06-11 19:07:40,899:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml

2025-06-11 19:07:40,946:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:07:40,947:INFO:Creating Dashboard logs
2025-06-11 19:07:40,948:INFO:Model: Random Forest Classifier
2025-06-11 19:07:41,007:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 404, 'verbose': 0, 'warm_start': False}
2025-06-11 19:07:41,306:ERROR:_log_model() for RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=404, verbose=0, warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:07:41,307:INFO:Creating Dashboard logs
2025-06-11 19:07:41,307:INFO:Model: CatBoost Classifier
2025-06-11 19:07:41,389:WARNING:Couldn't get params for model. Exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 78, in log_model
    params = params.get_all_params()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\catboost\core.py", line 3504, in get_all_params
    raise CatBoostError("There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.")
_catboost.CatBoostError: There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.

2025-06-11 19:07:41,389:INFO:Logged params: {}
2025-06-11 19:07:41,807:ERROR:_log_model() for <catboost.core.CatBoostClassifier object at 0x000001F0A9BEE610> raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:07:41,808:INFO:Creating Dashboard logs
2025-06-11 19:07:41,809:INFO:Model: Gradient Boosting Classifier
2025-06-11 19:07:41,890:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 404, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-11 19:07:42,294:ERROR:_log_model() for GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=404, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:07:42,295:INFO:Creating Dashboard logs
2025-06-11 19:07:42,296:INFO:Model: Light Gradient Boosting Machine
2025-06-11 19:07:42,359:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 404, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2025-06-11 19:07:42,941:ERROR:_log_model() for LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=404, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:07:42,942:INFO:Creating Dashboard logs
2025-06-11 19:07:42,942:INFO:Model: Extra Trees Classifier
2025-06-11 19:07:43,009:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 404, 'verbose': 0, 'warm_start': False}
2025-06-11 19:07:43,480:ERROR:_log_model() for ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=404, verbose=0, warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:07:43,481:INFO:Creating Dashboard logs
2025-06-11 19:07:43,482:INFO:Model: Naive Bayes
2025-06-11 19:07:43,542:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2025-06-11 19:07:44,091:ERROR:_log_model() for GaussianNB(priors=None, var_smoothing=1e-09) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:07:44,092:INFO:Creating Dashboard logs
2025-06-11 19:07:44,092:INFO:Model: Linear Discriminant Analysis
2025-06-11 19:07:44,162:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2025-06-11 19:07:44,806:ERROR:_log_model() for LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:07:44,808:INFO:Creating Dashboard logs
2025-06-11 19:07:44,808:INFO:Model: Ridge Classifier
2025-06-11 19:07:44,870:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 404, 'solver': 'auto', 'tol': 0.0001}
2025-06-11 19:07:45,579:ERROR:_log_model() for RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=404, solver='auto',
                tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:07:45,581:INFO:Creating Dashboard logs
2025-06-11 19:07:45,581:INFO:Model: K Neighbors Classifier
2025-06-11 19:07:45,673:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2025-06-11 19:07:46,390:ERROR:_log_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:07:46,391:INFO:Creating Dashboard logs
2025-06-11 19:07:46,392:INFO:Model: Logistic Regression
2025-06-11 19:07:46,450:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-06-11 19:07:47,248:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=404, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:07:47,249:INFO:Creating Dashboard logs
2025-06-11 19:07:47,249:INFO:Model: Ada Boost Classifier
2025-06-11 19:07:47,325:INFO:Logged params: {'algorithm': 'SAMME.R', 'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 404}
2025-06-11 19:07:48,198:ERROR:_log_model() for AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=404) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:07:48,199:INFO:Creating Dashboard logs
2025-06-11 19:07:48,199:INFO:Model: SVM - Linear Kernel
2025-06-11 19:07:48,278:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 404, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-11 19:07:49,206:ERROR:_log_model() for SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=404, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:07:49,208:INFO:Creating Dashboard logs
2025-06-11 19:07:49,208:INFO:Model: Dummy Classifier
2025-06-11 19:07:49,279:INFO:Logged params: {'constant': None, 'random_state': 404, 'strategy': 'prior'}
2025-06-11 19:07:50,208:ERROR:_log_model() for DummyClassifier(constant=None, random_state=404, strategy='prior') raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:07:50,209:INFO:Creating Dashboard logs
2025-06-11 19:07:50,210:INFO:Model: Quadratic Discriminant Analysis
2025-06-11 19:07:50,280:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2025-06-11 19:07:51,104:ERROR:_log_model() for QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:07:51,110:INFO:_master_model_container: 16
2025-06-11 19:07:51,111:INFO:_display_container: 2
2025-06-11 19:07:51,111:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best')
2025-06-11 19:07:51,111:INFO:compare_models() successfully completed......................................
2025-06-11 19:07:51,111:INFO:Initializing evaluate_model()
2025-06-11 19:07:51,111:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-06-11 19:07:51,283:INFO:Initializing plot_model()
2025-06-11 19:07:51,283:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F0A08BFE50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-06-11 19:07:51,283:INFO:Checking exceptions
2025-06-11 19:07:51,284:INFO:Preloading libraries
2025-06-11 19:07:51,285:INFO:Copying training dataset
2025-06-11 19:07:51,285:INFO:Plot type: pipeline
2025-06-11 19:09:54,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:09:54,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:09:54,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:09:54,477:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:09:56,466:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\utils\autologging_utils\versioning.py:6: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  from pkg_resources import resource_filename

2025-06-11 19:09:56,787:INFO:Initializing load_model()
2025-06-11 19:09:56,787:INFO:load_model(model_name=credit_risk_model, platform=None, authentication=None, verbose=True)
2025-06-11 19:11:02,613:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:11:02,613:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:11:02,613:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:11:02,613:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:11:04,464:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\utils\autologging_utils\versioning.py:6: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  from pkg_resources import resource_filename

2025-06-11 19:11:36,633:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:11:36,633:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:11:36,633:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:11:36,633:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:11:38,445:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\utils\autologging_utils\versioning.py:6: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  from pkg_resources import resource_filename

2025-06-11 19:15:10,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:15:10,750:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:15:10,750:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:15:10,750:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:15:12,675:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\utils\autologging_utils\versioning.py:6: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  from pkg_resources import resource_filename

2025-06-11 19:15:15,211:INFO:PyCaret ClassificationExperiment
2025-06-11 19:15:15,211:INFO:Logging name: riesgo_credito_multiclase
2025-06-11 19:15:15,211:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-11 19:15:15,211:INFO:version 3.2.0
2025-06-11 19:15:15,211:INFO:Initializing setup()
2025-06-11 19:15:15,211:INFO:self.USI: 73ac
2025-06-11 19:15:15,211:INFO:self._variable_keys: {'_ml_usecase', 'y_test', 'log_plots_param', 'X', 'exp_id', 'data', 'target_param', 'fold_shuffle_param', 'html_param', 'is_multiclass', 'exp_name_log', 'y', 'X_train', 'fold_generator', 'logging_param', 'USI', 'y_train', 'gpu_param', 'fix_imbalance', '_available_plots', 'gpu_n_jobs_param', 'X_test', 'pipeline', 'fold_groups_param', 'idx', 'memory', 'seed', 'n_jobs_param'}
2025-06-11 19:15:15,211:INFO:Checking environment
2025-06-11 19:15:15,211:INFO:python_version: 3.11.9
2025-06-11 19:15:15,211:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-06-11 19:15:15,211:INFO:machine: AMD64
2025-06-11 19:15:15,238:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-11 19:15:15,251:INFO:Memory: svmem(total=33554628608, available=13203406848, percent=60.7, used=20351221760, free=13203406848)
2025-06-11 19:15:15,251:INFO:Physical Core: 6
2025-06-11 19:15:15,251:INFO:Logical Core: 12
2025-06-11 19:15:15,251:INFO:Checking libraries
2025-06-11 19:15:15,251:INFO:System:
2025-06-11 19:15:15,251:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-06-11 19:15:15,251:INFO:executable: C:\Users\amonreal\Documents\amlbash\.venv\Scripts\python.exe
2025-06-11 19:15:15,252:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-11 19:15:15,252:INFO:PyCaret required dependencies:
2025-06-11 19:15:15,987:INFO:                 pip: 24.0
2025-06-11 19:15:15,988:INFO:          setuptools: 80.9.0
2025-06-11 19:15:15,988:INFO:             pycaret: 3.2.0
2025-06-11 19:15:15,988:INFO:             IPython: 9.3.0
2025-06-11 19:15:15,988:INFO:          ipywidgets: 8.1.7
2025-06-11 19:15:15,988:INFO:                tqdm: 4.67.1
2025-06-11 19:15:15,988:INFO:               numpy: 1.25.2
2025-06-11 19:15:15,988:INFO:              pandas: 1.5.3
2025-06-11 19:15:15,988:INFO:              jinja2: 3.1.6
2025-06-11 19:15:15,988:INFO:               scipy: 1.10.1
2025-06-11 19:15:15,988:INFO:              joblib: 1.2.0
2025-06-11 19:15:15,988:INFO:             sklearn: 1.2.2
2025-06-11 19:15:15,988:INFO:                pyod: 2.0.5
2025-06-11 19:15:15,988:INFO:            imblearn: 0.12.4
2025-06-11 19:15:15,988:INFO:   category_encoders: 2.7.0
2025-06-11 19:15:15,988:INFO:            lightgbm: 4.6.0
2025-06-11 19:15:15,988:INFO:               numba: 0.58.1
2025-06-11 19:15:15,988:INFO:            requests: 2.32.4
2025-06-11 19:15:15,988:INFO:          matplotlib: 3.6.0
2025-06-11 19:15:15,988:INFO:          scikitplot: 0.3.7
2025-06-11 19:15:15,988:INFO:         yellowbrick: 1.5
2025-06-11 19:15:15,988:INFO:              plotly: 5.24.1
2025-06-11 19:15:15,988:INFO:    plotly-resampler: Not installed
2025-06-11 19:15:15,988:INFO:             kaleido: 0.2.1
2025-06-11 19:15:15,988:INFO:           schemdraw: 0.15
2025-06-11 19:15:15,988:INFO:         statsmodels: 0.14.4
2025-06-11 19:15:15,988:INFO:              sktime: 0.21.1
2025-06-11 19:15:15,988:INFO:               tbats: 1.1.3
2025-06-11 19:15:15,988:INFO:            pmdarima: 2.0.4
2025-06-11 19:15:15,988:INFO:              psutil: 7.0.0
2025-06-11 19:15:15,988:INFO:          markupsafe: 2.1.5
2025-06-11 19:15:15,988:INFO:             pickle5: Not installed
2025-06-11 19:15:15,988:INFO:         cloudpickle: 2.2.1
2025-06-11 19:15:15,988:INFO:         deprecation: 2.1.0
2025-06-11 19:15:15,988:INFO:              xxhash: 3.5.0
2025-06-11 19:15:15,988:INFO:           wurlitzer: Not installed
2025-06-11 19:15:15,989:INFO:PyCaret optional dependencies:
2025-06-11 19:15:19,308:INFO:                shap: 0.47.2
2025-06-11 19:15:19,308:INFO:           interpret: 0.6.11
2025-06-11 19:15:19,308:INFO:                umap: 0.5.7
2025-06-11 19:15:19,308:INFO:     ydata_profiling: 4.6.0
2025-06-11 19:15:19,308:INFO:  explainerdashboard: 0.5.1
2025-06-11 19:15:19,308:INFO:             autoviz: Not installed
2025-06-11 19:15:19,308:INFO:           fairlearn: 0.7.0
2025-06-11 19:15:19,308:INFO:          deepchecks: Not installed
2025-06-11 19:15:19,308:INFO:             xgboost: Not installed
2025-06-11 19:15:19,308:INFO:            catboost: 1.2.8
2025-06-11 19:15:19,309:INFO:              kmodes: 0.12.2
2025-06-11 19:15:19,309:INFO:             mlxtend: 0.23.1
2025-06-11 19:15:19,309:INFO:       statsforecast: 1.5.0
2025-06-11 19:15:19,309:INFO:        tune_sklearn: Not installed
2025-06-11 19:15:19,309:INFO:                 ray: Not installed
2025-06-11 19:15:19,309:INFO:            hyperopt: 0.2.7
2025-06-11 19:15:19,309:INFO:              optuna: 4.3.0
2025-06-11 19:15:19,309:INFO:               skopt: 0.10.2
2025-06-11 19:15:19,309:INFO:              mlflow: 2.22.0
2025-06-11 19:15:19,309:INFO:              gradio: 3.50.2
2025-06-11 19:15:19,309:INFO:             fastapi: 0.115.12
2025-06-11 19:15:19,309:INFO:             uvicorn: 0.34.2
2025-06-11 19:15:19,309:INFO:              m2cgen: 0.10.0
2025-06-11 19:15:19,309:INFO:           evidently: 0.2.8
2025-06-11 19:15:19,309:INFO:               fugue: 0.8.6
2025-06-11 19:15:19,309:INFO:           streamlit: Not installed
2025-06-11 19:15:19,309:INFO:             prophet: Not installed
2025-06-11 19:15:19,309:INFO:None
2025-06-11 19:15:19,309:INFO:Set up data.
2025-06-11 19:15:19,317:INFO:Set up folding strategy.
2025-06-11 19:15:19,317:INFO:Set up train/test split.
2025-06-11 19:15:19,323:INFO:Set up index.
2025-06-11 19:15:19,323:INFO:Assigning column types.
2025-06-11 19:15:19,326:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-11 19:15:19,366:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:15:19,369:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-11 19:15:19,399:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:15:19,399:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:15:19,470:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:15:19,472:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-11 19:15:19,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:15:19,493:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:15:19,494:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-11 19:15:19,531:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-11 19:15:19,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:15:19,558:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:15:19,612:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-11 19:15:19,633:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:15:19,633:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:15:19,634:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-11 19:15:19,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:15:19,689:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:15:19,742:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:15:19,742:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:15:19,744:INFO:Preparing preprocessing pipeline...
2025-06-11 19:15:19,745:INFO:Set up label encoding.
2025-06-11 19:15:19,746:INFO:Set up simple imputation.
2025-06-11 19:15:19,747:INFO:Set up encoding of categorical features.
2025-06-11 19:15:19,826:INFO:Finished creating preprocessing pipeline.
2025-06-11 19:15:19,832:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-11 19:15:19,832:INFO:Creating final display dataframe.
2025-06-11 19:15:19,975:INFO:Setup _display_container:                     Description                       Value
0                    Session id                         404
1                        Target                  risk_level
2                   Target type                  Multiclass
3                Target mapping  alto: 0, bajo: 1, medio: 2
4           Original data shape                   (1000, 8)
5        Transformed data shape                  (1000, 12)
6   Transformed train set shape                   (700, 12)
7    Transformed test set shape                   (300, 12)
8              Numeric features                           6
9          Categorical features                           1
10                   Preprocess                        True
11              Imputation type                      simple
12           Numeric imputation                        mean
13       Categorical imputation                        mode
14     Maximum one-hot encoding                          25
15              Encoding method                        None
16               Fold Generator             StratifiedKFold
17                  Fold Number                          10
18                     CPU Jobs                          -1
19                      Use GPU                       False
20               Log Experiment                MlflowLogger
21              Experiment Name   riesgo_credito_multiclase
22                          USI                        73ac
2025-06-11 19:15:20,058:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:15:20,059:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:15:20,113:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:15:20,114:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:15:20,115:INFO:Logging experiment in loggers
2025-06-11 19:15:20,385:INFO:SubProcess save_model() called ==================================
2025-06-11 19:15:20,393:INFO:Initializing save_model()
2025-06-11 19:15:20,393:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\amonreal\AppData\Local\Temp\tmptayi9nzd\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-11 19:15:20,393:INFO:Adding model into prep_pipe
2025-06-11 19:15:20,393:WARNING:Only Model saved as it was a pipeline.
2025-06-11 19:15:20,398:INFO:C:\Users\amonreal\AppData\Local\Temp\tmptayi9nzd\Transformation Pipeline.pkl saved in current working directory
2025-06-11 19:15:20,402:INFO:Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-11 19:15:20,402:INFO:save_model() successfully completed......................................
2025-06-11 19:15:20,622:INFO:SubProcess save_model() end ==================================
2025-06-11 19:15:20,648:INFO:setup() successfully completed in 4.91s...............
2025-06-11 19:15:20,648:INFO:Initializing compare_models()
2025-06-11 19:15:20,648:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-06-11 19:15:20,648:INFO:Checking exceptions
2025-06-11 19:15:20,651:INFO:Preparing display monitor
2025-06-11 19:15:20,656:INFO:Initializing Logistic Regression
2025-06-11 19:15:20,656:INFO:Total runtime is 0.0 minutes
2025-06-11 19:15:20,657:INFO:SubProcess create_model() called ==================================
2025-06-11 19:15:20,658:INFO:Initializing create_model()
2025-06-11 19:15:20,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002919CFFA590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:15:20,659:INFO:Checking exceptions
2025-06-11 19:15:20,659:INFO:Importing libraries
2025-06-11 19:15:20,659:INFO:Copying training dataset
2025-06-11 19:15:20,667:INFO:Defining folds
2025-06-11 19:15:20,668:INFO:Declaring metric variables
2025-06-11 19:15:20,668:INFO:Importing untrained model
2025-06-11 19:15:20,669:INFO:Logistic Regression Imported successfully
2025-06-11 19:15:20,669:INFO:Starting cross validation
2025-06-11 19:15:20,671:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:15:26,132:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:15:26,132:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:15:26,157:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:15:26,160:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,161:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,163:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,164:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,165:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,167:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,179:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:15:26,185:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,187:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,190:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,192:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:15:26,207:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,211:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,214:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,220:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,223:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,224:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:15:26,226:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,255:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,258:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:15:26,260:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,262:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,274:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:15:26,287:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,288:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:15:26,290:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,292:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,302:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,304:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,306:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,316:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,318:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,320:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,322:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:15:26,345:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,348:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,350:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,354:INFO:Calculating mean and std
2025-06-11 19:15:26,355:INFO:Creating metrics dataframe
2025-06-11 19:15:26,358:INFO:Uploading results into container
2025-06-11 19:15:26,358:INFO:Uploading model into container now
2025-06-11 19:15:26,358:INFO:_master_model_container: 1
2025-06-11 19:15:26,360:INFO:_display_container: 2
2025-06-11 19:15:26,360:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=404, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-11 19:15:26,360:INFO:create_model() successfully completed......................................
2025-06-11 19:15:26,524:INFO:SubProcess create_model() end ==================================
2025-06-11 19:15:26,524:INFO:Creating metrics dataframe
2025-06-11 19:15:26,532:INFO:Initializing K Neighbors Classifier
2025-06-11 19:15:26,533:INFO:Total runtime is 0.0979357123374939 minutes
2025-06-11 19:15:26,533:INFO:SubProcess create_model() called ==================================
2025-06-11 19:15:26,533:INFO:Initializing create_model()
2025-06-11 19:15:26,534:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002919CFFA590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:15:26,534:INFO:Checking exceptions
2025-06-11 19:15:26,534:INFO:Importing libraries
2025-06-11 19:15:26,534:INFO:Copying training dataset
2025-06-11 19:15:26,539:INFO:Defining folds
2025-06-11 19:15:26,539:INFO:Declaring metric variables
2025-06-11 19:15:26,539:INFO:Importing untrained model
2025-06-11 19:15:26,540:INFO:K Neighbors Classifier Imported successfully
2025-06-11 19:15:26,540:INFO:Starting cross validation
2025-06-11 19:15:26,541:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:15:26,663:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,663:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,665:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,665:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,666:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,668:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,668:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,668:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,668:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,668:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,670:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,671:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:26,671:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,671:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,672:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,672:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,673:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,674:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,674:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,675:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:26,675:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,676:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,676:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:26,676:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,677:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,679:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:26,680:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:26,682:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,282:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,284:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,286:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:29,287:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,288:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,290:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,292:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,296:INFO:Calculating mean and std
2025-06-11 19:15:29,296:INFO:Creating metrics dataframe
2025-06-11 19:15:29,299:INFO:Uploading results into container
2025-06-11 19:15:29,299:INFO:Uploading model into container now
2025-06-11 19:15:29,300:INFO:_master_model_container: 2
2025-06-11 19:15:29,300:INFO:_display_container: 2
2025-06-11 19:15:29,300:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-11 19:15:29,300:INFO:create_model() successfully completed......................................
2025-06-11 19:15:29,459:INFO:SubProcess create_model() end ==================================
2025-06-11 19:15:29,460:INFO:Creating metrics dataframe
2025-06-11 19:15:29,463:INFO:Initializing Naive Bayes
2025-06-11 19:15:29,463:INFO:Total runtime is 0.14677901268005372 minutes
2025-06-11 19:15:29,463:INFO:SubProcess create_model() called ==================================
2025-06-11 19:15:29,463:INFO:Initializing create_model()
2025-06-11 19:15:29,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002919CFFA590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:15:29,463:INFO:Checking exceptions
2025-06-11 19:15:29,463:INFO:Importing libraries
2025-06-11 19:15:29,463:INFO:Copying training dataset
2025-06-11 19:15:29,466:INFO:Defining folds
2025-06-11 19:15:29,466:INFO:Declaring metric variables
2025-06-11 19:15:29,466:INFO:Importing untrained model
2025-06-11 19:15:29,466:INFO:Naive Bayes Imported successfully
2025-06-11 19:15:29,466:INFO:Starting cross validation
2025-06-11 19:15:29,467:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:15:29,543:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,545:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,547:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,554:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,556:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,557:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,557:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,557:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,559:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,559:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,559:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,563:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,563:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,564:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,565:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,565:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,565:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,567:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,567:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,567:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,567:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,568:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,568:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,569:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,570:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,571:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,571:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,573:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,573:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,575:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,578:INFO:Calculating mean and std
2025-06-11 19:15:29,579:INFO:Creating metrics dataframe
2025-06-11 19:15:29,582:INFO:Uploading results into container
2025-06-11 19:15:29,582:INFO:Uploading model into container now
2025-06-11 19:15:29,582:INFO:_master_model_container: 3
2025-06-11 19:15:29,582:INFO:_display_container: 2
2025-06-11 19:15:29,582:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-11 19:15:29,582:INFO:create_model() successfully completed......................................
2025-06-11 19:15:29,739:INFO:SubProcess create_model() end ==================================
2025-06-11 19:15:29,739:INFO:Creating metrics dataframe
2025-06-11 19:15:29,742:INFO:Initializing Decision Tree Classifier
2025-06-11 19:15:29,742:INFO:Total runtime is 0.15142750342686973 minutes
2025-06-11 19:15:29,742:INFO:SubProcess create_model() called ==================================
2025-06-11 19:15:29,742:INFO:Initializing create_model()
2025-06-11 19:15:29,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002919CFFA590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:15:29,743:INFO:Checking exceptions
2025-06-11 19:15:29,743:INFO:Importing libraries
2025-06-11 19:15:29,743:INFO:Copying training dataset
2025-06-11 19:15:29,745:INFO:Defining folds
2025-06-11 19:15:29,745:INFO:Declaring metric variables
2025-06-11 19:15:29,745:INFO:Importing untrained model
2025-06-11 19:15:29,745:INFO:Decision Tree Classifier Imported successfully
2025-06-11 19:15:29,746:INFO:Starting cross validation
2025-06-11 19:15:29,746:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:15:29,817:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,818:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,820:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,831:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,833:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,834:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,835:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,837:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,837:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,837:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,838:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,839:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,839:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,839:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,842:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,842:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,842:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,842:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,844:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,844:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,847:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,847:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,849:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,849:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,850:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,851:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,851:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,853:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:29,855:INFO:Calculating mean and std
2025-06-11 19:15:29,857:INFO:Creating metrics dataframe
2025-06-11 19:15:29,860:INFO:Uploading results into container
2025-06-11 19:15:29,860:INFO:Uploading model into container now
2025-06-11 19:15:29,860:INFO:_master_model_container: 4
2025-06-11 19:15:29,860:INFO:_display_container: 2
2025-06-11 19:15:29,860:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best')
2025-06-11 19:15:29,861:INFO:create_model() successfully completed......................................
2025-06-11 19:15:30,021:INFO:SubProcess create_model() end ==================================
2025-06-11 19:15:30,021:INFO:Creating metrics dataframe
2025-06-11 19:15:30,025:INFO:Initializing SVM - Linear Kernel
2025-06-11 19:15:30,025:INFO:Total runtime is 0.1561477343241374 minutes
2025-06-11 19:15:30,025:INFO:SubProcess create_model() called ==================================
2025-06-11 19:15:30,025:INFO:Initializing create_model()
2025-06-11 19:15:30,025:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002919CFFA590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:15:30,025:INFO:Checking exceptions
2025-06-11 19:15:30,025:INFO:Importing libraries
2025-06-11 19:15:30,025:INFO:Copying training dataset
2025-06-11 19:15:30,028:INFO:Defining folds
2025-06-11 19:15:30,028:INFO:Declaring metric variables
2025-06-11 19:15:30,028:INFO:Importing untrained model
2025-06-11 19:15:30,028:INFO:SVM - Linear Kernel Imported successfully
2025-06-11 19:15:30,029:INFO:Starting cross validation
2025-06-11 19:15:30,029:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:15:30,123:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:15:30,125:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,128:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,129:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:15:30,130:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:30,130:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,131:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,133:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,134:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:30,136:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,139:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:15:30,141:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,142:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:15:30,143:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:15:30,144:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,144:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,144:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,147:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,147:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,147:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:15:30,147:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,148:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,149:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,150:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,151:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,151:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:15:30,151:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:30,151:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,152:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,153:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:15:30,154:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,155:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,156:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,158:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,158:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:15:30,159:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:30,160:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,160:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:15:30,161:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,161:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,162:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,163:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,163:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:30,163:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:30,164:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,164:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,168:INFO:Calculating mean and std
2025-06-11 19:15:30,169:INFO:Creating metrics dataframe
2025-06-11 19:15:30,172:INFO:Uploading results into container
2025-06-11 19:15:30,172:INFO:Uploading model into container now
2025-06-11 19:15:30,172:INFO:_master_model_container: 5
2025-06-11 19:15:30,172:INFO:_display_container: 2
2025-06-11 19:15:30,173:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=404, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-11 19:15:30,173:INFO:create_model() successfully completed......................................
2025-06-11 19:15:30,330:INFO:SubProcess create_model() end ==================================
2025-06-11 19:15:30,330:INFO:Creating metrics dataframe
2025-06-11 19:15:30,334:INFO:Initializing Ridge Classifier
2025-06-11 19:15:30,334:INFO:Total runtime is 0.1612959941228231 minutes
2025-06-11 19:15:30,334:INFO:SubProcess create_model() called ==================================
2025-06-11 19:15:30,334:INFO:Initializing create_model()
2025-06-11 19:15:30,334:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002919CFFA590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:15:30,334:INFO:Checking exceptions
2025-06-11 19:15:30,334:INFO:Importing libraries
2025-06-11 19:15:30,334:INFO:Copying training dataset
2025-06-11 19:15:30,337:INFO:Defining folds
2025-06-11 19:15:30,337:INFO:Declaring metric variables
2025-06-11 19:15:30,337:INFO:Importing untrained model
2025-06-11 19:15:30,337:INFO:Ridge Classifier Imported successfully
2025-06-11 19:15:30,337:INFO:Starting cross validation
2025-06-11 19:15:30,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:15:30,451:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:15:30,453:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:15:30,453:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,454:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,455:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,457:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,458:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,458:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,459:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,460:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,463:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,468:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:15:30,469:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,474:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,476:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,486:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:15:30,487:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,489:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,492:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,493:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:15:30,493:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:15:30,494:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,495:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,496:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:15:30,496:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:15:30,497:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,497:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,497:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,499:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,499:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,500:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,500:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,501:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,501:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:15:30,503:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,504:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,506:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:30,509:INFO:Calculating mean and std
2025-06-11 19:15:30,511:INFO:Creating metrics dataframe
2025-06-11 19:15:30,514:INFO:Uploading results into container
2025-06-11 19:15:30,514:INFO:Uploading model into container now
2025-06-11 19:15:30,514:INFO:_master_model_container: 6
2025-06-11 19:15:30,514:INFO:_display_container: 2
2025-06-11 19:15:30,515:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=404, solver='auto',
                tol=0.0001)
2025-06-11 19:15:30,515:INFO:create_model() successfully completed......................................
2025-06-11 19:15:30,672:INFO:SubProcess create_model() end ==================================
2025-06-11 19:15:30,672:INFO:Creating metrics dataframe
2025-06-11 19:15:30,676:INFO:Initializing Random Forest Classifier
2025-06-11 19:15:30,676:INFO:Total runtime is 0.1669981638590495 minutes
2025-06-11 19:15:30,676:INFO:SubProcess create_model() called ==================================
2025-06-11 19:15:30,676:INFO:Initializing create_model()
2025-06-11 19:15:30,676:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002919CFFA590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:15:30,676:INFO:Checking exceptions
2025-06-11 19:15:30,676:INFO:Importing libraries
2025-06-11 19:15:30,676:INFO:Copying training dataset
2025-06-11 19:15:30,679:INFO:Defining folds
2025-06-11 19:15:30,679:INFO:Declaring metric variables
2025-06-11 19:15:30,680:INFO:Importing untrained model
2025-06-11 19:15:30,680:INFO:Random Forest Classifier Imported successfully
2025-06-11 19:15:30,681:INFO:Starting cross validation
2025-06-11 19:15:30,682:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:15:31,039:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,039:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,041:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,041:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,041:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,042:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,042:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,044:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,044:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,045:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,045:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,046:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,047:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,048:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,049:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,052:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,055:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,057:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,073:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,073:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,075:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,075:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,076:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,076:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,078:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,078:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,080:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,122:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,125:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,127:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,130:INFO:Calculating mean and std
2025-06-11 19:15:31,131:INFO:Creating metrics dataframe
2025-06-11 19:15:31,134:INFO:Uploading results into container
2025-06-11 19:15:31,134:INFO:Uploading model into container now
2025-06-11 19:15:31,134:INFO:_master_model_container: 7
2025-06-11 19:15:31,134:INFO:_display_container: 2
2025-06-11 19:15:31,135:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=404, verbose=0, warm_start=False)
2025-06-11 19:15:31,135:INFO:create_model() successfully completed......................................
2025-06-11 19:15:31,296:INFO:SubProcess create_model() end ==================================
2025-06-11 19:15:31,296:INFO:Creating metrics dataframe
2025-06-11 19:15:31,299:INFO:Initializing Quadratic Discriminant Analysis
2025-06-11 19:15:31,299:INFO:Total runtime is 0.1773776968320211 minutes
2025-06-11 19:15:31,300:INFO:SubProcess create_model() called ==================================
2025-06-11 19:15:31,300:INFO:Initializing create_model()
2025-06-11 19:15:31,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002919CFFA590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:15:31,300:INFO:Checking exceptions
2025-06-11 19:15:31,300:INFO:Importing libraries
2025-06-11 19:15:31,300:INFO:Copying training dataset
2025-06-11 19:15:31,302:INFO:Defining folds
2025-06-11 19:15:31,303:INFO:Declaring metric variables
2025-06-11 19:15:31,303:INFO:Importing untrained model
2025-06-11 19:15:31,304:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-11 19:15:31,304:INFO:Starting cross validation
2025-06-11 19:15:31,308:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:15:31,380:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:15:31,386:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:15:31,388:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:15:31,389:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:15:31,391:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:15:31,393:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:15:31,393:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:15:31,393:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:15:31,408:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:15:31,409:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,412:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,415:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:15:31,416:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,416:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,416:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,418:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,418:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,419:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,419:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,420:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,420:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,420:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,421:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,421:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,422:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,422:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,423:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,424:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,424:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,425:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,425:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,425:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,426:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,428:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,433:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,435:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,437:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,438:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,440:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,442:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,445:INFO:Calculating mean and std
2025-06-11 19:15:31,446:INFO:Creating metrics dataframe
2025-06-11 19:15:31,449:INFO:Uploading results into container
2025-06-11 19:15:31,449:INFO:Uploading model into container now
2025-06-11 19:15:31,449:INFO:_master_model_container: 8
2025-06-11 19:15:31,449:INFO:_display_container: 2
2025-06-11 19:15:31,450:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-11 19:15:31,450:INFO:create_model() successfully completed......................................
2025-06-11 19:15:31,610:INFO:SubProcess create_model() end ==================================
2025-06-11 19:15:31,610:INFO:Creating metrics dataframe
2025-06-11 19:15:31,614:INFO:Initializing Ada Boost Classifier
2025-06-11 19:15:31,614:INFO:Total runtime is 0.18261858224868777 minutes
2025-06-11 19:15:31,614:INFO:SubProcess create_model() called ==================================
2025-06-11 19:15:31,614:INFO:Initializing create_model()
2025-06-11 19:15:31,614:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002919CFFA590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:15:31,614:INFO:Checking exceptions
2025-06-11 19:15:31,614:INFO:Importing libraries
2025-06-11 19:15:31,615:INFO:Copying training dataset
2025-06-11 19:15:31,617:INFO:Defining folds
2025-06-11 19:15:31,617:INFO:Declaring metric variables
2025-06-11 19:15:31,617:INFO:Importing untrained model
2025-06-11 19:15:31,617:INFO:Ada Boost Classifier Imported successfully
2025-06-11 19:15:31,618:INFO:Starting cross validation
2025-06-11 19:15:31,618:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:15:31,812:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,815:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,816:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,817:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,819:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,819:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,821:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,821:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,823:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,824:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,825:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:31,827:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:31,827:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,828:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,828:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,830:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,832:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,832:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,833:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,834:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,834:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,835:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,835:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,836:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,836:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:31,836:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,837:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,838:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,839:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,839:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,840:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,841:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,842:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:31,846:INFO:Calculating mean and std
2025-06-11 19:15:31,846:INFO:Creating metrics dataframe
2025-06-11 19:15:31,849:INFO:Uploading results into container
2025-06-11 19:15:31,849:INFO:Uploading model into container now
2025-06-11 19:15:31,849:INFO:_master_model_container: 9
2025-06-11 19:15:31,850:INFO:_display_container: 2
2025-06-11 19:15:31,850:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=404)
2025-06-11 19:15:31,850:INFO:create_model() successfully completed......................................
2025-06-11 19:15:32,005:INFO:SubProcess create_model() end ==================================
2025-06-11 19:15:32,005:INFO:Creating metrics dataframe
2025-06-11 19:15:32,009:INFO:Initializing Gradient Boosting Classifier
2025-06-11 19:15:32,009:INFO:Total runtime is 0.18920531670252486 minutes
2025-06-11 19:15:32,009:INFO:SubProcess create_model() called ==================================
2025-06-11 19:15:32,009:INFO:Initializing create_model()
2025-06-11 19:15:32,009:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002919CFFA590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:15:32,009:INFO:Checking exceptions
2025-06-11 19:15:32,010:INFO:Importing libraries
2025-06-11 19:15:32,010:INFO:Copying training dataset
2025-06-11 19:15:32,012:INFO:Defining folds
2025-06-11 19:15:32,012:INFO:Declaring metric variables
2025-06-11 19:15:32,013:INFO:Importing untrained model
2025-06-11 19:15:32,013:INFO:Gradient Boosting Classifier Imported successfully
2025-06-11 19:15:32,013:INFO:Starting cross validation
2025-06-11 19:15:32,015:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:15:32,854:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,857:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,859:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,871:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,871:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,873:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,874:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,876:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,877:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,884:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,885:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,886:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,887:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,887:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,887:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,888:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,888:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,888:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,889:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,890:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,890:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,890:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,891:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,892:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,893:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,893:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,895:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,900:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,902:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,903:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:32,907:INFO:Calculating mean and std
2025-06-11 19:15:32,907:INFO:Creating metrics dataframe
2025-06-11 19:15:32,910:INFO:Uploading results into container
2025-06-11 19:15:32,910:INFO:Uploading model into container now
2025-06-11 19:15:32,910:INFO:_master_model_container: 10
2025-06-11 19:15:32,910:INFO:_display_container: 2
2025-06-11 19:15:32,911:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=404, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-11 19:15:32,911:INFO:create_model() successfully completed......................................
2025-06-11 19:15:33,089:INFO:SubProcess create_model() end ==================================
2025-06-11 19:15:33,090:INFO:Creating metrics dataframe
2025-06-11 19:15:33,096:INFO:Initializing Linear Discriminant Analysis
2025-06-11 19:15:33,096:INFO:Total runtime is 0.20731879870096845 minutes
2025-06-11 19:15:33,096:INFO:SubProcess create_model() called ==================================
2025-06-11 19:15:33,096:INFO:Initializing create_model()
2025-06-11 19:15:33,096:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002919CFFA590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:15:33,097:INFO:Checking exceptions
2025-06-11 19:15:33,097:INFO:Importing libraries
2025-06-11 19:15:33,097:INFO:Copying training dataset
2025-06-11 19:15:33,101:INFO:Defining folds
2025-06-11 19:15:33,101:INFO:Declaring metric variables
2025-06-11 19:15:33,101:INFO:Importing untrained model
2025-06-11 19:15:33,101:INFO:Linear Discriminant Analysis Imported successfully
2025-06-11 19:15:33,101:INFO:Starting cross validation
2025-06-11 19:15:33,102:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:15:33,180:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,183:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,183:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,184:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,185:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,185:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,187:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,187:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,188:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,189:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,189:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,192:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,200:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,200:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,202:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,202:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,203:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,205:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,205:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,207:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,207:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,208:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,208:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,209:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,210:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,212:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,213:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,216:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,217:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,219:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,222:INFO:Calculating mean and std
2025-06-11 19:15:33,223:INFO:Creating metrics dataframe
2025-06-11 19:15:33,225:INFO:Uploading results into container
2025-06-11 19:15:33,226:INFO:Uploading model into container now
2025-06-11 19:15:33,226:INFO:_master_model_container: 11
2025-06-11 19:15:33,226:INFO:_display_container: 2
2025-06-11 19:15:33,226:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-11 19:15:33,226:INFO:create_model() successfully completed......................................
2025-06-11 19:15:33,388:INFO:SubProcess create_model() end ==================================
2025-06-11 19:15:33,388:INFO:Creating metrics dataframe
2025-06-11 19:15:33,393:INFO:Initializing Extra Trees Classifier
2025-06-11 19:15:33,393:INFO:Total runtime is 0.21226969559987388 minutes
2025-06-11 19:15:33,393:INFO:SubProcess create_model() called ==================================
2025-06-11 19:15:33,393:INFO:Initializing create_model()
2025-06-11 19:15:33,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002919CFFA590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:15:33,393:INFO:Checking exceptions
2025-06-11 19:15:33,394:INFO:Importing libraries
2025-06-11 19:15:33,394:INFO:Copying training dataset
2025-06-11 19:15:33,401:INFO:Defining folds
2025-06-11 19:15:33,401:INFO:Declaring metric variables
2025-06-11 19:15:33,401:INFO:Importing untrained model
2025-06-11 19:15:33,402:INFO:Extra Trees Classifier Imported successfully
2025-06-11 19:15:33,402:INFO:Starting cross validation
2025-06-11 19:15:33,403:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:15:33,713:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,716:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,719:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,722:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,722:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,723:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,723:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,724:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,725:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,725:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,725:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,726:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,726:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,727:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,728:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,728:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,728:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,729:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,730:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,730:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,731:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,758:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,760:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,762:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,779:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,782:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,784:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,828:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,829:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,831:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:33,835:INFO:Calculating mean and std
2025-06-11 19:15:33,836:INFO:Creating metrics dataframe
2025-06-11 19:15:33,838:INFO:Uploading results into container
2025-06-11 19:15:33,839:INFO:Uploading model into container now
2025-06-11 19:15:33,839:INFO:_master_model_container: 12
2025-06-11 19:15:33,839:INFO:_display_container: 2
2025-06-11 19:15:33,839:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=404, verbose=0, warm_start=False)
2025-06-11 19:15:33,839:INFO:create_model() successfully completed......................................
2025-06-11 19:15:33,998:INFO:SubProcess create_model() end ==================================
2025-06-11 19:15:33,998:INFO:Creating metrics dataframe
2025-06-11 19:15:34,001:INFO:Initializing Light Gradient Boosting Machine
2025-06-11 19:15:34,002:INFO:Total runtime is 0.22242847681045536 minutes
2025-06-11 19:15:34,002:INFO:SubProcess create_model() called ==================================
2025-06-11 19:15:34,002:INFO:Initializing create_model()
2025-06-11 19:15:34,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002919CFFA590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:15:34,002:INFO:Checking exceptions
2025-06-11 19:15:34,002:INFO:Importing libraries
2025-06-11 19:15:34,003:INFO:Copying training dataset
2025-06-11 19:15:34,005:INFO:Defining folds
2025-06-11 19:15:34,005:INFO:Declaring metric variables
2025-06-11 19:15:34,005:INFO:Importing untrained model
2025-06-11 19:15:34,006:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-11 19:15:34,006:INFO:Starting cross validation
2025-06-11 19:15:34,007:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:15:35,857:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:35,860:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:35,863:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,104:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,107:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,110:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,202:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,204:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,207:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,532:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,536:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,538:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,611:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,614:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,618:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,620:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,622:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,625:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,820:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,826:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,831:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,867:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,870:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,881:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,958:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,961:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:36,967:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:37,079:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:37,082:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:37,084:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:37,089:INFO:Calculating mean and std
2025-06-11 19:15:37,090:INFO:Creating metrics dataframe
2025-06-11 19:15:37,094:INFO:Uploading results into container
2025-06-11 19:15:37,095:INFO:Uploading model into container now
2025-06-11 19:15:37,095:INFO:_master_model_container: 13
2025-06-11 19:15:37,095:INFO:_display_container: 2
2025-06-11 19:15:37,096:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=404, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-11 19:15:37,096:INFO:create_model() successfully completed......................................
2025-06-11 19:15:37,273:INFO:SubProcess create_model() end ==================================
2025-06-11 19:15:37,274:INFO:Creating metrics dataframe
2025-06-11 19:15:37,277:INFO:Initializing CatBoost Classifier
2025-06-11 19:15:37,277:INFO:Total runtime is 0.2770055691401164 minutes
2025-06-11 19:15:37,277:INFO:SubProcess create_model() called ==================================
2025-06-11 19:15:37,277:INFO:Initializing create_model()
2025-06-11 19:15:37,277:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002919CFFA590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:15:37,277:INFO:Checking exceptions
2025-06-11 19:15:37,277:INFO:Importing libraries
2025-06-11 19:15:37,277:INFO:Copying training dataset
2025-06-11 19:15:37,283:INFO:Defining folds
2025-06-11 19:15:37,284:INFO:Declaring metric variables
2025-06-11 19:15:37,284:INFO:Importing untrained model
2025-06-11 19:15:37,284:INFO:CatBoost Classifier Imported successfully
2025-06-11 19:15:37,284:INFO:Starting cross validation
2025-06-11 19:15:37,285:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:15:45,280:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,284:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,287:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,513:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,515:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,516:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,518:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,519:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,520:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,521:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,521:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,521:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,522:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,523:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,524:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,524:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,524:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,524:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,525:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,526:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,526:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,526:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,526:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,529:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,530:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,533:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,535:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,540:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,542:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,544:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,547:INFO:Calculating mean and std
2025-06-11 19:15:45,548:INFO:Creating metrics dataframe
2025-06-11 19:15:45,551:INFO:Uploading results into container
2025-06-11 19:15:45,551:INFO:Uploading model into container now
2025-06-11 19:15:45,552:INFO:_master_model_container: 14
2025-06-11 19:15:45,552:INFO:_display_container: 2
2025-06-11 19:15:45,552:INFO:<catboost.core.CatBoostClassifier object at 0x000002919CFFA150>
2025-06-11 19:15:45,552:INFO:create_model() successfully completed......................................
2025-06-11 19:15:45,728:INFO:SubProcess create_model() end ==================================
2025-06-11 19:15:45,728:INFO:Creating metrics dataframe
2025-06-11 19:15:45,734:INFO:Initializing Dummy Classifier
2025-06-11 19:15:45,734:INFO:Total runtime is 0.41796246369679774 minutes
2025-06-11 19:15:45,734:INFO:SubProcess create_model() called ==================================
2025-06-11 19:15:45,735:INFO:Initializing create_model()
2025-06-11 19:15:45,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002919CFFA590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:15:45,735:INFO:Checking exceptions
2025-06-11 19:15:45,735:INFO:Importing libraries
2025-06-11 19:15:45,735:INFO:Copying training dataset
2025-06-11 19:15:45,739:INFO:Defining folds
2025-06-11 19:15:45,740:INFO:Declaring metric variables
2025-06-11 19:15:45,740:INFO:Importing untrained model
2025-06-11 19:15:45,740:INFO:Dummy Classifier Imported successfully
2025-06-11 19:15:45,740:INFO:Starting cross validation
2025-06-11 19:15:45,741:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:15:45,830:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,833:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,834:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:45,835:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,840:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,842:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,843:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,843:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,844:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:45,844:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,845:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,845:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:45,845:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,845:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:45,846:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,846:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,847:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,847:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,848:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,848:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,849:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,849:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:45,850:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,850:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,850:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,851:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:45,851:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:45,851:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,852:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,852:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,852:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:45,854:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,854:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,855:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,856:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:45,857:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,859:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,861:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,862:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:15:45,863:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:15:45,866:INFO:Calculating mean and std
2025-06-11 19:15:45,868:INFO:Creating metrics dataframe
2025-06-11 19:15:45,871:INFO:Uploading results into container
2025-06-11 19:15:45,871:INFO:Uploading model into container now
2025-06-11 19:15:45,872:INFO:_master_model_container: 15
2025-06-11 19:15:45,872:INFO:_display_container: 2
2025-06-11 19:15:45,872:INFO:DummyClassifier(constant=None, random_state=404, strategy='prior')
2025-06-11 19:15:45,872:INFO:create_model() successfully completed......................................
2025-06-11 19:15:46,047:INFO:SubProcess create_model() end ==================================
2025-06-11 19:15:46,047:INFO:Creating metrics dataframe
2025-06-11 19:15:46,060:INFO:Initializing create_model()
2025-06-11 19:15:46,061:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:15:46,061:INFO:Checking exceptions
2025-06-11 19:15:46,064:INFO:Importing libraries
2025-06-11 19:15:46,065:INFO:Copying training dataset
2025-06-11 19:15:46,072:INFO:Defining folds
2025-06-11 19:15:46,073:INFO:Declaring metric variables
2025-06-11 19:15:46,073:INFO:Importing untrained model
2025-06-11 19:15:46,073:INFO:Declaring custom model
2025-06-11 19:15:46,075:INFO:Decision Tree Classifier Imported successfully
2025-06-11 19:15:46,077:INFO:Cross validation set to False
2025-06-11 19:15:46,078:INFO:Fitting Model
2025-06-11 19:15:46,126:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best')
2025-06-11 19:15:46,127:INFO:create_model() successfully completed......................................
2025-06-11 19:15:46,342:INFO:Creating Dashboard logs
2025-06-11 19:15:46,343:INFO:Model: Decision Tree Classifier
2025-06-11 19:15:46,434:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 404, 'splitter': 'best'}
2025-06-11 19:15:46,692:INFO:Initializing predict_model()
2025-06-11 19:15:46,692:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002919CD9A520>)
2025-06-11 19:15:46,692:INFO:Checking exceptions
2025-06-11 19:15:46,692:INFO:Preloading libraries
2025-06-11 19:15:46,796:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-06-11 19:15:46,798:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-06-11 19:15:46,801:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-06-11 19:15:47,009:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml

2025-06-11 19:15:47,051:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:15:47,052:INFO:Creating Dashboard logs
2025-06-11 19:15:47,053:INFO:Model: Random Forest Classifier
2025-06-11 19:15:47,120:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 404, 'verbose': 0, 'warm_start': False}
2025-06-11 19:15:47,453:ERROR:_log_model() for RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=404, verbose=0, warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:15:47,454:INFO:Creating Dashboard logs
2025-06-11 19:15:47,454:INFO:Model: CatBoost Classifier
2025-06-11 19:15:47,537:WARNING:Couldn't get params for model. Exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 78, in log_model
    params = params.get_all_params()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\catboost\core.py", line 3504, in get_all_params
    raise CatBoostError("There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.")
_catboost.CatBoostError: There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.

2025-06-11 19:15:47,537:INFO:Logged params: {}
2025-06-11 19:15:47,894:ERROR:_log_model() for <catboost.core.CatBoostClassifier object at 0x000002919CFFA150> raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:15:47,895:INFO:Creating Dashboard logs
2025-06-11 19:15:47,897:INFO:Model: Gradient Boosting Classifier
2025-06-11 19:15:47,972:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 404, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-11 19:15:48,375:ERROR:_log_model() for GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=404, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:15:48,376:INFO:Creating Dashboard logs
2025-06-11 19:15:48,377:INFO:Model: Light Gradient Boosting Machine
2025-06-11 19:15:48,461:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 404, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2025-06-11 19:15:49,059:ERROR:_log_model() for LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=404, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:15:49,060:INFO:Creating Dashboard logs
2025-06-11 19:15:49,060:INFO:Model: Extra Trees Classifier
2025-06-11 19:15:49,127:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 404, 'verbose': 0, 'warm_start': False}
2025-06-11 19:15:49,738:ERROR:_log_model() for ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=404, verbose=0, warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:15:49,740:INFO:Creating Dashboard logs
2025-06-11 19:15:49,740:INFO:Model: Naive Bayes
2025-06-11 19:15:49,799:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2025-06-11 19:15:50,336:ERROR:_log_model() for GaussianNB(priors=None, var_smoothing=1e-09) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:15:50,338:INFO:Creating Dashboard logs
2025-06-11 19:15:50,338:INFO:Model: Linear Discriminant Analysis
2025-06-11 19:15:50,399:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2025-06-11 19:15:51,054:ERROR:_log_model() for LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:15:51,056:INFO:Creating Dashboard logs
2025-06-11 19:15:51,056:INFO:Model: Ridge Classifier
2025-06-11 19:15:51,120:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 404, 'solver': 'auto', 'tol': 0.0001}
2025-06-11 19:15:51,916:ERROR:_log_model() for RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=404, solver='auto',
                tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:15:51,918:INFO:Creating Dashboard logs
2025-06-11 19:15:51,918:INFO:Model: K Neighbors Classifier
2025-06-11 19:15:51,989:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2025-06-11 19:15:52,675:ERROR:_log_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:15:52,677:INFO:Creating Dashboard logs
2025-06-11 19:15:52,677:INFO:Model: Logistic Regression
2025-06-11 19:15:52,756:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-06-11 19:15:53,549:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=404, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:15:53,550:INFO:Creating Dashboard logs
2025-06-11 19:15:53,550:INFO:Model: Ada Boost Classifier
2025-06-11 19:15:53,626:INFO:Logged params: {'algorithm': 'SAMME.R', 'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 404}
2025-06-11 19:15:54,434:ERROR:_log_model() for AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=404) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:15:54,435:INFO:Creating Dashboard logs
2025-06-11 19:15:54,435:INFO:Model: SVM - Linear Kernel
2025-06-11 19:15:54,507:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 404, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-11 19:15:55,447:ERROR:_log_model() for SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=404, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:15:55,448:INFO:Creating Dashboard logs
2025-06-11 19:15:55,448:INFO:Model: Dummy Classifier
2025-06-11 19:15:55,505:INFO:Logged params: {'constant': None, 'random_state': 404, 'strategy': 'prior'}
2025-06-11 19:15:56,356:ERROR:_log_model() for DummyClassifier(constant=None, random_state=404, strategy='prior') raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:15:56,357:INFO:Creating Dashboard logs
2025-06-11 19:15:56,358:INFO:Model: Quadratic Discriminant Analysis
2025-06-11 19:15:56,423:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2025-06-11 19:15:57,497:ERROR:_log_model() for QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:15:57,502:INFO:_master_model_container: 15
2025-06-11 19:15:57,502:INFO:_display_container: 2
2025-06-11 19:15:57,502:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best')
2025-06-11 19:15:57,502:INFO:compare_models() successfully completed......................................
2025-06-11 19:15:57,502:INFO:Initializing evaluate_model()
2025-06-11 19:15:57,502:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-06-11 19:15:57,567:INFO:Initializing plot_model()
2025-06-11 19:15:57,567:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029193783390>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-06-11 19:15:57,567:INFO:Checking exceptions
2025-06-11 19:15:57,569:INFO:Preloading libraries
2025-06-11 19:15:57,569:INFO:Copying training dataset
2025-06-11 19:15:57,569:INFO:Plot type: pipeline
2025-06-11 19:20:35,894:INFO:Visual Rendered Successfully
2025-06-11 19:20:36,155:INFO:plot_model() successfully completed......................................
2025-06-11 19:25:08,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:25:08,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:25:08,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:25:08,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:25:10,606:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\utils\autologging_utils\versioning.py:6: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  from pkg_resources import resource_filename

2025-06-11 19:25:13,110:INFO:PyCaret ClassificationExperiment
2025-06-11 19:25:13,110:INFO:Logging name: riesgo_credito_multiclase
2025-06-11 19:25:13,110:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-11 19:25:13,110:INFO:version 3.2.0
2025-06-11 19:25:13,110:INFO:Initializing setup()
2025-06-11 19:25:13,110:INFO:self.USI: 2396
2025-06-11 19:25:13,110:INFO:self._variable_keys: {'X_test', 'X_train', 'fold_generator', 'target_param', 'fold_groups_param', 'html_param', 'y', 'y_train', 'is_multiclass', 'gpu_param', '_available_plots', 'log_plots_param', 'logging_param', 'gpu_n_jobs_param', '_ml_usecase', 'data', 'X', 'seed', 'pipeline', 'n_jobs_param', 'y_test', 'exp_name_log', 'fold_shuffle_param', 'memory', 'USI', 'fix_imbalance', 'exp_id', 'idx'}
2025-06-11 19:25:13,110:INFO:Checking environment
2025-06-11 19:25:13,110:INFO:python_version: 3.11.9
2025-06-11 19:25:13,110:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-06-11 19:25:13,110:INFO:machine: AMD64
2025-06-11 19:25:13,135:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-11 19:25:13,149:INFO:Memory: svmem(total=33554628608, available=13321187328, percent=60.3, used=20233441280, free=13321187328)
2025-06-11 19:25:13,150:INFO:Physical Core: 6
2025-06-11 19:25:13,150:INFO:Logical Core: 12
2025-06-11 19:25:13,150:INFO:Checking libraries
2025-06-11 19:25:13,150:INFO:System:
2025-06-11 19:25:13,150:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-06-11 19:25:13,150:INFO:executable: C:\Users\amonreal\Documents\amlbash\.venv\Scripts\python.exe
2025-06-11 19:25:13,150:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-11 19:25:13,150:INFO:PyCaret required dependencies:
2025-06-11 19:25:13,933:INFO:                 pip: 24.0
2025-06-11 19:25:13,933:INFO:          setuptools: 80.9.0
2025-06-11 19:25:13,933:INFO:             pycaret: 3.2.0
2025-06-11 19:25:13,933:INFO:             IPython: 9.3.0
2025-06-11 19:25:13,933:INFO:          ipywidgets: 8.1.7
2025-06-11 19:25:13,933:INFO:                tqdm: 4.67.1
2025-06-11 19:25:13,933:INFO:               numpy: 1.25.2
2025-06-11 19:25:13,933:INFO:              pandas: 1.5.3
2025-06-11 19:25:13,933:INFO:              jinja2: 3.1.6
2025-06-11 19:25:13,933:INFO:               scipy: 1.10.1
2025-06-11 19:25:13,933:INFO:              joblib: 1.2.0
2025-06-11 19:25:13,933:INFO:             sklearn: 1.2.2
2025-06-11 19:25:13,934:INFO:                pyod: 2.0.5
2025-06-11 19:25:13,934:INFO:            imblearn: 0.12.4
2025-06-11 19:25:13,934:INFO:   category_encoders: 2.7.0
2025-06-11 19:25:13,934:INFO:            lightgbm: 4.6.0
2025-06-11 19:25:13,934:INFO:               numba: 0.58.1
2025-06-11 19:25:13,934:INFO:            requests: 2.32.4
2025-06-11 19:25:13,934:INFO:          matplotlib: 3.6.0
2025-06-11 19:25:13,934:INFO:          scikitplot: 0.3.7
2025-06-11 19:25:13,934:INFO:         yellowbrick: 1.5
2025-06-11 19:25:13,934:INFO:              plotly: 5.24.1
2025-06-11 19:25:13,934:INFO:    plotly-resampler: Not installed
2025-06-11 19:25:13,934:INFO:             kaleido: 0.2.1
2025-06-11 19:25:13,934:INFO:           schemdraw: 0.15
2025-06-11 19:25:13,934:INFO:         statsmodels: 0.14.4
2025-06-11 19:25:13,934:INFO:              sktime: 0.21.1
2025-06-11 19:25:13,934:INFO:               tbats: 1.1.3
2025-06-11 19:25:13,934:INFO:            pmdarima: 2.0.4
2025-06-11 19:25:13,934:INFO:              psutil: 7.0.0
2025-06-11 19:25:13,934:INFO:          markupsafe: 2.1.5
2025-06-11 19:25:13,934:INFO:             pickle5: Not installed
2025-06-11 19:25:13,934:INFO:         cloudpickle: 2.2.1
2025-06-11 19:25:13,934:INFO:         deprecation: 2.1.0
2025-06-11 19:25:13,934:INFO:              xxhash: 3.5.0
2025-06-11 19:25:13,934:INFO:           wurlitzer: Not installed
2025-06-11 19:25:13,934:INFO:PyCaret optional dependencies:
2025-06-11 19:25:17,157:INFO:                shap: 0.47.2
2025-06-11 19:25:17,157:INFO:           interpret: 0.6.11
2025-06-11 19:25:17,157:INFO:                umap: 0.5.7
2025-06-11 19:25:17,157:INFO:     ydata_profiling: 4.6.0
2025-06-11 19:25:17,157:INFO:  explainerdashboard: 0.5.1
2025-06-11 19:25:17,157:INFO:             autoviz: Not installed
2025-06-11 19:25:17,157:INFO:           fairlearn: 0.7.0
2025-06-11 19:25:17,157:INFO:          deepchecks: Not installed
2025-06-11 19:25:17,157:INFO:             xgboost: Not installed
2025-06-11 19:25:17,157:INFO:            catboost: 1.2.8
2025-06-11 19:25:17,157:INFO:              kmodes: 0.12.2
2025-06-11 19:25:17,157:INFO:             mlxtend: 0.23.1
2025-06-11 19:25:17,157:INFO:       statsforecast: 1.5.0
2025-06-11 19:25:17,157:INFO:        tune_sklearn: Not installed
2025-06-11 19:25:17,157:INFO:                 ray: Not installed
2025-06-11 19:25:17,157:INFO:            hyperopt: 0.2.7
2025-06-11 19:25:17,157:INFO:              optuna: 4.3.0
2025-06-11 19:25:17,158:INFO:               skopt: 0.10.2
2025-06-11 19:25:17,158:INFO:              mlflow: 2.22.0
2025-06-11 19:25:17,158:INFO:              gradio: 3.50.2
2025-06-11 19:25:17,158:INFO:             fastapi: 0.115.12
2025-06-11 19:25:17,158:INFO:             uvicorn: 0.34.2
2025-06-11 19:25:17,158:INFO:              m2cgen: 0.10.0
2025-06-11 19:25:17,158:INFO:           evidently: 0.2.8
2025-06-11 19:25:17,158:INFO:               fugue: 0.8.6
2025-06-11 19:25:17,158:INFO:           streamlit: Not installed
2025-06-11 19:25:17,158:INFO:             prophet: Not installed
2025-06-11 19:25:17,158:INFO:None
2025-06-11 19:25:17,158:INFO:Set up data.
2025-06-11 19:25:17,166:INFO:Set up folding strategy.
2025-06-11 19:25:17,166:INFO:Set up train/test split.
2025-06-11 19:25:17,173:INFO:Set up index.
2025-06-11 19:25:17,173:INFO:Assigning column types.
2025-06-11 19:25:17,176:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-11 19:25:17,211:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:25:17,215:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-11 19:25:17,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:25:17,244:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:25:17,312:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:25:17,313:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-11 19:25:17,335:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:25:17,335:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:25:17,336:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-11 19:25:17,391:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-11 19:25:17,411:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:25:17,412:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:25:17,470:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-11 19:25:17,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:25:17,493:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:25:17,495:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-11 19:25:17,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:25:17,556:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:25:17,620:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:25:17,621:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:25:17,622:INFO:Preparing preprocessing pipeline...
2025-06-11 19:25:17,624:INFO:Set up label encoding.
2025-06-11 19:25:17,624:INFO:Set up simple imputation.
2025-06-11 19:25:17,627:INFO:Set up encoding of categorical features.
2025-06-11 19:25:17,689:INFO:Finished creating preprocessing pipeline.
2025-06-11 19:25:17,694:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-11 19:25:17,694:INFO:Creating final display dataframe.
2025-06-11 19:25:17,870:INFO:Setup _display_container:                     Description                       Value
0                    Session id                         404
1                        Target                  risk_level
2                   Target type                  Multiclass
3                Target mapping  alto: 0, bajo: 1, medio: 2
4           Original data shape                   (1000, 8)
5        Transformed data shape                  (1000, 12)
6   Transformed train set shape                   (700, 12)
7    Transformed test set shape                   (300, 12)
8              Numeric features                           6
9          Categorical features                           1
10                   Preprocess                        True
11              Imputation type                      simple
12           Numeric imputation                        mean
13       Categorical imputation                        mode
14     Maximum one-hot encoding                          25
15              Encoding method                        None
16               Fold Generator             StratifiedKFold
17                  Fold Number                          10
18                     CPU Jobs                          -1
19                      Use GPU                       False
20               Log Experiment                MlflowLogger
21              Experiment Name   riesgo_credito_multiclase
22                          USI                        2396
2025-06-11 19:25:17,935:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:25:17,935:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:25:18,007:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:25:18,008:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:25:18,009:INFO:Logging experiment in loggers
2025-06-11 19:25:18,302:INFO:SubProcess save_model() called ==================================
2025-06-11 19:25:18,315:INFO:Initializing save_model()
2025-06-11 19:25:18,316:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\amonreal\AppData\Local\Temp\tmpgx_mb3f8\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-11 19:25:18,316:INFO:Adding model into prep_pipe
2025-06-11 19:25:18,316:WARNING:Only Model saved as it was a pipeline.
2025-06-11 19:25:18,320:INFO:C:\Users\amonreal\AppData\Local\Temp\tmpgx_mb3f8\Transformation Pipeline.pkl saved in current working directory
2025-06-11 19:25:18,324:INFO:Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-11 19:25:18,324:INFO:save_model() successfully completed......................................
2025-06-11 19:25:18,552:INFO:SubProcess save_model() end ==================================
2025-06-11 19:25:18,577:INFO:setup() successfully completed in 4.9s...............
2025-06-11 19:25:18,577:INFO:Initializing compare_models()
2025-06-11 19:25:18,577:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-06-11 19:25:18,577:INFO:Checking exceptions
2025-06-11 19:25:18,580:INFO:Preparing display monitor
2025-06-11 19:25:18,584:INFO:Initializing Logistic Regression
2025-06-11 19:25:18,584:INFO:Total runtime is 0.0 minutes
2025-06-11 19:25:18,584:INFO:SubProcess create_model() called ==================================
2025-06-11 19:25:18,585:INFO:Initializing create_model()
2025-06-11 19:25:18,585:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D0CD881A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:25:18,585:INFO:Checking exceptions
2025-06-11 19:25:18,585:INFO:Importing libraries
2025-06-11 19:25:18,585:INFO:Copying training dataset
2025-06-11 19:25:18,588:INFO:Defining folds
2025-06-11 19:25:18,588:INFO:Declaring metric variables
2025-06-11 19:25:18,588:INFO:Importing untrained model
2025-06-11 19:25:18,589:INFO:Logistic Regression Imported successfully
2025-06-11 19:25:18,589:INFO:Starting cross validation
2025-06-11 19:25:18,590:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:25:24,320:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:25:24,320:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:25:24,334:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:25:24,348:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,349:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,351:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,351:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,354:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,354:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,362:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,367:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,368:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:25:24,370:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,377:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:25:24,401:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,405:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,407:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,410:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:25:24,412:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:25:24,413:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,417:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,420:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,439:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,442:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,443:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,446:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,447:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,448:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,471:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:25:24,498:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:25:24,499:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,502:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,504:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,508:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:25:24,517:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,520:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,521:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,530:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,533:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,534:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,538:INFO:Calculating mean and std
2025-06-11 19:25:24,539:INFO:Creating metrics dataframe
2025-06-11 19:25:24,542:INFO:Uploading results into container
2025-06-11 19:25:24,542:INFO:Uploading model into container now
2025-06-11 19:25:24,543:INFO:_master_model_container: 1
2025-06-11 19:25:24,543:INFO:_display_container: 2
2025-06-11 19:25:24,543:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=404, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-11 19:25:24,543:INFO:create_model() successfully completed......................................
2025-06-11 19:25:24,711:INFO:SubProcess create_model() end ==================================
2025-06-11 19:25:24,711:INFO:Creating metrics dataframe
2025-06-11 19:25:24,714:INFO:Initializing K Neighbors Classifier
2025-06-11 19:25:24,714:INFO:Total runtime is 0.1021658976872762 minutes
2025-06-11 19:25:24,714:INFO:SubProcess create_model() called ==================================
2025-06-11 19:25:24,714:INFO:Initializing create_model()
2025-06-11 19:25:24,714:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D0CD881A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:25:24,714:INFO:Checking exceptions
2025-06-11 19:25:24,714:INFO:Importing libraries
2025-06-11 19:25:24,715:INFO:Copying training dataset
2025-06-11 19:25:24,717:INFO:Defining folds
2025-06-11 19:25:24,718:INFO:Declaring metric variables
2025-06-11 19:25:24,718:INFO:Importing untrained model
2025-06-11 19:25:24,718:INFO:K Neighbors Classifier Imported successfully
2025-06-11 19:25:24,719:INFO:Starting cross validation
2025-06-11 19:25:24,720:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:25:24,843:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,847:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,849:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,857:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,858:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,860:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,861:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,861:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,862:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:24,863:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,863:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,865:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,865:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,867:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,867:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,868:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,868:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:24,869:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,870:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,870:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,872:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,872:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:24,873:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:24,874:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:24,876:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,614:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,617:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,618:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:27,619:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,626:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,628:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,631:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,637:INFO:Calculating mean and std
2025-06-11 19:25:27,637:INFO:Creating metrics dataframe
2025-06-11 19:25:27,640:INFO:Uploading results into container
2025-06-11 19:25:27,641:INFO:Uploading model into container now
2025-06-11 19:25:27,641:INFO:_master_model_container: 2
2025-06-11 19:25:27,641:INFO:_display_container: 2
2025-06-11 19:25:27,641:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-11 19:25:27,641:INFO:create_model() successfully completed......................................
2025-06-11 19:25:27,831:INFO:SubProcess create_model() end ==================================
2025-06-11 19:25:27,831:INFO:Creating metrics dataframe
2025-06-11 19:25:27,834:INFO:Initializing Naive Bayes
2025-06-11 19:25:27,834:INFO:Total runtime is 0.15416464805603028 minutes
2025-06-11 19:25:27,835:INFO:SubProcess create_model() called ==================================
2025-06-11 19:25:27,835:INFO:Initializing create_model()
2025-06-11 19:25:27,835:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D0CD881A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:25:27,835:INFO:Checking exceptions
2025-06-11 19:25:27,835:INFO:Importing libraries
2025-06-11 19:25:27,835:INFO:Copying training dataset
2025-06-11 19:25:27,838:INFO:Defining folds
2025-06-11 19:25:27,838:INFO:Declaring metric variables
2025-06-11 19:25:27,838:INFO:Importing untrained model
2025-06-11 19:25:27,839:INFO:Naive Bayes Imported successfully
2025-06-11 19:25:27,839:INFO:Starting cross validation
2025-06-11 19:25:27,840:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:25:27,932:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,934:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,935:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,937:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,938:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,939:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,939:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,940:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,941:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,942:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,943:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,943:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,943:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,943:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,945:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,945:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,946:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,947:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,947:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,948:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,948:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,949:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,950:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,951:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,951:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,960:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,962:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,964:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:27,967:INFO:Calculating mean and std
2025-06-11 19:25:27,967:INFO:Creating metrics dataframe
2025-06-11 19:25:27,970:INFO:Uploading results into container
2025-06-11 19:25:27,971:INFO:Uploading model into container now
2025-06-11 19:25:27,971:INFO:_master_model_container: 3
2025-06-11 19:25:27,971:INFO:_display_container: 2
2025-06-11 19:25:27,971:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-11 19:25:27,971:INFO:create_model() successfully completed......................................
2025-06-11 19:25:28,135:INFO:SubProcess create_model() end ==================================
2025-06-11 19:25:28,135:INFO:Creating metrics dataframe
2025-06-11 19:25:28,139:INFO:Initializing Decision Tree Classifier
2025-06-11 19:25:28,140:INFO:Total runtime is 0.15925698280334474 minutes
2025-06-11 19:25:28,140:INFO:SubProcess create_model() called ==================================
2025-06-11 19:25:28,140:INFO:Initializing create_model()
2025-06-11 19:25:28,140:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D0CD881A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:25:28,140:INFO:Checking exceptions
2025-06-11 19:25:28,140:INFO:Importing libraries
2025-06-11 19:25:28,140:INFO:Copying training dataset
2025-06-11 19:25:28,144:INFO:Defining folds
2025-06-11 19:25:28,144:INFO:Declaring metric variables
2025-06-11 19:25:28,145:INFO:Importing untrained model
2025-06-11 19:25:28,146:INFO:Decision Tree Classifier Imported successfully
2025-06-11 19:25:28,146:INFO:Starting cross validation
2025-06-11 19:25:28,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:25:28,249:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,251:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,253:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,261:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,262:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,264:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,265:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,266:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,268:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,268:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,271:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,271:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,273:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,273:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,274:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,274:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,274:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,274:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,274:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,275:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,276:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,276:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,276:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,276:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,276:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,278:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,278:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,278:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,279:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,280:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,284:INFO:Calculating mean and std
2025-06-11 19:25:28,285:INFO:Creating metrics dataframe
2025-06-11 19:25:28,288:INFO:Uploading results into container
2025-06-11 19:25:28,288:INFO:Uploading model into container now
2025-06-11 19:25:28,288:INFO:_master_model_container: 4
2025-06-11 19:25:28,289:INFO:_display_container: 2
2025-06-11 19:25:28,289:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best')
2025-06-11 19:25:28,289:INFO:create_model() successfully completed......................................
2025-06-11 19:25:28,446:INFO:SubProcess create_model() end ==================================
2025-06-11 19:25:28,446:INFO:Creating metrics dataframe
2025-06-11 19:25:28,450:INFO:Initializing SVM - Linear Kernel
2025-06-11 19:25:28,450:INFO:Total runtime is 0.16443124214808147 minutes
2025-06-11 19:25:28,450:INFO:SubProcess create_model() called ==================================
2025-06-11 19:25:28,450:INFO:Initializing create_model()
2025-06-11 19:25:28,450:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D0CD881A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:25:28,450:INFO:Checking exceptions
2025-06-11 19:25:28,450:INFO:Importing libraries
2025-06-11 19:25:28,450:INFO:Copying training dataset
2025-06-11 19:25:28,453:INFO:Defining folds
2025-06-11 19:25:28,453:INFO:Declaring metric variables
2025-06-11 19:25:28,454:INFO:Importing untrained model
2025-06-11 19:25:28,455:INFO:SVM - Linear Kernel Imported successfully
2025-06-11 19:25:28,456:INFO:Starting cross validation
2025-06-11 19:25:28,458:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:25:28,577:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:25:28,579:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,581:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:25:28,582:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,583:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:28,583:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,584:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:25:28,584:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,586:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,587:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,588:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:28,589:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,589:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,590:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:28,592:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,594:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:25:28,595:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:25:28,595:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:25:28,596:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,596:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,596:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,598:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,599:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,599:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:25:28,599:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:28,601:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:25:28,601:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:28,601:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,602:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,602:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,602:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,604:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,606:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,606:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,608:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,609:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:25:28,609:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:25:28,611:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,611:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,612:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,612:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,613:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:28,614:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,614:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,617:INFO:Calculating mean and std
2025-06-11 19:25:28,618:INFO:Creating metrics dataframe
2025-06-11 19:25:28,621:INFO:Uploading results into container
2025-06-11 19:25:28,621:INFO:Uploading model into container now
2025-06-11 19:25:28,621:INFO:_master_model_container: 5
2025-06-11 19:25:28,621:INFO:_display_container: 2
2025-06-11 19:25:28,622:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=404, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-11 19:25:28,622:INFO:create_model() successfully completed......................................
2025-06-11 19:25:28,780:INFO:SubProcess create_model() end ==================================
2025-06-11 19:25:28,780:INFO:Creating metrics dataframe
2025-06-11 19:25:28,784:INFO:Initializing Ridge Classifier
2025-06-11 19:25:28,784:INFO:Total runtime is 0.16999893188476564 minutes
2025-06-11 19:25:28,784:INFO:SubProcess create_model() called ==================================
2025-06-11 19:25:28,784:INFO:Initializing create_model()
2025-06-11 19:25:28,784:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D0CD881A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:25:28,784:INFO:Checking exceptions
2025-06-11 19:25:28,784:INFO:Importing libraries
2025-06-11 19:25:28,784:INFO:Copying training dataset
2025-06-11 19:25:28,787:INFO:Defining folds
2025-06-11 19:25:28,788:INFO:Declaring metric variables
2025-06-11 19:25:28,788:INFO:Importing untrained model
2025-06-11 19:25:28,789:INFO:Ridge Classifier Imported successfully
2025-06-11 19:25:28,790:INFO:Starting cross validation
2025-06-11 19:25:28,792:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:25:28,881:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:25:28,883:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,886:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,888:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:25:28,889:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,890:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,893:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,895:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,897:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:25:28,898:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:25:28,898:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,899:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,900:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,902:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,903:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,903:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:25:28,904:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,905:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,906:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:25:28,907:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,907:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,908:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:25:28,908:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:25:28,908:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:25:28,908:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,909:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,909:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,909:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,909:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,910:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,910:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,910:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,913:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,913:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,913:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,914:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:25:28,916:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,918:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,920:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:28,923:INFO:Calculating mean and std
2025-06-11 19:25:28,924:INFO:Creating metrics dataframe
2025-06-11 19:25:28,927:INFO:Uploading results into container
2025-06-11 19:25:28,927:INFO:Uploading model into container now
2025-06-11 19:25:28,928:INFO:_master_model_container: 6
2025-06-11 19:25:28,928:INFO:_display_container: 2
2025-06-11 19:25:28,928:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=404, solver='auto',
                tol=0.0001)
2025-06-11 19:25:28,928:INFO:create_model() successfully completed......................................
2025-06-11 19:25:29,088:INFO:SubProcess create_model() end ==================================
2025-06-11 19:25:29,088:INFO:Creating metrics dataframe
2025-06-11 19:25:29,092:INFO:Initializing Random Forest Classifier
2025-06-11 19:25:29,092:INFO:Total runtime is 0.17512774864832562 minutes
2025-06-11 19:25:29,092:INFO:SubProcess create_model() called ==================================
2025-06-11 19:25:29,092:INFO:Initializing create_model()
2025-06-11 19:25:29,092:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D0CD881A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:25:29,092:INFO:Checking exceptions
2025-06-11 19:25:29,092:INFO:Importing libraries
2025-06-11 19:25:29,092:INFO:Copying training dataset
2025-06-11 19:25:29,094:INFO:Defining folds
2025-06-11 19:25:29,096:INFO:Declaring metric variables
2025-06-11 19:25:29,096:INFO:Importing untrained model
2025-06-11 19:25:29,097:INFO:Random Forest Classifier Imported successfully
2025-06-11 19:25:29,097:INFO:Starting cross validation
2025-06-11 19:25:29,099:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:25:29,463:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,464:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,464:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,465:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,466:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,466:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,466:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,468:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,468:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,469:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,469:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,469:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,469:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,469:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,470:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,472:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,472:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,478:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,478:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,493:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,495:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,497:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,570:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,573:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,575:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,576:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,577:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,578:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,582:INFO:Calculating mean and std
2025-06-11 19:25:29,582:INFO:Creating metrics dataframe
2025-06-11 19:25:29,584:INFO:Uploading results into container
2025-06-11 19:25:29,586:INFO:Uploading model into container now
2025-06-11 19:25:29,586:INFO:_master_model_container: 7
2025-06-11 19:25:29,586:INFO:_display_container: 2
2025-06-11 19:25:29,587:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=404, verbose=0, warm_start=False)
2025-06-11 19:25:29,587:INFO:create_model() successfully completed......................................
2025-06-11 19:25:29,763:INFO:SubProcess create_model() end ==================================
2025-06-11 19:25:29,763:INFO:Creating metrics dataframe
2025-06-11 19:25:29,766:INFO:Initializing Quadratic Discriminant Analysis
2025-06-11 19:25:29,766:INFO:Total runtime is 0.18636278708775839 minutes
2025-06-11 19:25:29,766:INFO:SubProcess create_model() called ==================================
2025-06-11 19:25:29,766:INFO:Initializing create_model()
2025-06-11 19:25:29,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D0CD881A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:25:29,766:INFO:Checking exceptions
2025-06-11 19:25:29,766:INFO:Importing libraries
2025-06-11 19:25:29,766:INFO:Copying training dataset
2025-06-11 19:25:29,769:INFO:Defining folds
2025-06-11 19:25:29,769:INFO:Declaring metric variables
2025-06-11 19:25:29,770:INFO:Importing untrained model
2025-06-11 19:25:29,771:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-11 19:25:29,772:INFO:Starting cross validation
2025-06-11 19:25:29,775:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:25:29,856:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:25:29,857:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:25:29,860:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:25:29,864:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:25:29,866:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:25:29,867:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:25:29,868:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:25:29,870:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:25:29,870:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:25:29,876:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:25:29,877:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,880:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,881:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,883:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,883:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,887:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,888:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,889:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,891:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,892:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,892:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,892:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,893:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,894:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,894:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,895:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,895:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,895:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,895:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,896:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,896:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,896:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,896:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,897:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,899:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,899:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,899:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,902:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,903:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:29,907:INFO:Calculating mean and std
2025-06-11 19:25:29,908:INFO:Creating metrics dataframe
2025-06-11 19:25:29,910:INFO:Uploading results into container
2025-06-11 19:25:29,911:INFO:Uploading model into container now
2025-06-11 19:25:29,911:INFO:_master_model_container: 8
2025-06-11 19:25:29,911:INFO:_display_container: 2
2025-06-11 19:25:29,911:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-11 19:25:29,911:INFO:create_model() successfully completed......................................
2025-06-11 19:25:30,077:INFO:SubProcess create_model() end ==================================
2025-06-11 19:25:30,077:INFO:Creating metrics dataframe
2025-06-11 19:25:30,080:INFO:Initializing Ada Boost Classifier
2025-06-11 19:25:30,081:INFO:Total runtime is 0.1916128953297933 minutes
2025-06-11 19:25:30,081:INFO:SubProcess create_model() called ==================================
2025-06-11 19:25:30,081:INFO:Initializing create_model()
2025-06-11 19:25:30,081:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D0CD881A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:25:30,081:INFO:Checking exceptions
2025-06-11 19:25:30,081:INFO:Importing libraries
2025-06-11 19:25:30,081:INFO:Copying training dataset
2025-06-11 19:25:30,084:INFO:Defining folds
2025-06-11 19:25:30,084:INFO:Declaring metric variables
2025-06-11 19:25:30,084:INFO:Importing untrained model
2025-06-11 19:25:30,084:INFO:Ada Boost Classifier Imported successfully
2025-06-11 19:25:30,086:INFO:Starting cross validation
2025-06-11 19:25:30,087:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:25:30,279:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,281:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,283:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:30,283:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,284:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,286:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,286:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,287:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,287:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,289:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,289:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,289:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,290:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,290:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,290:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,290:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,291:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:30,292:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,292:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,292:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,293:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,293:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,293:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,294:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,294:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:30,294:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,296:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,302:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,303:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,305:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,305:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,308:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,310:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:30,314:INFO:Calculating mean and std
2025-06-11 19:25:30,315:INFO:Creating metrics dataframe
2025-06-11 19:25:30,317:INFO:Uploading results into container
2025-06-11 19:25:30,318:INFO:Uploading model into container now
2025-06-11 19:25:30,318:INFO:_master_model_container: 9
2025-06-11 19:25:30,318:INFO:_display_container: 2
2025-06-11 19:25:30,318:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=404)
2025-06-11 19:25:30,318:INFO:create_model() successfully completed......................................
2025-06-11 19:25:30,482:INFO:SubProcess create_model() end ==================================
2025-06-11 19:25:30,482:INFO:Creating metrics dataframe
2025-06-11 19:25:30,487:INFO:Initializing Gradient Boosting Classifier
2025-06-11 19:25:30,488:INFO:Total runtime is 0.1983717759450277 minutes
2025-06-11 19:25:30,488:INFO:SubProcess create_model() called ==================================
2025-06-11 19:25:30,489:INFO:Initializing create_model()
2025-06-11 19:25:30,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D0CD881A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:25:30,489:INFO:Checking exceptions
2025-06-11 19:25:30,489:INFO:Importing libraries
2025-06-11 19:25:30,490:INFO:Copying training dataset
2025-06-11 19:25:30,498:INFO:Defining folds
2025-06-11 19:25:30,498:INFO:Declaring metric variables
2025-06-11 19:25:30,499:INFO:Importing untrained model
2025-06-11 19:25:30,499:INFO:Gradient Boosting Classifier Imported successfully
2025-06-11 19:25:30,499:INFO:Starting cross validation
2025-06-11 19:25:30,501:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:25:31,198:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,201:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,203:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,203:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,205:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,205:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,206:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,206:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,209:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,209:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,209:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,210:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,210:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,211:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,212:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,213:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,215:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,215:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,217:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,217:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,218:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,218:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,218:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,219:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,219:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,221:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,221:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,222:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,223:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,223:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,228:INFO:Calculating mean and std
2025-06-11 19:25:31,228:INFO:Creating metrics dataframe
2025-06-11 19:25:31,232:INFO:Uploading results into container
2025-06-11 19:25:31,232:INFO:Uploading model into container now
2025-06-11 19:25:31,232:INFO:_master_model_container: 10
2025-06-11 19:25:31,232:INFO:_display_container: 2
2025-06-11 19:25:31,233:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=404, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-11 19:25:31,233:INFO:create_model() successfully completed......................................
2025-06-11 19:25:31,408:INFO:SubProcess create_model() end ==================================
2025-06-11 19:25:31,408:INFO:Creating metrics dataframe
2025-06-11 19:25:31,411:INFO:Initializing Linear Discriminant Analysis
2025-06-11 19:25:31,411:INFO:Total runtime is 0.21377404530843103 minutes
2025-06-11 19:25:31,411:INFO:SubProcess create_model() called ==================================
2025-06-11 19:25:31,412:INFO:Initializing create_model()
2025-06-11 19:25:31,412:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D0CD881A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:25:31,412:INFO:Checking exceptions
2025-06-11 19:25:31,412:INFO:Importing libraries
2025-06-11 19:25:31,412:INFO:Copying training dataset
2025-06-11 19:25:31,416:INFO:Defining folds
2025-06-11 19:25:31,416:INFO:Declaring metric variables
2025-06-11 19:25:31,416:INFO:Importing untrained model
2025-06-11 19:25:31,416:INFO:Linear Discriminant Analysis Imported successfully
2025-06-11 19:25:31,416:INFO:Starting cross validation
2025-06-11 19:25:31,417:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:25:31,508:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,521:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,524:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,525:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,529:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,534:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,539:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,542:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,542:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,544:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,545:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,547:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,548:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,549:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,552:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,557:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,563:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,563:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,566:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,567:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,567:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,570:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,571:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,573:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,574:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,574:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,577:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,577:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,579:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:31,586:INFO:Calculating mean and std
2025-06-11 19:25:31,588:INFO:Creating metrics dataframe
2025-06-11 19:25:31,591:INFO:Uploading results into container
2025-06-11 19:25:31,592:INFO:Uploading model into container now
2025-06-11 19:25:31,592:INFO:_master_model_container: 11
2025-06-11 19:25:31,592:INFO:_display_container: 2
2025-06-11 19:25:31,593:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-11 19:25:31,593:INFO:create_model() successfully completed......................................
2025-06-11 19:25:31,804:INFO:SubProcess create_model() end ==================================
2025-06-11 19:25:31,804:INFO:Creating metrics dataframe
2025-06-11 19:25:31,809:INFO:Initializing Extra Trees Classifier
2025-06-11 19:25:31,809:INFO:Total runtime is 0.22041684786478682 minutes
2025-06-11 19:25:31,809:INFO:SubProcess create_model() called ==================================
2025-06-11 19:25:31,809:INFO:Initializing create_model()
2025-06-11 19:25:31,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D0CD881A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:25:31,809:INFO:Checking exceptions
2025-06-11 19:25:31,809:INFO:Importing libraries
2025-06-11 19:25:31,809:INFO:Copying training dataset
2025-06-11 19:25:31,813:INFO:Defining folds
2025-06-11 19:25:31,813:INFO:Declaring metric variables
2025-06-11 19:25:31,813:INFO:Importing untrained model
2025-06-11 19:25:31,814:INFO:Extra Trees Classifier Imported successfully
2025-06-11 19:25:31,814:INFO:Starting cross validation
2025-06-11 19:25:31,816:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:25:32,211:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,215:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,218:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,219:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,219:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,221:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,223:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,227:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,246:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,266:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,268:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,271:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,284:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,287:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,289:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,311:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,312:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,314:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,315:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,318:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,319:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,344:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,346:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,347:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,348:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,350:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,351:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,360:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,362:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,363:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:32,368:INFO:Calculating mean and std
2025-06-11 19:25:32,368:INFO:Creating metrics dataframe
2025-06-11 19:25:32,371:INFO:Uploading results into container
2025-06-11 19:25:32,372:INFO:Uploading model into container now
2025-06-11 19:25:32,372:INFO:_master_model_container: 12
2025-06-11 19:25:32,372:INFO:_display_container: 2
2025-06-11 19:25:32,372:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=404, verbose=0, warm_start=False)
2025-06-11 19:25:32,372:INFO:create_model() successfully completed......................................
2025-06-11 19:25:32,532:INFO:SubProcess create_model() end ==================================
2025-06-11 19:25:32,532:INFO:Creating metrics dataframe
2025-06-11 19:25:32,536:INFO:Initializing Light Gradient Boosting Machine
2025-06-11 19:25:32,536:INFO:Total runtime is 0.23253180980682378 minutes
2025-06-11 19:25:32,536:INFO:SubProcess create_model() called ==================================
2025-06-11 19:25:32,536:INFO:Initializing create_model()
2025-06-11 19:25:32,536:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D0CD881A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:25:32,536:INFO:Checking exceptions
2025-06-11 19:25:32,536:INFO:Importing libraries
2025-06-11 19:25:32,536:INFO:Copying training dataset
2025-06-11 19:25:32,539:INFO:Defining folds
2025-06-11 19:25:32,539:INFO:Declaring metric variables
2025-06-11 19:25:32,540:INFO:Importing untrained model
2025-06-11 19:25:32,540:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-11 19:25:32,540:INFO:Starting cross validation
2025-06-11 19:25:32,542:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:25:33,750:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:33,753:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:33,755:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:33,891:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:33,893:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:33,896:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:33,950:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:33,953:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:33,955:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,140:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,143:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,145:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,200:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,208:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,210:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,234:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,238:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,241:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,259:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,259:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,262:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,264:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,264:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,402:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,405:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,410:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,440:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,442:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,444:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:34,448:INFO:Calculating mean and std
2025-06-11 19:25:34,449:INFO:Creating metrics dataframe
2025-06-11 19:25:34,452:INFO:Uploading results into container
2025-06-11 19:25:34,453:INFO:Uploading model into container now
2025-06-11 19:25:34,453:INFO:_master_model_container: 13
2025-06-11 19:25:34,453:INFO:_display_container: 2
2025-06-11 19:25:34,454:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=404, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-11 19:25:34,454:INFO:create_model() successfully completed......................................
2025-06-11 19:25:34,629:INFO:SubProcess create_model() end ==================================
2025-06-11 19:25:34,629:INFO:Creating metrics dataframe
2025-06-11 19:25:34,635:INFO:Initializing CatBoost Classifier
2025-06-11 19:25:34,635:INFO:Total runtime is 0.26751621166865036 minutes
2025-06-11 19:25:34,635:INFO:SubProcess create_model() called ==================================
2025-06-11 19:25:34,635:INFO:Initializing create_model()
2025-06-11 19:25:34,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D0CD881A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:25:34,635:INFO:Checking exceptions
2025-06-11 19:25:34,635:INFO:Importing libraries
2025-06-11 19:25:34,635:INFO:Copying training dataset
2025-06-11 19:25:34,640:INFO:Defining folds
2025-06-11 19:25:34,640:INFO:Declaring metric variables
2025-06-11 19:25:34,641:INFO:Importing untrained model
2025-06-11 19:25:34,641:INFO:CatBoost Classifier Imported successfully
2025-06-11 19:25:34,642:INFO:Starting cross validation
2025-06-11 19:25:34,644:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:25:42,748:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:42,753:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:42,756:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,054:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,057:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,060:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,069:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,070:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,072:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,072:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,074:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,075:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,075:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,076:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,081:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,082:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,083:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,084:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,085:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,085:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,086:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,087:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,087:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,087:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,088:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,089:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,089:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,089:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,090:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,092:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,095:INFO:Calculating mean and std
2025-06-11 19:25:43,096:INFO:Creating metrics dataframe
2025-06-11 19:25:43,099:INFO:Uploading results into container
2025-06-11 19:25:43,100:INFO:Uploading model into container now
2025-06-11 19:25:43,100:INFO:_master_model_container: 14
2025-06-11 19:25:43,100:INFO:_display_container: 2
2025-06-11 19:25:43,100:INFO:<catboost.core.CatBoostClassifier object at 0x000001D0CD7EF390>
2025-06-11 19:25:43,100:INFO:create_model() successfully completed......................................
2025-06-11 19:25:43,260:INFO:SubProcess create_model() end ==================================
2025-06-11 19:25:43,260:INFO:Creating metrics dataframe
2025-06-11 19:25:43,263:INFO:Initializing Dummy Classifier
2025-06-11 19:25:43,263:INFO:Total runtime is 0.4113162994384766 minutes
2025-06-11 19:25:43,263:INFO:SubProcess create_model() called ==================================
2025-06-11 19:25:43,263:INFO:Initializing create_model()
2025-06-11 19:25:43,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D0CD881A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:25:43,263:INFO:Checking exceptions
2025-06-11 19:25:43,263:INFO:Importing libraries
2025-06-11 19:25:43,263:INFO:Copying training dataset
2025-06-11 19:25:43,267:INFO:Defining folds
2025-06-11 19:25:43,267:INFO:Declaring metric variables
2025-06-11 19:25:43,267:INFO:Importing untrained model
2025-06-11 19:25:43,267:INFO:Dummy Classifier Imported successfully
2025-06-11 19:25:43,268:INFO:Starting cross validation
2025-06-11 19:25:43,268:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:25:43,341:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,343:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,344:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,346:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:43,346:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,346:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,346:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,347:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:43,347:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,348:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,348:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,348:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,348:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,349:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:43,350:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:43,350:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,351:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,351:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,352:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,352:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:43,353:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,354:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,355:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,356:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:43,356:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:43,357:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,357:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,357:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,360:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,361:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:43,362:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,363:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,364:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,365:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,365:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,365:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:43,366:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:25:43,366:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,366:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:25:43,370:INFO:Calculating mean and std
2025-06-11 19:25:43,371:INFO:Creating metrics dataframe
2025-06-11 19:25:43,374:INFO:Uploading results into container
2025-06-11 19:25:43,374:INFO:Uploading model into container now
2025-06-11 19:25:43,375:INFO:_master_model_container: 15
2025-06-11 19:25:43,375:INFO:_display_container: 2
2025-06-11 19:25:43,375:INFO:DummyClassifier(constant=None, random_state=404, strategy='prior')
2025-06-11 19:25:43,375:INFO:create_model() successfully completed......................................
2025-06-11 19:25:43,538:INFO:SubProcess create_model() end ==================================
2025-06-11 19:25:43,538:INFO:Creating metrics dataframe
2025-06-11 19:25:43,546:INFO:Initializing create_model()
2025-06-11 19:25:43,546:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:25:43,547:INFO:Checking exceptions
2025-06-11 19:25:43,548:INFO:Importing libraries
2025-06-11 19:25:43,548:INFO:Copying training dataset
2025-06-11 19:25:43,555:INFO:Defining folds
2025-06-11 19:25:43,555:INFO:Declaring metric variables
2025-06-11 19:25:43,556:INFO:Importing untrained model
2025-06-11 19:25:43,556:INFO:Declaring custom model
2025-06-11 19:25:43,557:INFO:Decision Tree Classifier Imported successfully
2025-06-11 19:25:43,558:INFO:Cross validation set to False
2025-06-11 19:25:43,558:INFO:Fitting Model
2025-06-11 19:25:43,588:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best')
2025-06-11 19:25:43,588:INFO:create_model() successfully completed......................................
2025-06-11 19:25:43,762:INFO:Creating Dashboard logs
2025-06-11 19:25:43,762:INFO:Model: Decision Tree Classifier
2025-06-11 19:25:43,814:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 404, 'splitter': 'best'}
2025-06-11 19:25:44,038:INFO:Initializing predict_model()
2025-06-11 19:25:44,038:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D0CDAE6C00>)
2025-06-11 19:25:44,038:INFO:Checking exceptions
2025-06-11 19:25:44,038:INFO:Preloading libraries
2025-06-11 19:25:44,142:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-06-11 19:25:44,148:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-06-11 19:25:44,152:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-06-11 19:25:44,340:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml

2025-06-11 19:25:44,363:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:25:44,364:INFO:Creating Dashboard logs
2025-06-11 19:25:44,365:INFO:Model: Random Forest Classifier
2025-06-11 19:25:44,441:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 404, 'verbose': 0, 'warm_start': False}
2025-06-11 19:25:44,732:ERROR:_log_model() for RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=404, verbose=0, warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:25:44,733:INFO:Creating Dashboard logs
2025-06-11 19:25:44,734:INFO:Model: CatBoost Classifier
2025-06-11 19:25:44,785:WARNING:Couldn't get params for model. Exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 78, in log_model
    params = params.get_all_params()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\catboost\core.py", line 3504, in get_all_params
    raise CatBoostError("There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.")
_catboost.CatBoostError: There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.

2025-06-11 19:25:44,785:INFO:Logged params: {}
2025-06-11 19:25:45,099:ERROR:_log_model() for <catboost.core.CatBoostClassifier object at 0x000001D0CD7EF390> raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:25:45,100:INFO:Creating Dashboard logs
2025-06-11 19:25:45,100:INFO:Model: Gradient Boosting Classifier
2025-06-11 19:25:45,153:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 404, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-11 19:25:45,556:ERROR:_log_model() for GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=404, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:25:45,558:INFO:Creating Dashboard logs
2025-06-11 19:25:45,558:INFO:Model: Light Gradient Boosting Machine
2025-06-11 19:25:45,606:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 404, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2025-06-11 19:25:46,106:ERROR:_log_model() for LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=404, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:25:46,107:INFO:Creating Dashboard logs
2025-06-11 19:25:46,108:INFO:Model: Extra Trees Classifier
2025-06-11 19:25:46,182:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 404, 'verbose': 0, 'warm_start': False}
2025-06-11 19:25:46,637:ERROR:_log_model() for ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=404, verbose=0, warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:25:46,638:INFO:Creating Dashboard logs
2025-06-11 19:25:46,638:INFO:Model: Naive Bayes
2025-06-11 19:25:46,700:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2025-06-11 19:25:47,182:ERROR:_log_model() for GaussianNB(priors=None, var_smoothing=1e-09) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:25:47,183:INFO:Creating Dashboard logs
2025-06-11 19:25:47,184:INFO:Model: Linear Discriminant Analysis
2025-06-11 19:25:47,238:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2025-06-11 19:25:47,815:ERROR:_log_model() for LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:25:47,817:INFO:Creating Dashboard logs
2025-06-11 19:25:47,817:INFO:Model: Ridge Classifier
2025-06-11 19:25:47,869:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 404, 'solver': 'auto', 'tol': 0.0001}
2025-06-11 19:25:48,530:ERROR:_log_model() for RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=404, solver='auto',
                tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:25:48,532:INFO:Creating Dashboard logs
2025-06-11 19:25:48,532:INFO:Model: K Neighbors Classifier
2025-06-11 19:25:48,597:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2025-06-11 19:25:49,316:ERROR:_log_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:25:49,317:INFO:Creating Dashboard logs
2025-06-11 19:25:49,317:INFO:Model: Logistic Regression
2025-06-11 19:25:49,370:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-06-11 19:25:50,164:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=404, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:25:50,165:INFO:Creating Dashboard logs
2025-06-11 19:25:50,166:INFO:Model: Ada Boost Classifier
2025-06-11 19:25:50,236:INFO:Logged params: {'algorithm': 'SAMME.R', 'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 404}
2025-06-11 19:25:51,078:ERROR:_log_model() for AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=404) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:25:51,080:INFO:Creating Dashboard logs
2025-06-11 19:25:51,080:INFO:Model: SVM - Linear Kernel
2025-06-11 19:25:51,134:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 404, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-11 19:25:51,962:ERROR:_log_model() for SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=404, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:25:51,964:INFO:Creating Dashboard logs
2025-06-11 19:25:51,964:INFO:Model: Dummy Classifier
2025-06-11 19:25:52,033:INFO:Logged params: {'constant': None, 'random_state': 404, 'strategy': 'prior'}
2025-06-11 19:25:52,897:ERROR:_log_model() for DummyClassifier(constant=None, random_state=404, strategy='prior') raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:25:52,899:INFO:Creating Dashboard logs
2025-06-11 19:25:52,899:INFO:Model: Quadratic Discriminant Analysis
2025-06-11 19:25:52,967:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2025-06-11 19:25:53,873:ERROR:_log_model() for QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\fluent.py", line 813, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-06-11 19:25:53,879:INFO:_master_model_container: 15
2025-06-11 19:25:53,879:INFO:_display_container: 2
2025-06-11 19:25:53,880:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best')
2025-06-11 19:25:53,880:INFO:compare_models() successfully completed......................................
2025-06-11 19:25:53,880:INFO:Initializing evaluate_model()
2025-06-11 19:25:53,880:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-06-11 19:25:53,939:INFO:Initializing plot_model()
2025-06-11 19:25:53,939:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0C47C2210>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-06-11 19:25:53,939:INFO:Checking exceptions
2025-06-11 19:25:53,941:INFO:Preloading libraries
2025-06-11 19:25:53,941:INFO:Copying training dataset
2025-06-11 19:25:53,941:INFO:Plot type: pipeline
2025-06-11 19:25:56,959:INFO:Visual Rendered Successfully
2025-06-11 19:25:57,189:INFO:plot_model() successfully completed......................................
2025-06-11 19:32:19,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:32:19,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:32:19,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:32:19,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:32:21,142:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\utils\requirements_utils.py:20: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  import pkg_resources  # noqa: TID251

2025-06-11 19:35:31,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:35:31,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:35:31,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:35:31,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:35:33,023:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\utils\requirements_utils.py:20: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  import pkg_resources  # noqa: TID251

2025-06-11 19:35:35,916:INFO:PyCaret ClassificationExperiment
2025-06-11 19:35:35,916:INFO:Logging name: riesgo_credito_multiclase
2025-06-11 19:35:35,916:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-11 19:35:35,916:INFO:version 3.2.0
2025-06-11 19:35:35,916:INFO:Initializing setup()
2025-06-11 19:35:35,916:INFO:self.USI: d50a
2025-06-11 19:35:35,916:INFO:self._variable_keys: {'data', 'seed', '_available_plots', '_ml_usecase', 'fold_groups_param', 'y', 'target_param', 'is_multiclass', 'gpu_param', 'logging_param', 'pipeline', 'n_jobs_param', 'fix_imbalance', 'exp_id', 'y_train', 'X_test', 'memory', 'exp_name_log', 'fold_generator', 'idx', 'log_plots_param', 'X_train', 'USI', 'gpu_n_jobs_param', 'X', 'html_param', 'y_test', 'fold_shuffle_param'}
2025-06-11 19:35:35,916:INFO:Checking environment
2025-06-11 19:35:35,917:INFO:python_version: 3.11.9
2025-06-11 19:35:35,917:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-06-11 19:35:35,917:INFO:machine: AMD64
2025-06-11 19:35:35,946:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-11 19:35:35,961:INFO:Memory: svmem(total=33554628608, available=13111906304, percent=60.9, used=20442722304, free=13111906304)
2025-06-11 19:35:35,961:INFO:Physical Core: 6
2025-06-11 19:35:35,961:INFO:Logical Core: 12
2025-06-11 19:35:35,962:INFO:Checking libraries
2025-06-11 19:35:35,962:INFO:System:
2025-06-11 19:35:35,962:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-06-11 19:35:35,962:INFO:executable: C:\Users\amonreal\Documents\amlbash\.venv\Scripts\python.exe
2025-06-11 19:35:35,962:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-11 19:35:35,962:INFO:PyCaret required dependencies:
2025-06-11 19:35:36,567:INFO:                 pip: 24.0
2025-06-11 19:35:36,567:INFO:          setuptools: 80.9.0
2025-06-11 19:35:36,567:INFO:             pycaret: 3.2.0
2025-06-11 19:35:36,567:INFO:             IPython: 9.3.0
2025-06-11 19:35:36,567:INFO:          ipywidgets: 8.1.7
2025-06-11 19:35:36,567:INFO:                tqdm: 4.67.1
2025-06-11 19:35:36,567:INFO:               numpy: 1.25.2
2025-06-11 19:35:36,567:INFO:              pandas: 1.5.3
2025-06-11 19:35:36,567:INFO:              jinja2: 3.1.6
2025-06-11 19:35:36,567:INFO:               scipy: 1.10.1
2025-06-11 19:35:36,567:INFO:              joblib: 1.2.0
2025-06-11 19:35:36,567:INFO:             sklearn: 1.2.2
2025-06-11 19:35:36,567:INFO:                pyod: 2.0.5
2025-06-11 19:35:36,567:INFO:            imblearn: 0.12.4
2025-06-11 19:35:36,567:INFO:   category_encoders: 2.7.0
2025-06-11 19:35:36,567:INFO:            lightgbm: 4.6.0
2025-06-11 19:35:36,567:INFO:               numba: 0.58.1
2025-06-11 19:35:36,567:INFO:            requests: 2.32.4
2025-06-11 19:35:36,567:INFO:          matplotlib: 3.6.0
2025-06-11 19:35:36,567:INFO:          scikitplot: 0.3.7
2025-06-11 19:35:36,567:INFO:         yellowbrick: 1.5
2025-06-11 19:35:36,567:INFO:              plotly: 5.24.1
2025-06-11 19:35:36,567:INFO:    plotly-resampler: Not installed
2025-06-11 19:35:36,567:INFO:             kaleido: 0.2.1
2025-06-11 19:35:36,567:INFO:           schemdraw: 0.15
2025-06-11 19:35:36,567:INFO:         statsmodels: 0.14.4
2025-06-11 19:35:36,567:INFO:              sktime: 0.21.1
2025-06-11 19:35:36,567:INFO:               tbats: 1.1.3
2025-06-11 19:35:36,567:INFO:            pmdarima: 2.0.4
2025-06-11 19:35:36,567:INFO:              psutil: 7.0.0
2025-06-11 19:35:36,567:INFO:          markupsafe: 2.1.5
2025-06-11 19:35:36,567:INFO:             pickle5: Not installed
2025-06-11 19:35:36,567:INFO:         cloudpickle: 2.2.1
2025-06-11 19:35:36,567:INFO:         deprecation: 2.1.0
2025-06-11 19:35:36,567:INFO:              xxhash: 3.5.0
2025-06-11 19:35:36,567:INFO:           wurlitzer: Not installed
2025-06-11 19:35:36,567:INFO:PyCaret optional dependencies:
2025-06-11 19:35:39,549:INFO:                shap: 0.47.2
2025-06-11 19:35:39,549:INFO:           interpret: 0.6.11
2025-06-11 19:35:39,549:INFO:                umap: 0.5.7
2025-06-11 19:35:39,549:INFO:     ydata_profiling: 4.6.0
2025-06-11 19:35:39,549:INFO:  explainerdashboard: 0.5.1
2025-06-11 19:35:39,549:INFO:             autoviz: Not installed
2025-06-11 19:35:39,549:INFO:           fairlearn: 0.7.0
2025-06-11 19:35:39,549:INFO:          deepchecks: Not installed
2025-06-11 19:35:39,549:INFO:             xgboost: Not installed
2025-06-11 19:35:39,549:INFO:            catboost: 1.2.8
2025-06-11 19:35:39,549:INFO:              kmodes: 0.12.2
2025-06-11 19:35:39,549:INFO:             mlxtend: 0.23.1
2025-06-11 19:35:39,550:INFO:       statsforecast: 1.5.0
2025-06-11 19:35:39,550:INFO:        tune_sklearn: Not installed
2025-06-11 19:35:39,550:INFO:                 ray: Not installed
2025-06-11 19:35:39,550:INFO:            hyperopt: 0.2.7
2025-06-11 19:35:39,550:INFO:              optuna: 4.3.0
2025-06-11 19:35:39,550:INFO:               skopt: 0.10.2
2025-06-11 19:35:39,550:INFO:              mlflow: 1.30.1
2025-06-11 19:35:39,550:INFO:              gradio: 3.50.2
2025-06-11 19:35:39,550:INFO:             fastapi: 0.115.12
2025-06-11 19:35:39,550:INFO:             uvicorn: 0.34.2
2025-06-11 19:35:39,550:INFO:              m2cgen: 0.10.0
2025-06-11 19:35:39,550:INFO:           evidently: 0.2.8
2025-06-11 19:35:39,550:INFO:               fugue: 0.8.6
2025-06-11 19:35:39,550:INFO:           streamlit: Not installed
2025-06-11 19:35:39,550:INFO:             prophet: Not installed
2025-06-11 19:35:39,550:INFO:None
2025-06-11 19:35:39,550:INFO:Set up data.
2025-06-11 19:35:39,556:INFO:Set up folding strategy.
2025-06-11 19:35:39,556:INFO:Set up train/test split.
2025-06-11 19:35:39,561:INFO:Set up index.
2025-06-11 19:35:39,562:INFO:Assigning column types.
2025-06-11 19:35:39,564:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-11 19:35:39,598:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:35:39,601:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-11 19:35:39,632:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:35:39,633:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:35:39,699:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:35:39,699:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-11 19:35:39,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:35:39,721:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:35:39,722:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-11 19:35:39,761:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-11 19:35:39,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:35:39,783:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:35:39,821:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-11 19:35:39,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:35:39,857:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:35:39,858:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-11 19:35:39,918:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:35:39,918:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:35:39,987:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:35:39,988:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:35:39,990:INFO:Preparing preprocessing pipeline...
2025-06-11 19:35:39,991:INFO:Set up label encoding.
2025-06-11 19:35:39,991:INFO:Set up simple imputation.
2025-06-11 19:35:39,993:INFO:Set up encoding of categorical features.
2025-06-11 19:35:40,042:INFO:Finished creating preprocessing pipeline.
2025-06-11 19:35:40,047:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-11 19:35:40,047:INFO:Creating final display dataframe.
2025-06-11 19:35:40,201:INFO:Setup _display_container:                     Description                       Value
0                    Session id                         404
1                        Target                  risk_level
2                   Target type                  Multiclass
3                Target mapping  alto: 0, bajo: 1, medio: 2
4           Original data shape                   (1000, 8)
5        Transformed data shape                  (1000, 12)
6   Transformed train set shape                   (700, 12)
7    Transformed test set shape                   (300, 12)
8              Numeric features                           6
9          Categorical features                           1
10                   Preprocess                        True
11              Imputation type                      simple
12           Numeric imputation                        mean
13       Categorical imputation                        mode
14     Maximum one-hot encoding                          25
15              Encoding method                        None
16               Fold Generator             StratifiedKFold
17                  Fold Number                          10
18                     CPU Jobs                          -1
19                      Use GPU                       False
20               Log Experiment                MlflowLogger
21              Experiment Name   riesgo_credito_multiclase
22                          USI                        d50a
2025-06-11 19:35:40,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:35:40,295:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:35:40,351:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:35:40,352:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:35:40,353:INFO:Logging experiment in loggers
2025-06-11 19:35:40,631:INFO:SubProcess save_model() called ==================================
2025-06-11 19:35:40,639:INFO:Initializing save_model()
2025-06-11 19:35:40,639:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\amonreal\AppData\Local\Temp\tmpyfdnekzf\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-11 19:35:40,639:INFO:Adding model into prep_pipe
2025-06-11 19:35:40,639:WARNING:Only Model saved as it was a pipeline.
2025-06-11 19:35:40,643:INFO:C:\Users\amonreal\AppData\Local\Temp\tmpyfdnekzf\Transformation Pipeline.pkl saved in current working directory
2025-06-11 19:35:40,648:INFO:Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-11 19:35:40,648:INFO:save_model() successfully completed......................................
2025-06-11 19:35:40,814:INFO:SubProcess save_model() end ==================================
2025-06-11 19:35:40,840:INFO:setup() successfully completed in 4.45s...............
2025-06-11 19:35:40,840:INFO:Initializing compare_models()
2025-06-11 19:35:40,840:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-06-11 19:35:40,840:INFO:Checking exceptions
2025-06-11 19:35:40,842:INFO:Preparing display monitor
2025-06-11 19:35:40,846:INFO:Initializing Logistic Regression
2025-06-11 19:35:40,846:INFO:Total runtime is 0.0 minutes
2025-06-11 19:35:40,846:INFO:SubProcess create_model() called ==================================
2025-06-11 19:35:40,846:INFO:Initializing create_model()
2025-06-11 19:35:40,846:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019AF225D990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:35:40,846:INFO:Checking exceptions
2025-06-11 19:35:40,846:INFO:Importing libraries
2025-06-11 19:35:40,846:INFO:Copying training dataset
2025-06-11 19:35:40,849:INFO:Defining folds
2025-06-11 19:35:40,849:INFO:Declaring metric variables
2025-06-11 19:35:40,849:INFO:Importing untrained model
2025-06-11 19:35:40,849:INFO:Logistic Regression Imported successfully
2025-06-11 19:35:40,849:INFO:Starting cross validation
2025-06-11 19:35:40,851:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:35:46,386:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:35:46,415:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:35:46,419:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,421:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,422:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:35:46,423:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,441:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,443:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,444:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:35:46,445:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,448:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,452:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,455:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,458:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:35:46,473:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,476:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,476:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:35:46,478:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,485:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:35:46,488:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,491:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,493:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,498:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:35:46,507:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,510:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,513:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,518:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,522:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,524:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,529:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,532:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,535:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,552:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:35:46,582:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,585:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,587:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,628:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-11 19:35:46,653:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,655:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,657:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,662:INFO:Calculating mean and std
2025-06-11 19:35:46,663:INFO:Creating metrics dataframe
2025-06-11 19:35:46,667:INFO:Uploading results into container
2025-06-11 19:35:46,668:INFO:Uploading model into container now
2025-06-11 19:35:46,668:INFO:_master_model_container: 1
2025-06-11 19:35:46,668:INFO:_display_container: 2
2025-06-11 19:35:46,669:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=404, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-11 19:35:46,669:INFO:create_model() successfully completed......................................
2025-06-11 19:35:46,828:INFO:SubProcess create_model() end ==================================
2025-06-11 19:35:46,828:INFO:Creating metrics dataframe
2025-06-11 19:35:46,831:INFO:Initializing K Neighbors Classifier
2025-06-11 19:35:46,831:INFO:Total runtime is 0.09974731604258219 minutes
2025-06-11 19:35:46,831:INFO:SubProcess create_model() called ==================================
2025-06-11 19:35:46,831:INFO:Initializing create_model()
2025-06-11 19:35:46,831:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019AF225D990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:35:46,831:INFO:Checking exceptions
2025-06-11 19:35:46,831:INFO:Importing libraries
2025-06-11 19:35:46,832:INFO:Copying training dataset
2025-06-11 19:35:46,834:INFO:Defining folds
2025-06-11 19:35:46,834:INFO:Declaring metric variables
2025-06-11 19:35:46,834:INFO:Importing untrained model
2025-06-11 19:35:46,835:INFO:K Neighbors Classifier Imported successfully
2025-06-11 19:35:46,835:INFO:Starting cross validation
2025-06-11 19:35:46,837:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:35:46,979:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,979:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,981:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,982:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,982:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,982:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,983:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,983:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,984:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:35:46,984:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:35:46,985:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,985:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,985:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,986:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,986:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,986:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,986:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,987:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,989:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,989:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,990:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:35:46,990:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:35:46,993:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,993:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,995:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,998:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:46,999:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,571:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,574:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,575:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,582:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,584:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,586:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:35:49,587:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,591:INFO:Calculating mean and std
2025-06-11 19:35:49,593:INFO:Creating metrics dataframe
2025-06-11 19:35:49,600:INFO:Uploading results into container
2025-06-11 19:35:49,602:INFO:Uploading model into container now
2025-06-11 19:35:49,603:INFO:_master_model_container: 2
2025-06-11 19:35:49,603:INFO:_display_container: 2
2025-06-11 19:35:49,604:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-11 19:35:49,604:INFO:create_model() successfully completed......................................
2025-06-11 19:35:49,761:INFO:SubProcess create_model() end ==================================
2025-06-11 19:35:49,761:INFO:Creating metrics dataframe
2025-06-11 19:35:49,765:INFO:Initializing Naive Bayes
2025-06-11 19:35:49,767:INFO:Total runtime is 0.1486527681350708 minutes
2025-06-11 19:35:49,767:INFO:SubProcess create_model() called ==================================
2025-06-11 19:35:49,767:INFO:Initializing create_model()
2025-06-11 19:35:49,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019AF225D990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:35:49,767:INFO:Checking exceptions
2025-06-11 19:35:49,767:INFO:Importing libraries
2025-06-11 19:35:49,767:INFO:Copying training dataset
2025-06-11 19:35:49,770:INFO:Defining folds
2025-06-11 19:35:49,770:INFO:Declaring metric variables
2025-06-11 19:35:49,770:INFO:Importing untrained model
2025-06-11 19:35:49,771:INFO:Naive Bayes Imported successfully
2025-06-11 19:35:49,771:INFO:Starting cross validation
2025-06-11 19:35:49,771:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:35:49,851:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,854:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,856:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,857:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,859:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,863:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,868:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,869:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,870:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,871:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,871:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,871:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,871:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,872:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,873:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,873:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,873:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,874:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,874:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,875:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,875:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,875:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,876:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,876:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,877:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,877:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,878:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,879:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,880:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,881:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:49,884:INFO:Calculating mean and std
2025-06-11 19:35:49,884:INFO:Creating metrics dataframe
2025-06-11 19:35:49,887:INFO:Uploading results into container
2025-06-11 19:35:49,887:INFO:Uploading model into container now
2025-06-11 19:35:49,888:INFO:_master_model_container: 3
2025-06-11 19:35:49,888:INFO:_display_container: 2
2025-06-11 19:35:49,888:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-11 19:35:49,888:INFO:create_model() successfully completed......................................
2025-06-11 19:35:50,048:INFO:SubProcess create_model() end ==================================
2025-06-11 19:35:50,048:INFO:Creating metrics dataframe
2025-06-11 19:35:50,051:INFO:Initializing Decision Tree Classifier
2025-06-11 19:35:50,051:INFO:Total runtime is 0.15340915123621623 minutes
2025-06-11 19:35:50,052:INFO:SubProcess create_model() called ==================================
2025-06-11 19:35:50,052:INFO:Initializing create_model()
2025-06-11 19:35:50,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019AF225D990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:35:50,052:INFO:Checking exceptions
2025-06-11 19:35:50,052:INFO:Importing libraries
2025-06-11 19:35:50,052:INFO:Copying training dataset
2025-06-11 19:35:50,054:INFO:Defining folds
2025-06-11 19:35:50,055:INFO:Declaring metric variables
2025-06-11 19:35:50,055:INFO:Importing untrained model
2025-06-11 19:35:50,055:INFO:Decision Tree Classifier Imported successfully
2025-06-11 19:35:50,055:INFO:Starting cross validation
2025-06-11 19:35:50,056:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:35:50,137:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,140:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,141:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,144:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,145:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,146:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,147:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,149:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,150:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,150:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,150:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,152:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,153:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,153:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,153:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,153:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,155:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,156:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,158:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,158:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,158:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,160:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,160:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,161:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,161:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,161:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,162:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,163:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,167:INFO:Calculating mean and std
2025-06-11 19:35:50,168:INFO:Creating metrics dataframe
2025-06-11 19:35:50,170:INFO:Uploading results into container
2025-06-11 19:35:50,171:INFO:Uploading model into container now
2025-06-11 19:35:50,171:INFO:_master_model_container: 4
2025-06-11 19:35:50,171:INFO:_display_container: 2
2025-06-11 19:35:50,171:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best')
2025-06-11 19:35:50,171:INFO:create_model() successfully completed......................................
2025-06-11 19:35:50,328:INFO:SubProcess create_model() end ==================================
2025-06-11 19:35:50,328:INFO:Creating metrics dataframe
2025-06-11 19:35:50,334:INFO:Initializing SVM - Linear Kernel
2025-06-11 19:35:50,334:INFO:Total runtime is 0.15812888145446777 minutes
2025-06-11 19:35:50,334:INFO:SubProcess create_model() called ==================================
2025-06-11 19:35:50,335:INFO:Initializing create_model()
2025-06-11 19:35:50,335:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019AF225D990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:35:50,335:INFO:Checking exceptions
2025-06-11 19:35:50,335:INFO:Importing libraries
2025-06-11 19:35:50,335:INFO:Copying training dataset
2025-06-11 19:35:50,338:INFO:Defining folds
2025-06-11 19:35:50,338:INFO:Declaring metric variables
2025-06-11 19:35:50,338:INFO:Importing untrained model
2025-06-11 19:35:50,339:INFO:SVM - Linear Kernel Imported successfully
2025-06-11 19:35:50,339:INFO:Starting cross validation
2025-06-11 19:35:50,340:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:35:50,445:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:35:50,447:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,448:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:35:50,449:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,450:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,451:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:35:50,451:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:35:50,452:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,452:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:35:50,453:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,453:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:35:50,453:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,454:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,454:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,457:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,458:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,459:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,459:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:35:50,460:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,461:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:35:50,462:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,465:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,467:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:35:50,467:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:35:50,468:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,469:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,470:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:35:50,471:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,471:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,473:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:35:50,474:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,474:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,475:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,475:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:35:50,476:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:35:50,477:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,477:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,477:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,479:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,480:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,481:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,489:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2025-06-11 19:35:50,490:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,491:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,492:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:35:50,493:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,496:INFO:Calculating mean and std
2025-06-11 19:35:50,497:INFO:Creating metrics dataframe
2025-06-11 19:35:50,499:INFO:Uploading results into container
2025-06-11 19:35:50,500:INFO:Uploading model into container now
2025-06-11 19:35:50,500:INFO:_master_model_container: 5
2025-06-11 19:35:50,500:INFO:_display_container: 2
2025-06-11 19:35:50,500:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=404, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-11 19:35:50,500:INFO:create_model() successfully completed......................................
2025-06-11 19:35:50,664:INFO:SubProcess create_model() end ==================================
2025-06-11 19:35:50,665:INFO:Creating metrics dataframe
2025-06-11 19:35:50,668:INFO:Initializing Ridge Classifier
2025-06-11 19:35:50,669:INFO:Total runtime is 0.16370944579442342 minutes
2025-06-11 19:35:50,669:INFO:SubProcess create_model() called ==================================
2025-06-11 19:35:50,669:INFO:Initializing create_model()
2025-06-11 19:35:50,669:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019AF225D990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:35:50,669:INFO:Checking exceptions
2025-06-11 19:35:50,669:INFO:Importing libraries
2025-06-11 19:35:50,669:INFO:Copying training dataset
2025-06-11 19:35:50,671:INFO:Defining folds
2025-06-11 19:35:50,671:INFO:Declaring metric variables
2025-06-11 19:35:50,671:INFO:Importing untrained model
2025-06-11 19:35:50,672:INFO:Ridge Classifier Imported successfully
2025-06-11 19:35:50,672:INFO:Starting cross validation
2025-06-11 19:35:50,672:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:35:50,755:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:35:50,756:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:35:50,757:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,758:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,759:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:35:50,760:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,760:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:35:50,760:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,761:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,761:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,762:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:35:50,763:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,763:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,764:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,765:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,765:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:35:50,766:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,767:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,767:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,767:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:35:50,768:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,769:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,770:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,770:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

tric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:35:50,771:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,771:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:35:50,772:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,773:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,773:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,774:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,774:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,776:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,776:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,777:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2025-06-11 19:35:50,778:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,778:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,780:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,782:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:50,785:INFO:Calculating mean and std
2025-06-11 19:35:50,786:INFO:Creating metrics dataframe
2025-06-11 19:35:50,789:INFO:Uploading results into container
2025-06-11 19:35:50,789:INFO:Uploading model into container now
2025-06-11 19:35:50,790:INFO:_master_model_container: 6
2025-06-11 19:35:50,790:INFO:_display_container: 2
2025-06-11 19:35:50,790:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=404, solver='auto',
                tol=0.0001)
2025-06-11 19:35:50,790:INFO:create_model() successfully completed......................................
2025-06-11 19:35:50,949:INFO:SubProcess create_model() end ==================================
2025-06-11 19:35:50,950:INFO:Creating metrics dataframe
2025-06-11 19:35:50,954:INFO:Initializing Random Forest Classifier
2025-06-11 19:35:50,954:INFO:Total runtime is 0.1684606711069743 minutes
2025-06-11 19:35:50,954:INFO:SubProcess create_model() called ==================================
2025-06-11 19:35:50,954:INFO:Initializing create_model()
2025-06-11 19:35:50,954:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019AF225D990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:35:50,954:INFO:Checking exceptions
2025-06-11 19:35:50,954:INFO:Importing libraries
2025-06-11 19:35:50,954:INFO:Copying training dataset
2025-06-11 19:35:50,957:INFO:Defining folds
2025-06-11 19:35:50,957:INFO:Declaring metric variables
2025-06-11 19:35:50,957:INFO:Importing untrained model
2025-06-11 19:35:50,957:INFO:Random Forest Classifier Imported successfully
2025-06-11 19:35:50,957:INFO:Starting cross validation
2025-06-11 19:35:50,958:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:35:51,333:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,334:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,335:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,336:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,337:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,337:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,337:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,338:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,339:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,339:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,339:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,340:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,341:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,343:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,350:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,351:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,353:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,354:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,354:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,355:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,356:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,357:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,359:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,386:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,388:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,389:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,391:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,393:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,394:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,397:INFO:Calculating mean and std
2025-06-11 19:35:51,398:INFO:Creating metrics dataframe
2025-06-11 19:35:51,401:INFO:Uploading results into container
2025-06-11 19:35:51,401:INFO:Uploading model into container now
2025-06-11 19:35:51,401:INFO:_master_model_container: 7
2025-06-11 19:35:51,401:INFO:_display_container: 2
2025-06-11 19:35:51,401:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=404, verbose=0, warm_start=False)
2025-06-11 19:35:51,401:INFO:create_model() successfully completed......................................
2025-06-11 19:35:51,561:INFO:SubProcess create_model() end ==================================
2025-06-11 19:35:51,562:INFO:Creating metrics dataframe
2025-06-11 19:35:51,566:INFO:Initializing Quadratic Discriminant Analysis
2025-06-11 19:35:51,566:INFO:Total runtime is 0.17866130669911703 minutes
2025-06-11 19:35:51,566:INFO:SubProcess create_model() called ==================================
2025-06-11 19:35:51,566:INFO:Initializing create_model()
2025-06-11 19:35:51,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019AF225D990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:35:51,566:INFO:Checking exceptions
2025-06-11 19:35:51,566:INFO:Importing libraries
2025-06-11 19:35:51,566:INFO:Copying training dataset
2025-06-11 19:35:51,569:INFO:Defining folds
2025-06-11 19:35:51,569:INFO:Declaring metric variables
2025-06-11 19:35:51,570:INFO:Importing untrained model
2025-06-11 19:35:51,570:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-11 19:35:51,570:INFO:Starting cross validation
2025-06-11 19:35:51,572:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:35:51,625:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:35:51,631:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:35:51,633:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:35:51,633:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:35:51,633:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:35:51,635:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:35:51,637:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:35:51,639:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:35:51,640:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:35:51,641:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-11 19:35:51,654:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,657:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,658:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,660:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,660:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,660:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,660:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,661:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,661:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,663:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,664:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,664:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,664:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,665:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,666:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,666:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,667:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,667:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,667:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,668:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,668:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,669:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,669:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,670:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,671:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,671:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,671:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,672:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,672:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,673:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:51,677:INFO:Calculating mean and std
2025-06-11 19:35:51,678:INFO:Creating metrics dataframe
2025-06-11 19:35:51,680:INFO:Uploading results into container
2025-06-11 19:35:51,681:INFO:Uploading model into container now
2025-06-11 19:35:51,681:INFO:_master_model_container: 8
2025-06-11 19:35:51,681:INFO:_display_container: 2
2025-06-11 19:35:51,681:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-11 19:35:51,681:INFO:create_model() successfully completed......................................
2025-06-11 19:35:51,844:INFO:SubProcess create_model() end ==================================
2025-06-11 19:35:51,844:INFO:Creating metrics dataframe
2025-06-11 19:35:51,852:INFO:Initializing Ada Boost Classifier
2025-06-11 19:35:51,852:INFO:Total runtime is 0.18342650334040325 minutes
2025-06-11 19:35:51,853:INFO:SubProcess create_model() called ==================================
2025-06-11 19:35:51,853:INFO:Initializing create_model()
2025-06-11 19:35:51,853:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019AF225D990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:35:51,853:INFO:Checking exceptions
2025-06-11 19:35:51,853:INFO:Importing libraries
2025-06-11 19:35:51,853:INFO:Copying training dataset
2025-06-11 19:35:51,856:INFO:Defining folds
2025-06-11 19:35:51,857:INFO:Declaring metric variables
2025-06-11 19:35:51,857:INFO:Importing untrained model
2025-06-11 19:35:51,857:INFO:Ada Boost Classifier Imported successfully
2025-06-11 19:35:51,857:INFO:Starting cross validation
2025-06-11 19:35:51,858:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:35:52,053:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,056:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,057:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,057:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,058:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,059:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,060:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,061:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,061:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,061:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:35:52,061:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,062:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,063:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,063:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:35:52,063:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,063:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,063:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,064:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,065:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,067:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,067:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,069:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,069:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,070:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,070:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,071:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:35:52,072:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,072:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,074:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,075:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,078:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,080:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,081:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,085:INFO:Calculating mean and std
2025-06-11 19:35:52,086:INFO:Creating metrics dataframe
2025-06-11 19:35:52,088:INFO:Uploading results into container
2025-06-11 19:35:52,088:INFO:Uploading model into container now
2025-06-11 19:35:52,089:INFO:_master_model_container: 9
2025-06-11 19:35:52,089:INFO:_display_container: 2
2025-06-11 19:35:52,089:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=404)
2025-06-11 19:35:52,089:INFO:create_model() successfully completed......................................
2025-06-11 19:35:52,245:INFO:SubProcess create_model() end ==================================
2025-06-11 19:35:52,245:INFO:Creating metrics dataframe
2025-06-11 19:35:52,249:INFO:Initializing Gradient Boosting Classifier
2025-06-11 19:35:52,249:INFO:Total runtime is 0.1900421659151713 minutes
2025-06-11 19:35:52,249:INFO:SubProcess create_model() called ==================================
2025-06-11 19:35:52,249:INFO:Initializing create_model()
2025-06-11 19:35:52,249:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019AF225D990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:35:52,249:INFO:Checking exceptions
2025-06-11 19:35:52,249:INFO:Importing libraries
2025-06-11 19:35:52,249:INFO:Copying training dataset
2025-06-11 19:35:52,252:INFO:Defining folds
2025-06-11 19:35:52,252:INFO:Declaring metric variables
2025-06-11 19:35:52,252:INFO:Importing untrained model
2025-06-11 19:35:52,252:INFO:Gradient Boosting Classifier Imported successfully
2025-06-11 19:35:52,252:INFO:Starting cross validation
2025-06-11 19:35:52,253:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:35:52,931:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,933:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,936:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,938:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,940:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,943:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,951:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,951:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,953:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,953:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,953:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,953:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,954:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,954:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,954:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,955:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,956:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,956:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,956:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,956:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,956:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,956:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,957:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,959:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,959:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,959:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,964:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,966:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,967:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:52,970:INFO:Calculating mean and std
2025-06-11 19:35:52,971:INFO:Creating metrics dataframe
2025-06-11 19:35:52,973:INFO:Uploading results into container
2025-06-11 19:35:52,973:INFO:Uploading model into container now
2025-06-11 19:35:52,974:INFO:_master_model_container: 10
2025-06-11 19:35:52,974:INFO:_display_container: 2
2025-06-11 19:35:52,974:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=404, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-11 19:35:52,974:INFO:create_model() successfully completed......................................
2025-06-11 19:35:53,128:INFO:SubProcess create_model() end ==================================
2025-06-11 19:35:53,128:INFO:Creating metrics dataframe
2025-06-11 19:35:53,131:INFO:Initializing Linear Discriminant Analysis
2025-06-11 19:35:53,131:INFO:Total runtime is 0.20475271542867027 minutes
2025-06-11 19:35:53,131:INFO:SubProcess create_model() called ==================================
2025-06-11 19:35:53,131:INFO:Initializing create_model()
2025-06-11 19:35:53,131:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019AF225D990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:35:53,131:INFO:Checking exceptions
2025-06-11 19:35:53,131:INFO:Importing libraries
2025-06-11 19:35:53,131:INFO:Copying training dataset
2025-06-11 19:35:53,135:INFO:Defining folds
2025-06-11 19:35:53,135:INFO:Declaring metric variables
2025-06-11 19:35:53,135:INFO:Importing untrained model
2025-06-11 19:35:53,135:INFO:Linear Discriminant Analysis Imported successfully
2025-06-11 19:35:53,135:INFO:Starting cross validation
2025-06-11 19:35:53,136:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:35:53,211:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,214:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,216:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,217:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,219:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,219:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,220:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,220:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,222:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,222:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,224:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,224:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,225:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,226:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,226:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,228:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,228:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,230:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,230:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,231:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,231:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,231:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,232:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,232:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,232:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,233:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,233:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,235:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,235:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,238:INFO:Calculating mean and std
2025-06-11 19:35:53,239:INFO:Creating metrics dataframe
2025-06-11 19:35:53,241:INFO:Uploading results into container
2025-06-11 19:35:53,242:INFO:Uploading model into container now
2025-06-11 19:35:53,242:INFO:_master_model_container: 11
2025-06-11 19:35:53,242:INFO:_display_container: 2
2025-06-11 19:35:53,242:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-11 19:35:53,242:INFO:create_model() successfully completed......................................
2025-06-11 19:35:53,394:INFO:SubProcess create_model() end ==================================
2025-06-11 19:35:53,394:INFO:Creating metrics dataframe
2025-06-11 19:35:53,398:INFO:Initializing Extra Trees Classifier
2025-06-11 19:35:53,398:INFO:Total runtime is 0.2091943899790446 minutes
2025-06-11 19:35:53,398:INFO:SubProcess create_model() called ==================================
2025-06-11 19:35:53,398:INFO:Initializing create_model()
2025-06-11 19:35:53,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019AF225D990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:35:53,398:INFO:Checking exceptions
2025-06-11 19:35:53,398:INFO:Importing libraries
2025-06-11 19:35:53,398:INFO:Copying training dataset
2025-06-11 19:35:53,401:INFO:Defining folds
2025-06-11 19:35:53,401:INFO:Declaring metric variables
2025-06-11 19:35:53,401:INFO:Importing untrained model
2025-06-11 19:35:53,401:INFO:Extra Trees Classifier Imported successfully
2025-06-11 19:35:53,401:INFO:Starting cross validation
2025-06-11 19:35:53,402:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:35:53,720:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,721:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,723:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,725:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,726:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,727:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,727:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,728:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,730:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,731:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,734:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,739:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,742:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,745:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,745:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,748:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,750:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,750:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,752:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,754:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,759:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,761:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,763:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,820:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,820:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,822:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,822:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,824:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:53,828:INFO:Calculating mean and std
2025-06-11 19:35:53,828:INFO:Creating metrics dataframe
2025-06-11 19:35:53,831:INFO:Uploading results into container
2025-06-11 19:35:53,832:INFO:Uploading model into container now
2025-06-11 19:35:53,832:INFO:_master_model_container: 12
2025-06-11 19:35:53,832:INFO:_display_container: 2
2025-06-11 19:35:53,832:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=404, verbose=0, warm_start=False)
2025-06-11 19:35:53,832:INFO:create_model() successfully completed......................................
2025-06-11 19:35:53,988:INFO:SubProcess create_model() end ==================================
2025-06-11 19:35:53,989:INFO:Creating metrics dataframe
2025-06-11 19:35:54,000:INFO:Initializing Light Gradient Boosting Machine
2025-06-11 19:35:54,001:INFO:Total runtime is 0.21925305525461833 minutes
2025-06-11 19:35:54,001:INFO:SubProcess create_model() called ==================================
2025-06-11 19:35:54,002:INFO:Initializing create_model()
2025-06-11 19:35:54,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019AF225D990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:35:54,002:INFO:Checking exceptions
2025-06-11 19:35:54,002:INFO:Importing libraries
2025-06-11 19:35:54,002:INFO:Copying training dataset
2025-06-11 19:35:54,008:INFO:Defining folds
2025-06-11 19:35:54,008:INFO:Declaring metric variables
2025-06-11 19:35:54,009:INFO:Importing untrained model
2025-06-11 19:35:54,009:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-11 19:35:54,009:INFO:Starting cross validation
2025-06-11 19:35:54,010:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:35:55,574:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:55,577:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:55,579:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:55,824:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:55,827:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:55,829:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,066:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,072:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,075:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,108:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,119:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,121:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,169:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,172:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,175:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,229:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,233:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,235:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,253:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,256:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,259:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,275:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,277:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,279:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,293:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,296:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,298:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,442:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,445:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,447:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:35:56,452:INFO:Calculating mean and std
2025-06-11 19:35:56,453:INFO:Creating metrics dataframe
2025-06-11 19:35:56,456:INFO:Uploading results into container
2025-06-11 19:35:56,457:INFO:Uploading model into container now
2025-06-11 19:35:56,457:INFO:_master_model_container: 13
2025-06-11 19:35:56,457:INFO:_display_container: 2
2025-06-11 19:35:56,458:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=404, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-11 19:35:56,458:INFO:create_model() successfully completed......................................
2025-06-11 19:35:56,630:INFO:SubProcess create_model() end ==================================
2025-06-11 19:35:56,630:INFO:Creating metrics dataframe
2025-06-11 19:35:56,634:INFO:Initializing CatBoost Classifier
2025-06-11 19:35:56,634:INFO:Total runtime is 0.2631346583366394 minutes
2025-06-11 19:35:56,634:INFO:SubProcess create_model() called ==================================
2025-06-11 19:35:56,634:INFO:Initializing create_model()
2025-06-11 19:35:56,634:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019AF225D990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:35:56,634:INFO:Checking exceptions
2025-06-11 19:35:56,634:INFO:Importing libraries
2025-06-11 19:35:56,634:INFO:Copying training dataset
2025-06-11 19:35:56,637:INFO:Defining folds
2025-06-11 19:35:56,637:INFO:Declaring metric variables
2025-06-11 19:35:56,637:INFO:Importing untrained model
2025-06-11 19:35:56,637:INFO:CatBoost Classifier Imported successfully
2025-06-11 19:35:56,638:INFO:Starting cross validation
2025-06-11 19:35:56,638:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:36:04,661:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,664:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,667:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,804:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,805:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,806:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,807:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,807:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,807:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,808:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,808:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,809:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,810:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,810:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,810:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,810:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,812:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,813:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,813:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,813:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,815:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,819:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,821:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,822:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,823:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,824:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,825:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,825:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,828:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:04,832:INFO:Calculating mean and std
2025-06-11 19:36:04,833:INFO:Creating metrics dataframe
2025-06-11 19:36:04,835:INFO:Uploading results into container
2025-06-11 19:36:04,836:INFO:Uploading model into container now
2025-06-11 19:36:04,836:INFO:_master_model_container: 14
2025-06-11 19:36:04,836:INFO:_display_container: 2
2025-06-11 19:36:04,836:INFO:<catboost.core.CatBoostClassifier object at 0x0000019AF0F771D0>
2025-06-11 19:36:04,836:INFO:create_model() successfully completed......................................
2025-06-11 19:36:04,996:INFO:SubProcess create_model() end ==================================
2025-06-11 19:36:04,997:INFO:Creating metrics dataframe
2025-06-11 19:36:05,001:INFO:Initializing Dummy Classifier
2025-06-11 19:36:05,001:INFO:Total runtime is 0.4025854229927063 minutes
2025-06-11 19:36:05,001:INFO:SubProcess create_model() called ==================================
2025-06-11 19:36:05,001:INFO:Initializing create_model()
2025-06-11 19:36:05,001:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019AF225D990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:36:05,001:INFO:Checking exceptions
2025-06-11 19:36:05,002:INFO:Importing libraries
2025-06-11 19:36:05,002:INFO:Copying training dataset
2025-06-11 19:36:05,004:INFO:Defining folds
2025-06-11 19:36:05,004:INFO:Declaring metric variables
2025-06-11 19:36:05,004:INFO:Importing untrained model
2025-06-11 19:36:05,004:INFO:Dummy Classifier Imported successfully
2025-06-11 19:36:05,005:INFO:Starting cross validation
2025-06-11 19:36:05,005:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:36:05,078:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,078:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,080:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,080:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,080:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,081:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:36:05,082:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:36:05,082:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,082:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,082:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,083:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,084:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:36:05,084:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,085:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,085:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,086:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,086:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,087:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:36:05,087:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:36:05,088:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,088:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,089:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,089:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,089:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:36:05,090:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,091:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,091:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,091:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,092:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:36:05,092:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:36:05,092:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,093:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,094:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,095:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,095:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,096:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:36:05,097:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,097:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,097:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2025-06-11 19:36:05,098:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-11 19:36:05,101:INFO:Calculating mean and std
2025-06-11 19:36:05,102:INFO:Creating metrics dataframe
2025-06-11 19:36:05,104:INFO:Uploading results into container
2025-06-11 19:36:05,105:INFO:Uploading model into container now
2025-06-11 19:36:05,105:INFO:_master_model_container: 15
2025-06-11 19:36:05,105:INFO:_display_container: 2
2025-06-11 19:36:05,105:INFO:DummyClassifier(constant=None, random_state=404, strategy='prior')
2025-06-11 19:36:05,105:INFO:create_model() successfully completed......................................
2025-06-11 19:36:05,267:INFO:SubProcess create_model() end ==================================
2025-06-11 19:36:05,268:INFO:Creating metrics dataframe
2025-06-11 19:36:05,274:INFO:Initializing create_model()
2025-06-11 19:36:05,274:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:36:05,274:INFO:Checking exceptions
2025-06-11 19:36:05,275:INFO:Importing libraries
2025-06-11 19:36:05,275:INFO:Copying training dataset
2025-06-11 19:36:05,278:INFO:Defining folds
2025-06-11 19:36:05,278:INFO:Declaring metric variables
2025-06-11 19:36:05,278:INFO:Importing untrained model
2025-06-11 19:36:05,278:INFO:Declaring custom model
2025-06-11 19:36:05,279:INFO:Decision Tree Classifier Imported successfully
2025-06-11 19:36:05,279:INFO:Cross validation set to False
2025-06-11 19:36:05,279:INFO:Fitting Model
2025-06-11 19:36:05,310:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best')
2025-06-11 19:36:05,310:INFO:create_model() successfully completed......................................
2025-06-11 19:36:05,474:INFO:Creating Dashboard logs
2025-06-11 19:36:05,474:INFO:Model: Decision Tree Classifier
2025-06-11 19:36:05,553:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 404, 'splitter': 'best'}
2025-06-11 19:36:05,757:INFO:Initializing predict_model()
2025-06-11 19:36:05,757:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019AF2430720>)
2025-06-11 19:36:05,757:INFO:Checking exceptions
2025-06-11 19:36:05,757:INFO:Preloading libraries
2025-06-11 19:36:05,830:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-06-11 19:36:05,832:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-06-11 19:36:05,835:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'medio') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-06-11 19:36:06,011:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml

2025-06-11 19:36:06,558:INFO:Creating Dashboard logs
2025-06-11 19:36:06,559:INFO:Model: Random Forest Classifier
2025-06-11 19:36:06,618:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 404, 'verbose': 0, 'warm_start': False}
2025-06-11 19:36:07,070:INFO:Creating Dashboard logs
2025-06-11 19:36:07,071:INFO:Model: CatBoost Classifier
2025-06-11 19:36:07,136:WARNING:Couldn't get params for model. Exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 78, in log_model
    params = params.get_all_params()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\catboost\core.py", line 3504, in get_all_params
    raise CatBoostError("There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.")
_catboost.CatBoostError: There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.

2025-06-11 19:36:07,136:INFO:Logged params: {}
2025-06-11 19:36:07,534:INFO:Creating Dashboard logs
2025-06-11 19:36:07,534:INFO:Model: Gradient Boosting Classifier
2025-06-11 19:36:07,601:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 404, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-11 19:36:08,154:INFO:Creating Dashboard logs
2025-06-11 19:36:08,155:INFO:Model: Light Gradient Boosting Machine
2025-06-11 19:36:08,212:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 404, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2025-06-11 19:36:08,645:INFO:Creating Dashboard logs
2025-06-11 19:36:08,645:INFO:Model: Extra Trees Classifier
2025-06-11 19:36:08,703:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 404, 'verbose': 0, 'warm_start': False}
2025-06-11 19:36:09,163:INFO:Creating Dashboard logs
2025-06-11 19:36:09,163:INFO:Model: Naive Bayes
2025-06-11 19:36:09,221:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2025-06-11 19:36:09,632:INFO:Creating Dashboard logs
2025-06-11 19:36:09,632:INFO:Model: Linear Discriminant Analysis
2025-06-11 19:36:09,714:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2025-06-11 19:36:10,215:INFO:Creating Dashboard logs
2025-06-11 19:36:10,215:INFO:Model: Ridge Classifier
2025-06-11 19:36:10,291:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 404, 'solver': 'auto', 'tol': 0.0001}
2025-06-11 19:36:10,724:INFO:Creating Dashboard logs
2025-06-11 19:36:10,724:INFO:Model: K Neighbors Classifier
2025-06-11 19:36:10,784:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2025-06-11 19:36:11,192:INFO:Creating Dashboard logs
2025-06-11 19:36:11,193:INFO:Model: Logistic Regression
2025-06-11 19:36:11,243:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-06-11 19:36:11,683:INFO:Creating Dashboard logs
2025-06-11 19:36:11,683:INFO:Model: Ada Boost Classifier
2025-06-11 19:36:11,768:INFO:Logged params: {'algorithm': 'SAMME.R', 'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 404}
2025-06-11 19:36:12,277:INFO:Creating Dashboard logs
2025-06-11 19:36:12,277:INFO:Model: SVM - Linear Kernel
2025-06-11 19:36:12,335:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 404, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-11 19:36:12,823:INFO:Creating Dashboard logs
2025-06-11 19:36:12,824:INFO:Model: Dummy Classifier
2025-06-11 19:36:12,882:INFO:Logged params: {'constant': None, 'random_state': 404, 'strategy': 'prior'}
2025-06-11 19:36:13,342:INFO:Creating Dashboard logs
2025-06-11 19:36:13,343:INFO:Model: Quadratic Discriminant Analysis
2025-06-11 19:36:13,393:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2025-06-11 19:36:13,835:INFO:_master_model_container: 15
2025-06-11 19:36:13,837:INFO:_display_container: 2
2025-06-11 19:36:13,838:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best')
2025-06-11 19:36:13,838:INFO:compare_models() successfully completed......................................
2025-06-11 19:36:13,839:INFO:Initializing evaluate_model()
2025-06-11 19:36:13,839:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-06-11 19:36:13,899:INFO:Initializing plot_model()
2025-06-11 19:36:13,899:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AEA672410>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-06-11 19:36:13,900:INFO:Checking exceptions
2025-06-11 19:36:13,904:INFO:Preloading libraries
2025-06-11 19:36:13,905:INFO:Copying training dataset
2025-06-11 19:36:13,905:INFO:Plot type: pipeline
2025-06-11 19:36:17,573:INFO:Visual Rendered Successfully
2025-06-11 19:36:17,733:INFO:plot_model() successfully completed......................................
2025-06-11 19:36:23,174:INFO:Initializing save_model()
2025-06-11 19:36:23,174:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=404, splitter='best'), model_name=credit_risk_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=Sim...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-11 19:36:23,175:INFO:Adding model into prep_pipe
2025-06-11 19:36:23,181:INFO:credit_risk_model.pkl saved in current working directory
2025-06-11 19:36:23,186:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'loan_amount',
                                             'term_months', 'num_loans_last_5y',
                                             'current_arrears'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fi...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=404, splitter='best'))],
         verbose=False)
2025-06-11 19:36:23,187:INFO:save_model() successfully completed......................................
2025-06-11 19:38:43,468:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:38:43,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:38:43,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:38:43,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:38:45,441:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\utils\requirements_utils.py:20: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  import pkg_resources  # noqa: TID251

2025-06-11 19:38:45,913:INFO:Initializing load_model()
2025-06-11 19:38:45,914:INFO:load_model(model_name=credit_risk_model, platform=None, authentication=None, verbose=True)
2025-06-11 19:39:04,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:39:04,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:39:04,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:39:04,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:39:06,547:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\utils\requirements_utils.py:20: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  import pkg_resources  # noqa: TID251

2025-06-11 19:39:07,124:INFO:Initializing load_model()
2025-06-11 19:39:07,125:INFO:load_model(model_name=credit_risk_model, platform=None, authentication=None, verbose=True)
2025-06-11 19:41:18,986:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:41:18,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:41:18,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:41:18,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:41:21,018:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\utils\requirements_utils.py:20: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  import pkg_resources  # noqa: TID251

2025-06-11 19:41:21,470:INFO:Initializing load_model()
2025-06-11 19:41:21,471:INFO:load_model(model_name=credit_risk_model, platform=None, authentication=None, verbose=True)
