2025-06-11 19:43:53,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:43:53,519:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:43:53,519:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:43:53,519:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:44:14,612:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:44:14,613:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:44:14,613:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:44:14,613:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:47:48,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:47:48,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:47:48,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:47:48,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:47:51,283:INFO:PyCaret RegressionExperiment
2025-06-11 19:47:51,284:INFO:Logging name: forecast_sales_paper
2025-06-11 19:47:51,284:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-11 19:47:51,284:INFO:version 3.2.0
2025-06-11 19:47:51,284:INFO:Initializing setup()
2025-06-11 19:47:51,284:INFO:self.USI: 194d
2025-06-11 19:47:51,284:INFO:self._variable_keys: {'gpu_n_jobs_param', 'target_param', 'html_param', 'X', 'y', 'X_train', 'log_plots_param', 'data', 'exp_id', 'X_test', 'transform_target_param', 'n_jobs_param', 'fold_shuffle_param', '_available_plots', 'y_test', '_ml_usecase', 'memory', 'USI', 'idx', 'exp_name_log', 'logging_param', 'fold_generator', 'seed', 'y_train', 'gpu_param', 'fold_groups_param', 'pipeline'}
2025-06-11 19:47:51,284:INFO:Checking environment
2025-06-11 19:47:51,284:INFO:python_version: 3.11.9
2025-06-11 19:47:51,284:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-06-11 19:47:51,284:INFO:machine: AMD64
2025-06-11 19:47:51,307:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-11 19:47:51,320:INFO:Memory: svmem(total=33554628608, available=13455159296, percent=59.9, used=20099469312, free=13455159296)
2025-06-11 19:47:51,320:INFO:Physical Core: 6
2025-06-11 19:47:51,321:INFO:Logical Core: 12
2025-06-11 19:47:51,321:INFO:Checking libraries
2025-06-11 19:47:51,321:INFO:System:
2025-06-11 19:47:51,321:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-06-11 19:47:51,321:INFO:executable: C:\Users\amonreal\Documents\amlbash\.venv\Scripts\python.exe
2025-06-11 19:47:51,321:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-11 19:47:51,321:INFO:PyCaret required dependencies:
2025-06-11 19:47:51,909:INFO:                 pip: 24.0
2025-06-11 19:47:51,909:INFO:          setuptools: 80.9.0
2025-06-11 19:47:51,909:INFO:             pycaret: 3.2.0
2025-06-11 19:47:51,909:INFO:             IPython: 9.3.0
2025-06-11 19:47:51,909:INFO:          ipywidgets: 8.1.7
2025-06-11 19:47:51,909:INFO:                tqdm: 4.67.1
2025-06-11 19:47:51,910:INFO:               numpy: 1.25.2
2025-06-11 19:47:51,910:INFO:              pandas: 1.5.3
2025-06-11 19:47:51,910:INFO:              jinja2: 3.1.6
2025-06-11 19:47:51,910:INFO:               scipy: 1.10.1
2025-06-11 19:47:51,910:INFO:              joblib: 1.2.0
2025-06-11 19:47:51,910:INFO:             sklearn: 1.2.2
2025-06-11 19:47:51,910:INFO:                pyod: 2.0.5
2025-06-11 19:47:51,910:INFO:            imblearn: 0.12.4
2025-06-11 19:47:51,910:INFO:   category_encoders: 2.7.0
2025-06-11 19:47:51,910:INFO:            lightgbm: 4.6.0
2025-06-11 19:47:51,910:INFO:               numba: 0.58.1
2025-06-11 19:47:51,910:INFO:            requests: 2.32.4
2025-06-11 19:47:51,910:INFO:          matplotlib: 3.6.0
2025-06-11 19:47:51,910:INFO:          scikitplot: 0.3.7
2025-06-11 19:47:51,910:INFO:         yellowbrick: 1.5
2025-06-11 19:47:51,910:INFO:              plotly: 5.24.1
2025-06-11 19:47:51,910:INFO:    plotly-resampler: Not installed
2025-06-11 19:47:51,910:INFO:             kaleido: 0.2.1
2025-06-11 19:47:51,910:INFO:           schemdraw: 0.15
2025-06-11 19:47:51,910:INFO:         statsmodels: 0.14.4
2025-06-11 19:47:51,910:INFO:              sktime: 0.21.1
2025-06-11 19:47:51,910:INFO:               tbats: 1.1.3
2025-06-11 19:47:51,910:INFO:            pmdarima: 2.0.4
2025-06-11 19:47:51,910:INFO:              psutil: 7.0.0
2025-06-11 19:47:51,910:INFO:          markupsafe: 2.1.5
2025-06-11 19:47:51,910:INFO:             pickle5: Not installed
2025-06-11 19:47:51,910:INFO:         cloudpickle: 2.2.1
2025-06-11 19:47:51,910:INFO:         deprecation: 2.1.0
2025-06-11 19:47:51,910:INFO:              xxhash: 3.5.0
2025-06-11 19:47:51,910:INFO:           wurlitzer: Not installed
2025-06-11 19:47:51,910:INFO:PyCaret optional dependencies:
2025-06-11 19:47:54,972:INFO:                shap: 0.47.2
2025-06-11 19:47:54,972:INFO:           interpret: 0.6.11
2025-06-11 19:47:54,972:INFO:                umap: 0.5.7
2025-06-11 19:47:54,972:INFO:     ydata_profiling: 4.6.0
2025-06-11 19:47:54,972:INFO:  explainerdashboard: 0.5.1
2025-06-11 19:47:54,972:INFO:             autoviz: Not installed
2025-06-11 19:47:54,972:INFO:           fairlearn: 0.7.0
2025-06-11 19:47:54,972:INFO:          deepchecks: Not installed
2025-06-11 19:47:54,972:INFO:             xgboost: Not installed
2025-06-11 19:47:54,972:INFO:            catboost: 1.2.8
2025-06-11 19:47:54,972:INFO:              kmodes: 0.12.2
2025-06-11 19:47:54,972:INFO:             mlxtend: 0.23.1
2025-06-11 19:47:54,972:INFO:       statsforecast: 1.5.0
2025-06-11 19:47:54,972:INFO:        tune_sklearn: Not installed
2025-06-11 19:47:54,972:INFO:                 ray: Not installed
2025-06-11 19:47:54,972:INFO:            hyperopt: 0.2.7
2025-06-11 19:47:54,972:INFO:              optuna: 4.3.0
2025-06-11 19:47:54,972:INFO:               skopt: 0.10.2
2025-06-11 19:47:54,972:INFO:              mlflow: 1.30.1
2025-06-11 19:47:54,972:INFO:              gradio: 3.50.2
2025-06-11 19:47:54,972:INFO:             fastapi: 0.115.12
2025-06-11 19:47:54,972:INFO:             uvicorn: 0.34.2
2025-06-11 19:47:54,972:INFO:              m2cgen: 0.10.0
2025-06-11 19:47:54,972:INFO:           evidently: 0.2.8
2025-06-11 19:47:54,972:INFO:               fugue: 0.8.6
2025-06-11 19:47:54,972:INFO:           streamlit: Not installed
2025-06-11 19:47:54,973:INFO:             prophet: Not installed
2025-06-11 19:47:54,973:INFO:None
2025-06-11 19:47:54,973:INFO:Set up data.
2025-06-11 19:47:54,977:INFO:Set up folding strategy.
2025-06-11 19:47:54,977:INFO:Set up train/test split.
2025-06-11 19:47:54,980:INFO:Set up index.
2025-06-11 19:47:54,981:INFO:Assigning column types.
2025-06-11 19:47:54,984:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-11 19:47:54,984:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-11 19:47:54,987:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-11 19:47:54,990:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,058:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,107:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,108:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:47:55,109:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:47:55,139:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,143:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,146:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,204:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,264:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:47:55,266:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:47:55,267:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-11 19:47:55,275:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,281:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,361:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,404:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:47:55,408:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:47:55,411:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,417:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,458:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,511:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,512:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:47:55,512:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:47:55,513:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-11 19:47:55,520:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,564:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,602:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,602:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:47:55,603:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:47:55,611:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,661:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,695:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:47:55,696:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:47:55,696:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-11 19:47:55,753:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,790:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,790:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:47:55,791:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:47:55,844:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,878:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,879:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:47:55,879:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:47:55,879:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-11 19:47:55,929:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:47:55,965:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:47:55,965:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:47:56,014:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:47:56,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:47:56,049:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:47:56,049:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-11 19:47:56,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:47:56,146:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:47:56,238:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:47:56,238:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:47:56,241:INFO:Preparing preprocessing pipeline...
2025-06-11 19:47:56,241:INFO:Set up simple imputation.
2025-06-11 19:47:56,257:INFO:Finished creating preprocessing pipeline.
2025-06-11 19:47:56,261:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2025-06-11 19:47:56,261:INFO:Creating final display dataframe.
2025-06-11 19:47:56,308:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   505
1                        Target           sales_paper
2                   Target type            Regression
3           Original data shape              (520, 5)
4        Transformed data shape              (520, 5)
5   Transformed train set shape              (364, 5)
6    Transformed test set shape              (156, 5)
7              Numeric features                     4
8                    Preprocess                  True
9               Imputation type                simple
10           Numeric imputation                  mean
11       Categorical imputation                  mode
12               Fold Generator                 KFold
13                  Fold Number                    10
14                     CPU Jobs                    -1
15                      Use GPU                 False
16               Log Experiment          MlflowLogger
17              Experiment Name  forecast_sales_paper
18                          USI                  194d
2025-06-11 19:47:56,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:47:56,425:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:47:56,521:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:47:56,523:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:47:56,524:INFO:Logging experiment in loggers
2025-06-11 19:47:56,790:INFO:SubProcess save_model() called ==================================
2025-06-11 19:47:56,797:INFO:Initializing save_model()
2025-06-11 19:47:56,797:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), model_name=C:\Users\amonreal\AppData\Local\Temp\tmplvoqlb2y\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2025-06-11 19:47:56,797:INFO:Adding model into prep_pipe
2025-06-11 19:47:56,797:WARNING:Only Model saved as it was a pipeline.
2025-06-11 19:47:56,800:INFO:C:\Users\amonreal\AppData\Local\Temp\tmplvoqlb2y\Transformation Pipeline.pkl saved in current working directory
2025-06-11 19:47:56,803:INFO:Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2025-06-11 19:47:56,803:INFO:save_model() successfully completed......................................
2025-06-11 19:47:57,041:INFO:SubProcess save_model() end ==================================
2025-06-11 19:47:57,101:INFO:setup() successfully completed in 5.25s...............
2025-06-11 19:47:57,101:INFO:Initializing compare_models()
2025-06-11 19:47:57,101:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-06-11 19:47:57,103:INFO:Checking exceptions
2025-06-11 19:47:57,104:INFO:Preparing display monitor
2025-06-11 19:47:57,109:INFO:Initializing Linear Regression
2025-06-11 19:47:57,109:INFO:Total runtime is 0.0 minutes
2025-06-11 19:47:57,109:INFO:SubProcess create_model() called ==================================
2025-06-11 19:47:57,110:INFO:Initializing create_model()
2025-06-11 19:47:57,110:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:47:57,110:INFO:Checking exceptions
2025-06-11 19:47:57,110:INFO:Importing libraries
2025-06-11 19:47:57,110:INFO:Copying training dataset
2025-06-11 19:47:57,113:INFO:Defining folds
2025-06-11 19:47:57,113:INFO:Declaring metric variables
2025-06-11 19:47:57,113:INFO:Importing untrained model
2025-06-11 19:47:57,113:INFO:Linear Regression Imported successfully
2025-06-11 19:47:57,113:INFO:Starting cross validation
2025-06-11 19:47:57,119:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:02,677:INFO:Calculating mean and std
2025-06-11 19:48:02,679:INFO:Creating metrics dataframe
2025-06-11 19:48:02,683:INFO:Uploading results into container
2025-06-11 19:48:02,684:INFO:Uploading model into container now
2025-06-11 19:48:02,684:INFO:_master_model_container: 1
2025-06-11 19:48:02,684:INFO:_display_container: 2
2025-06-11 19:48:02,685:INFO:LinearRegression(n_jobs=-1)
2025-06-11 19:48:02,685:INFO:create_model() successfully completed......................................
2025-06-11 19:48:02,849:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:02,849:INFO:Creating metrics dataframe
2025-06-11 19:48:02,853:INFO:Initializing Lasso Regression
2025-06-11 19:48:02,853:INFO:Total runtime is 0.0957382321357727 minutes
2025-06-11 19:48:02,853:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:02,853:INFO:Initializing create_model()
2025-06-11 19:48:02,854:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:02,854:INFO:Checking exceptions
2025-06-11 19:48:02,854:INFO:Importing libraries
2025-06-11 19:48:02,854:INFO:Copying training dataset
2025-06-11 19:48:02,856:INFO:Defining folds
2025-06-11 19:48:02,856:INFO:Declaring metric variables
2025-06-11 19:48:02,856:INFO:Importing untrained model
2025-06-11 19:48:02,856:INFO:Lasso Regression Imported successfully
2025-06-11 19:48:02,857:INFO:Starting cross validation
2025-06-11 19:48:02,857:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:05,562:INFO:Calculating mean and std
2025-06-11 19:48:05,562:INFO:Creating metrics dataframe
2025-06-11 19:48:05,565:INFO:Uploading results into container
2025-06-11 19:48:05,565:INFO:Uploading model into container now
2025-06-11 19:48:05,565:INFO:_master_model_container: 2
2025-06-11 19:48:05,565:INFO:_display_container: 2
2025-06-11 19:48:05,566:INFO:Lasso(random_state=505)
2025-06-11 19:48:05,566:INFO:create_model() successfully completed......................................
2025-06-11 19:48:05,733:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:05,733:INFO:Creating metrics dataframe
2025-06-11 19:48:05,738:INFO:Initializing Ridge Regression
2025-06-11 19:48:05,738:INFO:Total runtime is 0.1438084284464518 minutes
2025-06-11 19:48:05,738:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:05,738:INFO:Initializing create_model()
2025-06-11 19:48:05,738:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:05,738:INFO:Checking exceptions
2025-06-11 19:48:05,738:INFO:Importing libraries
2025-06-11 19:48:05,738:INFO:Copying training dataset
2025-06-11 19:48:05,741:INFO:Defining folds
2025-06-11 19:48:05,741:INFO:Declaring metric variables
2025-06-11 19:48:05,741:INFO:Importing untrained model
2025-06-11 19:48:05,741:INFO:Ridge Regression Imported successfully
2025-06-11 19:48:05,741:INFO:Starting cross validation
2025-06-11 19:48:05,742:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:05,814:INFO:Calculating mean and std
2025-06-11 19:48:05,814:INFO:Creating metrics dataframe
2025-06-11 19:48:05,817:INFO:Uploading results into container
2025-06-11 19:48:05,818:INFO:Uploading model into container now
2025-06-11 19:48:05,818:INFO:_master_model_container: 3
2025-06-11 19:48:05,818:INFO:_display_container: 2
2025-06-11 19:48:05,819:INFO:Ridge(random_state=505)
2025-06-11 19:48:05,819:INFO:create_model() successfully completed......................................
2025-06-11 19:48:05,990:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:05,990:INFO:Creating metrics dataframe
2025-06-11 19:48:05,994:INFO:Initializing Elastic Net
2025-06-11 19:48:05,994:INFO:Total runtime is 0.14807965358098346 minutes
2025-06-11 19:48:05,995:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:05,995:INFO:Initializing create_model()
2025-06-11 19:48:05,995:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:05,995:INFO:Checking exceptions
2025-06-11 19:48:05,995:INFO:Importing libraries
2025-06-11 19:48:05,995:INFO:Copying training dataset
2025-06-11 19:48:05,997:INFO:Defining folds
2025-06-11 19:48:05,997:INFO:Declaring metric variables
2025-06-11 19:48:05,997:INFO:Importing untrained model
2025-06-11 19:48:05,998:INFO:Elastic Net Imported successfully
2025-06-11 19:48:05,998:INFO:Starting cross validation
2025-06-11 19:48:06,000:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:06,087:INFO:Calculating mean and std
2025-06-11 19:48:06,088:INFO:Creating metrics dataframe
2025-06-11 19:48:06,090:INFO:Uploading results into container
2025-06-11 19:48:06,090:INFO:Uploading model into container now
2025-06-11 19:48:06,091:INFO:_master_model_container: 4
2025-06-11 19:48:06,091:INFO:_display_container: 2
2025-06-11 19:48:06,091:INFO:ElasticNet(random_state=505)
2025-06-11 19:48:06,091:INFO:create_model() successfully completed......................................
2025-06-11 19:48:06,255:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:06,256:INFO:Creating metrics dataframe
2025-06-11 19:48:06,258:INFO:Initializing Least Angle Regression
2025-06-11 19:48:06,259:INFO:Total runtime is 0.15250499248504637 minutes
2025-06-11 19:48:06,259:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:06,259:INFO:Initializing create_model()
2025-06-11 19:48:06,259:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:06,259:INFO:Checking exceptions
2025-06-11 19:48:06,259:INFO:Importing libraries
2025-06-11 19:48:06,259:INFO:Copying training dataset
2025-06-11 19:48:06,262:INFO:Defining folds
2025-06-11 19:48:06,262:INFO:Declaring metric variables
2025-06-11 19:48:06,262:INFO:Importing untrained model
2025-06-11 19:48:06,262:INFO:Least Angle Regression Imported successfully
2025-06-11 19:48:06,262:INFO:Starting cross validation
2025-06-11 19:48:06,264:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:06,340:INFO:Calculating mean and std
2025-06-11 19:48:06,340:INFO:Creating metrics dataframe
2025-06-11 19:48:06,342:INFO:Uploading results into container
2025-06-11 19:48:06,343:INFO:Uploading model into container now
2025-06-11 19:48:06,343:INFO:_master_model_container: 5
2025-06-11 19:48:06,343:INFO:_display_container: 2
2025-06-11 19:48:06,343:INFO:Lars(random_state=505)
2025-06-11 19:48:06,343:INFO:create_model() successfully completed......................................
2025-06-11 19:48:06,505:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:06,505:INFO:Creating metrics dataframe
2025-06-11 19:48:06,509:INFO:Initializing Lasso Least Angle Regression
2025-06-11 19:48:06,509:INFO:Total runtime is 0.15665754874547322 minutes
2025-06-11 19:48:06,509:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:06,509:INFO:Initializing create_model()
2025-06-11 19:48:06,509:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:06,509:INFO:Checking exceptions
2025-06-11 19:48:06,509:INFO:Importing libraries
2025-06-11 19:48:06,509:INFO:Copying training dataset
2025-06-11 19:48:06,512:INFO:Defining folds
2025-06-11 19:48:06,512:INFO:Declaring metric variables
2025-06-11 19:48:06,512:INFO:Importing untrained model
2025-06-11 19:48:06,512:INFO:Lasso Least Angle Regression Imported successfully
2025-06-11 19:48:06,513:INFO:Starting cross validation
2025-06-11 19:48:06,513:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:06,587:INFO:Calculating mean and std
2025-06-11 19:48:06,588:INFO:Creating metrics dataframe
2025-06-11 19:48:06,590:INFO:Uploading results into container
2025-06-11 19:48:06,590:INFO:Uploading model into container now
2025-06-11 19:48:06,590:INFO:_master_model_container: 6
2025-06-11 19:48:06,591:INFO:_display_container: 2
2025-06-11 19:48:06,591:INFO:LassoLars(random_state=505)
2025-06-11 19:48:06,591:INFO:create_model() successfully completed......................................
2025-06-11 19:48:06,752:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:06,752:INFO:Creating metrics dataframe
2025-06-11 19:48:06,756:INFO:Initializing Orthogonal Matching Pursuit
2025-06-11 19:48:06,756:INFO:Total runtime is 0.16078668038050334 minutes
2025-06-11 19:48:06,756:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:06,758:INFO:Initializing create_model()
2025-06-11 19:48:06,758:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:06,758:INFO:Checking exceptions
2025-06-11 19:48:06,758:INFO:Importing libraries
2025-06-11 19:48:06,759:INFO:Copying training dataset
2025-06-11 19:48:06,767:INFO:Defining folds
2025-06-11 19:48:06,767:INFO:Declaring metric variables
2025-06-11 19:48:06,767:INFO:Importing untrained model
2025-06-11 19:48:06,768:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-11 19:48:06,768:INFO:Starting cross validation
2025-06-11 19:48:06,769:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:06,841:INFO:Calculating mean and std
2025-06-11 19:48:06,841:INFO:Creating metrics dataframe
2025-06-11 19:48:06,844:INFO:Uploading results into container
2025-06-11 19:48:06,844:INFO:Uploading model into container now
2025-06-11 19:48:06,845:INFO:_master_model_container: 7
2025-06-11 19:48:06,845:INFO:_display_container: 2
2025-06-11 19:48:06,845:INFO:OrthogonalMatchingPursuit()
2025-06-11 19:48:06,845:INFO:create_model() successfully completed......................................
2025-06-11 19:48:07,006:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:07,006:INFO:Creating metrics dataframe
2025-06-11 19:48:07,009:INFO:Initializing Bayesian Ridge
2025-06-11 19:48:07,009:INFO:Total runtime is 0.1650017499923706 minutes
2025-06-11 19:48:07,009:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:07,010:INFO:Initializing create_model()
2025-06-11 19:48:07,010:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:07,010:INFO:Checking exceptions
2025-06-11 19:48:07,010:INFO:Importing libraries
2025-06-11 19:48:07,010:INFO:Copying training dataset
2025-06-11 19:48:07,012:INFO:Defining folds
2025-06-11 19:48:07,012:INFO:Declaring metric variables
2025-06-11 19:48:07,012:INFO:Importing untrained model
2025-06-11 19:48:07,012:INFO:Bayesian Ridge Imported successfully
2025-06-11 19:48:07,012:INFO:Starting cross validation
2025-06-11 19:48:07,014:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:07,075:INFO:Calculating mean and std
2025-06-11 19:48:07,075:INFO:Creating metrics dataframe
2025-06-11 19:48:07,077:INFO:Uploading results into container
2025-06-11 19:48:07,078:INFO:Uploading model into container now
2025-06-11 19:48:07,078:INFO:_master_model_container: 8
2025-06-11 19:48:07,078:INFO:_display_container: 2
2025-06-11 19:48:07,079:INFO:BayesianRidge()
2025-06-11 19:48:07,079:INFO:create_model() successfully completed......................................
2025-06-11 19:48:07,236:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:07,237:INFO:Creating metrics dataframe
2025-06-11 19:48:07,239:INFO:Initializing Passive Aggressive Regressor
2025-06-11 19:48:07,239:INFO:Total runtime is 0.1688351074854533 minutes
2025-06-11 19:48:07,240:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:07,240:INFO:Initializing create_model()
2025-06-11 19:48:07,240:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:07,240:INFO:Checking exceptions
2025-06-11 19:48:07,240:INFO:Importing libraries
2025-06-11 19:48:07,240:INFO:Copying training dataset
2025-06-11 19:48:07,242:INFO:Defining folds
2025-06-11 19:48:07,242:INFO:Declaring metric variables
2025-06-11 19:48:07,242:INFO:Importing untrained model
2025-06-11 19:48:07,242:INFO:Passive Aggressive Regressor Imported successfully
2025-06-11 19:48:07,242:INFO:Starting cross validation
2025-06-11 19:48:07,244:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:07,312:INFO:Calculating mean and std
2025-06-11 19:48:07,313:INFO:Creating metrics dataframe
2025-06-11 19:48:07,317:INFO:Uploading results into container
2025-06-11 19:48:07,317:INFO:Uploading model into container now
2025-06-11 19:48:07,318:INFO:_master_model_container: 9
2025-06-11 19:48:07,318:INFO:_display_container: 2
2025-06-11 19:48:07,318:INFO:PassiveAggressiveRegressor(random_state=505)
2025-06-11 19:48:07,318:INFO:create_model() successfully completed......................................
2025-06-11 19:48:07,474:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:07,474:INFO:Creating metrics dataframe
2025-06-11 19:48:07,477:INFO:Initializing Huber Regressor
2025-06-11 19:48:07,477:INFO:Total runtime is 0.17280485232671103 minutes
2025-06-11 19:48:07,477:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:07,477:INFO:Initializing create_model()
2025-06-11 19:48:07,477:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:07,477:INFO:Checking exceptions
2025-06-11 19:48:07,477:INFO:Importing libraries
2025-06-11 19:48:07,477:INFO:Copying training dataset
2025-06-11 19:48:07,480:INFO:Defining folds
2025-06-11 19:48:07,480:INFO:Declaring metric variables
2025-06-11 19:48:07,481:INFO:Importing untrained model
2025-06-11 19:48:07,482:INFO:Huber Regressor Imported successfully
2025-06-11 19:48:07,482:INFO:Starting cross validation
2025-06-11 19:48:07,484:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:07,546:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 19:48:07,546:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 19:48:07,556:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 19:48:07,561:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 19:48:07,566:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 19:48:07,572:INFO:Calculating mean and std
2025-06-11 19:48:07,572:INFO:Creating metrics dataframe
2025-06-11 19:48:07,575:INFO:Uploading results into container
2025-06-11 19:48:07,575:INFO:Uploading model into container now
2025-06-11 19:48:07,576:INFO:_master_model_container: 10
2025-06-11 19:48:07,576:INFO:_display_container: 2
2025-06-11 19:48:07,576:INFO:HuberRegressor()
2025-06-11 19:48:07,576:INFO:create_model() successfully completed......................................
2025-06-11 19:48:07,738:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:07,739:INFO:Creating metrics dataframe
2025-06-11 19:48:07,745:INFO:Initializing K Neighbors Regressor
2025-06-11 19:48:07,745:INFO:Total runtime is 0.17726174195607505 minutes
2025-06-11 19:48:07,745:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:07,745:INFO:Initializing create_model()
2025-06-11 19:48:07,745:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:07,745:INFO:Checking exceptions
2025-06-11 19:48:07,745:INFO:Importing libraries
2025-06-11 19:48:07,746:INFO:Copying training dataset
2025-06-11 19:48:07,749:INFO:Defining folds
2025-06-11 19:48:07,749:INFO:Declaring metric variables
2025-06-11 19:48:07,749:INFO:Importing untrained model
2025-06-11 19:48:07,749:INFO:K Neighbors Regressor Imported successfully
2025-06-11 19:48:07,749:INFO:Starting cross validation
2025-06-11 19:48:07,750:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:07,830:INFO:Calculating mean and std
2025-06-11 19:48:07,830:INFO:Creating metrics dataframe
2025-06-11 19:48:07,832:INFO:Uploading results into container
2025-06-11 19:48:07,832:INFO:Uploading model into container now
2025-06-11 19:48:07,832:INFO:_master_model_container: 11
2025-06-11 19:48:07,832:INFO:_display_container: 2
2025-06-11 19:48:07,832:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-11 19:48:07,832:INFO:create_model() successfully completed......................................
2025-06-11 19:48:07,987:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:07,988:INFO:Creating metrics dataframe
2025-06-11 19:48:07,991:INFO:Initializing Decision Tree Regressor
2025-06-11 19:48:07,991:INFO:Total runtime is 0.18137028614679973 minutes
2025-06-11 19:48:07,991:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:07,991:INFO:Initializing create_model()
2025-06-11 19:48:07,991:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:07,991:INFO:Checking exceptions
2025-06-11 19:48:07,991:INFO:Importing libraries
2025-06-11 19:48:07,991:INFO:Copying training dataset
2025-06-11 19:48:07,994:INFO:Defining folds
2025-06-11 19:48:07,995:INFO:Declaring metric variables
2025-06-11 19:48:07,995:INFO:Importing untrained model
2025-06-11 19:48:07,996:INFO:Decision Tree Regressor Imported successfully
2025-06-11 19:48:07,996:INFO:Starting cross validation
2025-06-11 19:48:07,998:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:08,075:INFO:Calculating mean and std
2025-06-11 19:48:08,075:INFO:Creating metrics dataframe
2025-06-11 19:48:08,077:INFO:Uploading results into container
2025-06-11 19:48:08,078:INFO:Uploading model into container now
2025-06-11 19:48:08,078:INFO:_master_model_container: 12
2025-06-11 19:48:08,078:INFO:_display_container: 2
2025-06-11 19:48:08,078:INFO:DecisionTreeRegressor(random_state=505)
2025-06-11 19:48:08,078:INFO:create_model() successfully completed......................................
2025-06-11 19:48:08,232:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:08,232:INFO:Creating metrics dataframe
2025-06-11 19:48:08,235:INFO:Initializing Random Forest Regressor
2025-06-11 19:48:08,235:INFO:Total runtime is 0.18543806473414104 minutes
2025-06-11 19:48:08,235:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:08,235:INFO:Initializing create_model()
2025-06-11 19:48:08,235:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:08,235:INFO:Checking exceptions
2025-06-11 19:48:08,235:INFO:Importing libraries
2025-06-11 19:48:08,235:INFO:Copying training dataset
2025-06-11 19:48:08,238:INFO:Defining folds
2025-06-11 19:48:08,238:INFO:Declaring metric variables
2025-06-11 19:48:08,238:INFO:Importing untrained model
2025-06-11 19:48:08,238:INFO:Random Forest Regressor Imported successfully
2025-06-11 19:48:08,238:INFO:Starting cross validation
2025-06-11 19:48:08,239:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:08,646:INFO:Calculating mean and std
2025-06-11 19:48:08,647:INFO:Creating metrics dataframe
2025-06-11 19:48:08,649:INFO:Uploading results into container
2025-06-11 19:48:08,650:INFO:Uploading model into container now
2025-06-11 19:48:08,650:INFO:_master_model_container: 13
2025-06-11 19:48:08,650:INFO:_display_container: 2
2025-06-11 19:48:08,650:INFO:RandomForestRegressor(n_jobs=-1, random_state=505)
2025-06-11 19:48:08,651:INFO:create_model() successfully completed......................................
2025-06-11 19:48:08,809:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:08,809:INFO:Creating metrics dataframe
2025-06-11 19:48:08,812:INFO:Initializing Extra Trees Regressor
2025-06-11 19:48:08,812:INFO:Total runtime is 0.19505635499954224 minutes
2025-06-11 19:48:08,814:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:08,814:INFO:Initializing create_model()
2025-06-11 19:48:08,814:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:08,814:INFO:Checking exceptions
2025-06-11 19:48:08,814:INFO:Importing libraries
2025-06-11 19:48:08,814:INFO:Copying training dataset
2025-06-11 19:48:08,817:INFO:Defining folds
2025-06-11 19:48:08,817:INFO:Declaring metric variables
2025-06-11 19:48:08,818:INFO:Importing untrained model
2025-06-11 19:48:08,819:INFO:Extra Trees Regressor Imported successfully
2025-06-11 19:48:08,819:INFO:Starting cross validation
2025-06-11 19:48:08,820:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:09,127:INFO:Calculating mean and std
2025-06-11 19:48:09,128:INFO:Creating metrics dataframe
2025-06-11 19:48:09,130:INFO:Uploading results into container
2025-06-11 19:48:09,130:INFO:Uploading model into container now
2025-06-11 19:48:09,130:INFO:_master_model_container: 14
2025-06-11 19:48:09,130:INFO:_display_container: 2
2025-06-11 19:48:09,132:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=505)
2025-06-11 19:48:09,132:INFO:create_model() successfully completed......................................
2025-06-11 19:48:09,296:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:09,296:INFO:Creating metrics dataframe
2025-06-11 19:48:09,299:INFO:Initializing AdaBoost Regressor
2025-06-11 19:48:09,300:INFO:Total runtime is 0.20318339665730795 minutes
2025-06-11 19:48:09,300:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:09,300:INFO:Initializing create_model()
2025-06-11 19:48:09,300:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:09,300:INFO:Checking exceptions
2025-06-11 19:48:09,300:INFO:Importing libraries
2025-06-11 19:48:09,300:INFO:Copying training dataset
2025-06-11 19:48:09,302:INFO:Defining folds
2025-06-11 19:48:09,303:INFO:Declaring metric variables
2025-06-11 19:48:09,303:INFO:Importing untrained model
2025-06-11 19:48:09,303:INFO:AdaBoost Regressor Imported successfully
2025-06-11 19:48:09,303:INFO:Starting cross validation
2025-06-11 19:48:09,303:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:09,438:INFO:Calculating mean and std
2025-06-11 19:48:09,438:INFO:Creating metrics dataframe
2025-06-11 19:48:09,441:INFO:Uploading results into container
2025-06-11 19:48:09,441:INFO:Uploading model into container now
2025-06-11 19:48:09,441:INFO:_master_model_container: 15
2025-06-11 19:48:09,441:INFO:_display_container: 2
2025-06-11 19:48:09,441:INFO:AdaBoostRegressor(random_state=505)
2025-06-11 19:48:09,442:INFO:create_model() successfully completed......................................
2025-06-11 19:48:09,601:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:09,601:INFO:Creating metrics dataframe
2025-06-11 19:48:09,605:INFO:Initializing Gradient Boosting Regressor
2025-06-11 19:48:09,605:INFO:Total runtime is 0.20826314687728884 minutes
2025-06-11 19:48:09,606:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:09,606:INFO:Initializing create_model()
2025-06-11 19:48:09,606:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:09,606:INFO:Checking exceptions
2025-06-11 19:48:09,606:INFO:Importing libraries
2025-06-11 19:48:09,606:INFO:Copying training dataset
2025-06-11 19:48:09,608:INFO:Defining folds
2025-06-11 19:48:09,608:INFO:Declaring metric variables
2025-06-11 19:48:09,609:INFO:Importing untrained model
2025-06-11 19:48:09,609:INFO:Gradient Boosting Regressor Imported successfully
2025-06-11 19:48:09,609:INFO:Starting cross validation
2025-06-11 19:48:09,610:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:09,759:INFO:Calculating mean and std
2025-06-11 19:48:09,760:INFO:Creating metrics dataframe
2025-06-11 19:48:09,762:INFO:Uploading results into container
2025-06-11 19:48:09,762:INFO:Uploading model into container now
2025-06-11 19:48:09,763:INFO:_master_model_container: 16
2025-06-11 19:48:09,763:INFO:_display_container: 2
2025-06-11 19:48:09,763:INFO:GradientBoostingRegressor(random_state=505)
2025-06-11 19:48:09,763:INFO:create_model() successfully completed......................................
2025-06-11 19:48:09,923:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:09,923:INFO:Creating metrics dataframe
2025-06-11 19:48:09,929:INFO:Initializing Light Gradient Boosting Machine
2025-06-11 19:48:09,929:INFO:Total runtime is 0.21366443634033205 minutes
2025-06-11 19:48:09,929:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:09,929:INFO:Initializing create_model()
2025-06-11 19:48:09,929:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:09,930:INFO:Checking exceptions
2025-06-11 19:48:09,930:INFO:Importing libraries
2025-06-11 19:48:09,930:INFO:Copying training dataset
2025-06-11 19:48:09,933:INFO:Defining folds
2025-06-11 19:48:09,933:INFO:Declaring metric variables
2025-06-11 19:48:09,933:INFO:Importing untrained model
2025-06-11 19:48:09,934:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-11 19:48:09,934:INFO:Starting cross validation
2025-06-11 19:48:09,934:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:10,615:INFO:Calculating mean and std
2025-06-11 19:48:10,616:INFO:Creating metrics dataframe
2025-06-11 19:48:10,620:INFO:Uploading results into container
2025-06-11 19:48:10,620:INFO:Uploading model into container now
2025-06-11 19:48:10,621:INFO:_master_model_container: 17
2025-06-11 19:48:10,621:INFO:_display_container: 2
2025-06-11 19:48:10,622:INFO:LGBMRegressor(n_jobs=-1, random_state=505)
2025-06-11 19:48:10,622:INFO:create_model() successfully completed......................................
2025-06-11 19:48:10,804:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:10,805:INFO:Creating metrics dataframe
2025-06-11 19:48:10,811:INFO:Initializing CatBoost Regressor
2025-06-11 19:48:10,811:INFO:Total runtime is 0.22837320963541669 minutes
2025-06-11 19:48:10,811:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:10,811:INFO:Initializing create_model()
2025-06-11 19:48:10,811:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:10,811:INFO:Checking exceptions
2025-06-11 19:48:10,811:INFO:Importing libraries
2025-06-11 19:48:10,811:INFO:Copying training dataset
2025-06-11 19:48:10,814:INFO:Defining folds
2025-06-11 19:48:10,814:INFO:Declaring metric variables
2025-06-11 19:48:10,814:INFO:Importing untrained model
2025-06-11 19:48:10,815:INFO:CatBoost Regressor Imported successfully
2025-06-11 19:48:10,815:INFO:Starting cross validation
2025-06-11 19:48:10,815:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:14,903:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\model_selection\_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\joblib\memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\catboost\core.py", line 5873, in fit
    return self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\catboost\core.py", line 2410, in _fit
    self._train(
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\catboost\core.py", line 1790, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 5023, in _catboost._CatBoost._train
  File "_catboost.pyx", line 5072, in _catboost._CatBoost._train
_catboost.CatBoostError: catboost/libs/train_lib/dir_helper.cpp:20: Can't create train working dir: catboost_info


2025-06-11 19:48:14,904:INFO:Calculating mean and std
2025-06-11 19:48:14,904:INFO:Creating metrics dataframe
2025-06-11 19:48:14,906:INFO:Uploading results into container
2025-06-11 19:48:14,907:INFO:Uploading model into container now
2025-06-11 19:48:14,907:INFO:_master_model_container: 18
2025-06-11 19:48:14,907:INFO:_display_container: 2
2025-06-11 19:48:14,907:INFO:<catboost.core.CatBoostRegressor object at 0x000001E00E192C10>
2025-06-11 19:48:14,907:INFO:create_model() successfully completed......................................
2025-06-11 19:48:15,067:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:15,067:INFO:Creating metrics dataframe
2025-06-11 19:48:15,072:INFO:Initializing Dummy Regressor
2025-06-11 19:48:15,072:INFO:Total runtime is 0.29938082297643026 minutes
2025-06-11 19:48:15,072:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:15,072:INFO:Initializing create_model()
2025-06-11 19:48:15,072:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00CCAE6D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:15,072:INFO:Checking exceptions
2025-06-11 19:48:15,072:INFO:Importing libraries
2025-06-11 19:48:15,073:INFO:Copying training dataset
2025-06-11 19:48:15,075:INFO:Defining folds
2025-06-11 19:48:15,075:INFO:Declaring metric variables
2025-06-11 19:48:15,075:INFO:Importing untrained model
2025-06-11 19:48:15,075:INFO:Dummy Regressor Imported successfully
2025-06-11 19:48:15,075:INFO:Starting cross validation
2025-06-11 19:48:15,076:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:15,130:INFO:Calculating mean and std
2025-06-11 19:48:15,131:INFO:Creating metrics dataframe
2025-06-11 19:48:15,133:INFO:Uploading results into container
2025-06-11 19:48:15,133:INFO:Uploading model into container now
2025-06-11 19:48:15,134:INFO:_master_model_container: 19
2025-06-11 19:48:15,134:INFO:_display_container: 2
2025-06-11 19:48:15,134:INFO:DummyRegressor()
2025-06-11 19:48:15,134:INFO:create_model() successfully completed......................................
2025-06-11 19:48:15,288:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:15,288:INFO:Creating metrics dataframe
2025-06-11 19:48:15,299:INFO:Initializing create_model()
2025-06-11 19:48:15,299:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:15,299:INFO:Checking exceptions
2025-06-11 19:48:15,300:INFO:Importing libraries
2025-06-11 19:48:15,300:INFO:Copying training dataset
2025-06-11 19:48:15,302:INFO:Defining folds
2025-06-11 19:48:15,302:INFO:Declaring metric variables
2025-06-11 19:48:15,302:INFO:Importing untrained model
2025-06-11 19:48:15,302:INFO:Declaring custom model
2025-06-11 19:48:15,302:INFO:Bayesian Ridge Imported successfully
2025-06-11 19:48:15,303:INFO:Cross validation set to False
2025-06-11 19:48:15,303:INFO:Fitting Model
2025-06-11 19:48:15,308:INFO:BayesianRidge()
2025-06-11 19:48:15,308:INFO:create_model() successfully completed......................................
2025-06-11 19:48:15,477:INFO:Creating Dashboard logs
2025-06-11 19:48:15,478:INFO:Model: Bayesian Ridge
2025-06-11 19:48:15,532:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'tol': 0.001, 'verbose': False}
2025-06-11 19:48:15,748:INFO:Initializing predict_model()
2025-06-11 19:48:15,748:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=BayesianRidge(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E00CEFD080>)
2025-06-11 19:48:15,748:INFO:Checking exceptions
2025-06-11 19:48:15,748:INFO:Preloading libraries
2025-06-11 19:48:15,960:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml

2025-06-11 19:48:16,565:INFO:Creating Dashboard logs
2025-06-11 19:48:16,565:INFO:Model: Lasso Regression
2025-06-11 19:48:16,625:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 505, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2025-06-11 19:48:17,163:INFO:Creating Dashboard logs
2025-06-11 19:48:17,165:INFO:Model: Lasso Least Angle Regression
2025-06-11 19:48:17,231:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': 'deprecated', 'positive': False, 'precompute': 'auto', 'random_state': 505, 'verbose': False}
2025-06-11 19:48:17,808:INFO:Creating Dashboard logs
2025-06-11 19:48:17,808:INFO:Model: Linear Regression
2025-06-11 19:48:17,855:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2025-06-11 19:48:18,341:INFO:Creating Dashboard logs
2025-06-11 19:48:18,342:INFO:Model: Ridge Regression
2025-06-11 19:48:18,419:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 505, 'solver': 'auto', 'tol': 0.0001}
2025-06-11 19:48:19,024:INFO:Creating Dashboard logs
2025-06-11 19:48:19,025:INFO:Model: Least Angle Regression
2025-06-11 19:48:19,094:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'normalize': 'deprecated', 'precompute': 'auto', 'random_state': 505, 'verbose': False}
2025-06-11 19:48:19,628:INFO:Creating Dashboard logs
2025-06-11 19:48:19,629:INFO:Model: Elastic Net
2025-06-11 19:48:19,701:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 505, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2025-06-11 19:48:20,260:INFO:Creating Dashboard logs
2025-06-11 19:48:20,261:INFO:Model: Extra Trees Regressor
2025-06-11 19:48:20,330:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 505, 'verbose': 0, 'warm_start': False}
2025-06-11 19:48:20,843:INFO:Creating Dashboard logs
2025-06-11 19:48:20,844:INFO:Model: Gradient Boosting Regressor
2025-06-11 19:48:20,924:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 505, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-11 19:48:21,449:INFO:Creating Dashboard logs
2025-06-11 19:48:21,449:INFO:Model: Random Forest Regressor
2025-06-11 19:48:21,524:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 505, 'verbose': 0, 'warm_start': False}
2025-06-11 19:48:22,106:INFO:Creating Dashboard logs
2025-06-11 19:48:22,107:INFO:Model: AdaBoost Regressor
2025-06-11 19:48:22,177:INFO:Logged params: {'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 505}
2025-06-11 19:48:22,745:INFO:Creating Dashboard logs
2025-06-11 19:48:22,747:INFO:Model: Orthogonal Matching Pursuit
2025-06-11 19:48:22,805:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': 'deprecated', 'precompute': 'auto', 'tol': None}
2025-06-11 19:48:23,334:INFO:Creating Dashboard logs
2025-06-11 19:48:23,334:INFO:Model: Light Gradient Boosting Machine
2025-06-11 19:48:23,390:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 505, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2025-06-11 19:48:23,958:INFO:Creating Dashboard logs
2025-06-11 19:48:23,959:INFO:Model: Huber Regressor
2025-06-11 19:48:24,018:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2025-06-11 19:48:24,601:INFO:Creating Dashboard logs
2025-06-11 19:48:24,602:INFO:Model: CatBoost Regressor
2025-06-11 19:48:24,673:WARNING:Couldn't get params for model. Exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 78, in log_model
    params = params.get_all_params()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\catboost\core.py", line 3504, in get_all_params
    raise CatBoostError("There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.")
_catboost.CatBoostError: There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.

2025-06-11 19:48:24,673:INFO:Logged params: {}
2025-06-11 19:48:25,170:INFO:Creating Dashboard logs
2025-06-11 19:48:25,171:INFO:Model: K Neighbors Regressor
2025-06-11 19:48:25,246:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2025-06-11 19:48:25,784:INFO:Creating Dashboard logs
2025-06-11 19:48:25,785:INFO:Model: Decision Tree Regressor
2025-06-11 19:48:25,844:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 505, 'splitter': 'best'}
2025-06-11 19:48:26,387:INFO:Creating Dashboard logs
2025-06-11 19:48:26,387:INFO:Model: Dummy Regressor
2025-06-11 19:48:26,469:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2025-06-11 19:48:26,980:INFO:Creating Dashboard logs
2025-06-11 19:48:26,980:INFO:Model: Passive Aggressive Regressor
2025-06-11 19:48:27,036:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 505, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-11 19:48:27,605:INFO:_master_model_container: 19
2025-06-11 19:48:27,605:INFO:_display_container: 2
2025-06-11 19:48:27,605:INFO:BayesianRidge()
2025-06-11 19:48:27,606:INFO:compare_models() successfully completed......................................
2025-06-11 19:48:27,607:INFO:Initializing evaluate_model()
2025-06-11 19:48:27,607:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=BayesianRidge(), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-06-11 19:48:27,654:INFO:Initializing plot_model()
2025-06-11 19:48:27,655:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0053EB050>, estimator=BayesianRidge(), plot=pipeline, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-06-11 19:48:27,655:INFO:Checking exceptions
2025-06-11 19:48:27,658:INFO:Preloading libraries
2025-06-11 19:48:27,659:INFO:Copying training dataset
2025-06-11 19:48:27,659:INFO:Plot type: pipeline
2025-06-11 19:48:29,962:INFO:Visual Rendered Successfully
2025-06-11 19:48:30,130:INFO:plot_model() successfully completed......................................
2025-06-11 19:48:30,135:INFO:Initializing save_model()
2025-06-11 19:48:30,135:INFO:save_model(model=BayesianRidge(), model_name=model_paper, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-06-11 19:48:30,135:INFO:Adding model into prep_pipe
2025-06-11 19:48:30,137:INFO:model_paper.pkl saved in current working directory
2025-06-11 19:48:30,149:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', BayesianRidge())])
2025-06-11 19:48:30,149:INFO:save_model() successfully completed......................................
2025-06-11 19:48:30,363:INFO:PyCaret RegressionExperiment
2025-06-11 19:48:30,363:INFO:Logging name: forecast_sales_bread
2025-06-11 19:48:30,363:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-11 19:48:30,363:INFO:version 3.2.0
2025-06-11 19:48:30,364:INFO:Initializing setup()
2025-06-11 19:48:30,364:INFO:self.USI: 33da
2025-06-11 19:48:30,364:INFO:self._variable_keys: {'gpu_n_jobs_param', 'target_param', 'html_param', 'X', 'y', 'X_train', 'log_plots_param', 'data', 'exp_id', 'X_test', 'transform_target_param', 'n_jobs_param', 'fold_shuffle_param', '_available_plots', 'y_test', '_ml_usecase', 'memory', 'USI', 'idx', 'exp_name_log', 'logging_param', 'fold_generator', 'seed', 'y_train', 'gpu_param', 'fold_groups_param', 'pipeline'}
2025-06-11 19:48:30,364:INFO:Checking environment
2025-06-11 19:48:30,364:INFO:python_version: 3.11.9
2025-06-11 19:48:30,364:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-06-11 19:48:30,364:INFO:machine: AMD64
2025-06-11 19:48:30,364:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-11 19:48:30,374:INFO:Memory: svmem(total=33554628608, available=11026243584, percent=67.1, used=22528385024, free=11026243584)
2025-06-11 19:48:30,374:INFO:Physical Core: 6
2025-06-11 19:48:30,374:INFO:Logical Core: 12
2025-06-11 19:48:30,374:INFO:Checking libraries
2025-06-11 19:48:30,374:INFO:System:
2025-06-11 19:48:30,374:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-06-11 19:48:30,374:INFO:executable: C:\Users\amonreal\Documents\amlbash\.venv\Scripts\python.exe
2025-06-11 19:48:30,374:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-11 19:48:30,374:INFO:PyCaret required dependencies:
2025-06-11 19:48:30,375:INFO:                 pip: 24.0
2025-06-11 19:48:30,375:INFO:          setuptools: 80.9.0
2025-06-11 19:48:30,375:INFO:             pycaret: 3.2.0
2025-06-11 19:48:30,375:INFO:             IPython: 9.3.0
2025-06-11 19:48:30,375:INFO:          ipywidgets: 8.1.7
2025-06-11 19:48:30,375:INFO:                tqdm: 4.67.1
2025-06-11 19:48:30,375:INFO:               numpy: 1.25.2
2025-06-11 19:48:30,375:INFO:              pandas: 1.5.3
2025-06-11 19:48:30,375:INFO:              jinja2: 3.1.6
2025-06-11 19:48:30,375:INFO:               scipy: 1.10.1
2025-06-11 19:48:30,375:INFO:              joblib: 1.2.0
2025-06-11 19:48:30,375:INFO:             sklearn: 1.2.2
2025-06-11 19:48:30,375:INFO:                pyod: 2.0.5
2025-06-11 19:48:30,375:INFO:            imblearn: 0.12.4
2025-06-11 19:48:30,375:INFO:   category_encoders: 2.7.0
2025-06-11 19:48:30,375:INFO:            lightgbm: 4.6.0
2025-06-11 19:48:30,375:INFO:               numba: 0.58.1
2025-06-11 19:48:30,375:INFO:            requests: 2.32.4
2025-06-11 19:48:30,375:INFO:          matplotlib: 3.6.0
2025-06-11 19:48:30,375:INFO:          scikitplot: 0.3.7
2025-06-11 19:48:30,375:INFO:         yellowbrick: 1.5
2025-06-11 19:48:30,375:INFO:              plotly: 5.24.1
2025-06-11 19:48:30,375:INFO:    plotly-resampler: Not installed
2025-06-11 19:48:30,375:INFO:             kaleido: 0.2.1
2025-06-11 19:48:30,375:INFO:           schemdraw: 0.15
2025-06-11 19:48:30,375:INFO:         statsmodels: 0.14.4
2025-06-11 19:48:30,375:INFO:              sktime: 0.21.1
2025-06-11 19:48:30,375:INFO:               tbats: 1.1.3
2025-06-11 19:48:30,375:INFO:            pmdarima: 2.0.4
2025-06-11 19:48:30,375:INFO:              psutil: 7.0.0
2025-06-11 19:48:30,375:INFO:          markupsafe: 2.1.5
2025-06-11 19:48:30,375:INFO:             pickle5: Not installed
2025-06-11 19:48:30,375:INFO:         cloudpickle: 2.2.1
2025-06-11 19:48:30,375:INFO:         deprecation: 2.1.0
2025-06-11 19:48:30,375:INFO:              xxhash: 3.5.0
2025-06-11 19:48:30,375:INFO:           wurlitzer: Not installed
2025-06-11 19:48:30,375:INFO:PyCaret optional dependencies:
2025-06-11 19:48:30,376:INFO:                shap: 0.47.2
2025-06-11 19:48:30,376:INFO:           interpret: 0.6.11
2025-06-11 19:48:30,376:INFO:                umap: 0.5.7
2025-06-11 19:48:30,376:INFO:     ydata_profiling: 4.6.0
2025-06-11 19:48:30,376:INFO:  explainerdashboard: 0.5.1
2025-06-11 19:48:30,376:INFO:             autoviz: Not installed
2025-06-11 19:48:30,376:INFO:           fairlearn: 0.7.0
2025-06-11 19:48:30,376:INFO:          deepchecks: Not installed
2025-06-11 19:48:30,376:INFO:             xgboost: Not installed
2025-06-11 19:48:30,376:INFO:            catboost: 1.2.8
2025-06-11 19:48:30,376:INFO:              kmodes: 0.12.2
2025-06-11 19:48:30,376:INFO:             mlxtend: 0.23.1
2025-06-11 19:48:30,376:INFO:       statsforecast: 1.5.0
2025-06-11 19:48:30,376:INFO:        tune_sklearn: Not installed
2025-06-11 19:48:30,376:INFO:                 ray: Not installed
2025-06-11 19:48:30,376:INFO:            hyperopt: 0.2.7
2025-06-11 19:48:30,376:INFO:              optuna: 4.3.0
2025-06-11 19:48:30,376:INFO:               skopt: 0.10.2
2025-06-11 19:48:30,376:INFO:              mlflow: 1.30.1
2025-06-11 19:48:30,376:INFO:              gradio: 3.50.2
2025-06-11 19:48:30,376:INFO:             fastapi: 0.115.12
2025-06-11 19:48:30,376:INFO:             uvicorn: 0.34.2
2025-06-11 19:48:30,376:INFO:              m2cgen: 0.10.0
2025-06-11 19:48:30,376:INFO:           evidently: 0.2.8
2025-06-11 19:48:30,376:INFO:               fugue: 0.8.6
2025-06-11 19:48:30,376:INFO:           streamlit: Not installed
2025-06-11 19:48:30,376:INFO:             prophet: Not installed
2025-06-11 19:48:30,376:INFO:None
2025-06-11 19:48:30,376:INFO:Set up data.
2025-06-11 19:48:30,379:INFO:Set up folding strategy.
2025-06-11 19:48:30,379:INFO:Set up train/test split.
2025-06-11 19:48:30,381:INFO:Set up index.
2025-06-11 19:48:30,382:INFO:Assigning column types.
2025-06-11 19:48:30,384:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-11 19:48:30,384:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,389:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,392:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,443:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,479:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,480:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:30,480:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:30,480:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,484:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,488:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,540:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,575:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,576:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:30,576:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:30,577:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-11 19:48:30,580:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,583:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,628:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,666:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:30,667:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:30,680:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,689:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,756:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,792:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,792:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:30,792:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:30,793:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-11 19:48:30,799:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,863:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,918:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,918:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:30,918:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:30,927:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:48:30,972:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:31,009:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:48:31,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:31,009:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:31,010:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-11 19:48:31,063:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:31,150:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:48:31,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:31,150:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:31,211:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:31,251:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:48:31,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:31,252:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:31,252:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-11 19:48:31,335:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:31,402:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:31,402:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:31,452:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:31,487:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:31,487:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:31,487:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-11 19:48:31,573:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:31,574:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:31,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:31,657:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:31,659:INFO:Preparing preprocessing pipeline...
2025-06-11 19:48:31,659:INFO:Set up simple imputation.
2025-06-11 19:48:31,671:INFO:Finished creating preprocessing pipeline.
2025-06-11 19:48:31,674:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2025-06-11 19:48:31,674:INFO:Creating final display dataframe.
2025-06-11 19:48:31,725:INFO:Setup _display_container:                     Description                 Value
0                    Session id                   505
1                        Target           sales_bread
2                   Target type            Regression
3           Original data shape              (520, 5)
4        Transformed data shape              (520, 5)
5   Transformed train set shape              (364, 5)
6    Transformed test set shape              (156, 5)
7              Numeric features                     4
8                    Preprocess                  True
9               Imputation type                simple
10           Numeric imputation                  mean
11       Categorical imputation                  mode
12               Fold Generator                 KFold
13                  Fold Number                    10
14                     CPU Jobs                    -1
15                      Use GPU                 False
16               Log Experiment          MlflowLogger
17              Experiment Name  forecast_sales_bread
18                          USI                  33da
2025-06-11 19:48:31,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:31,838:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:31,921:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:31,921:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:31,922:INFO:Logging experiment in loggers
2025-06-11 19:48:32,101:INFO:SubProcess save_model() called ==================================
2025-06-11 19:48:32,114:INFO:Initializing save_model()
2025-06-11 19:48:32,114:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), model_name=C:\Users\amonreal\AppData\Local\Temp\tmprudai1ta\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2025-06-11 19:48:32,114:INFO:Adding model into prep_pipe
2025-06-11 19:48:32,114:WARNING:Only Model saved as it was a pipeline.
2025-06-11 19:48:32,118:INFO:C:\Users\amonreal\AppData\Local\Temp\tmprudai1ta\Transformation Pipeline.pkl saved in current working directory
2025-06-11 19:48:32,122:INFO:Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2025-06-11 19:48:32,122:INFO:save_model() successfully completed......................................
2025-06-11 19:48:32,345:INFO:SubProcess save_model() end ==================================
2025-06-11 19:48:32,377:INFO:setup() successfully completed in 1.56s...............
2025-06-11 19:48:32,377:INFO:Initializing compare_models()
2025-06-11 19:48:32,377:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-06-11 19:48:32,377:INFO:Checking exceptions
2025-06-11 19:48:32,379:INFO:Preparing display monitor
2025-06-11 19:48:32,381:INFO:Initializing Linear Regression
2025-06-11 19:48:32,381:INFO:Total runtime is 0.0 minutes
2025-06-11 19:48:32,382:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:32,382:INFO:Initializing create_model()
2025-06-11 19:48:32,382:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:32,382:INFO:Checking exceptions
2025-06-11 19:48:32,382:INFO:Importing libraries
2025-06-11 19:48:32,382:INFO:Copying training dataset
2025-06-11 19:48:32,384:INFO:Defining folds
2025-06-11 19:48:32,384:INFO:Declaring metric variables
2025-06-11 19:48:32,385:INFO:Importing untrained model
2025-06-11 19:48:32,385:INFO:Linear Regression Imported successfully
2025-06-11 19:48:32,385:INFO:Starting cross validation
2025-06-11 19:48:32,386:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:32,454:INFO:Calculating mean and std
2025-06-11 19:48:32,454:INFO:Creating metrics dataframe
2025-06-11 19:48:32,457:INFO:Uploading results into container
2025-06-11 19:48:32,457:INFO:Uploading model into container now
2025-06-11 19:48:32,457:INFO:_master_model_container: 1
2025-06-11 19:48:32,457:INFO:_display_container: 2
2025-06-11 19:48:32,458:INFO:LinearRegression(n_jobs=-1)
2025-06-11 19:48:32,458:INFO:create_model() successfully completed......................................
2025-06-11 19:48:32,675:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:32,675:INFO:Creating metrics dataframe
2025-06-11 19:48:32,679:INFO:Initializing Lasso Regression
2025-06-11 19:48:32,679:INFO:Total runtime is 0.004968945185343424 minutes
2025-06-11 19:48:32,679:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:32,679:INFO:Initializing create_model()
2025-06-11 19:48:32,679:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:32,680:INFO:Checking exceptions
2025-06-11 19:48:32,680:INFO:Importing libraries
2025-06-11 19:48:32,680:INFO:Copying training dataset
2025-06-11 19:48:32,681:INFO:Defining folds
2025-06-11 19:48:32,682:INFO:Declaring metric variables
2025-06-11 19:48:32,682:INFO:Importing untrained model
2025-06-11 19:48:32,682:INFO:Lasso Regression Imported successfully
2025-06-11 19:48:32,682:INFO:Starting cross validation
2025-06-11 19:48:32,683:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:32,760:INFO:Calculating mean and std
2025-06-11 19:48:32,760:INFO:Creating metrics dataframe
2025-06-11 19:48:32,763:INFO:Uploading results into container
2025-06-11 19:48:32,764:INFO:Uploading model into container now
2025-06-11 19:48:32,764:INFO:_master_model_container: 2
2025-06-11 19:48:32,764:INFO:_display_container: 2
2025-06-11 19:48:32,765:INFO:Lasso(random_state=505)
2025-06-11 19:48:32,765:INFO:create_model() successfully completed......................................
2025-06-11 19:48:32,987:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:32,988:INFO:Creating metrics dataframe
2025-06-11 19:48:33,000:INFO:Initializing Ridge Regression
2025-06-11 19:48:33,001:INFO:Total runtime is 0.010342101256052654 minutes
2025-06-11 19:48:33,001:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:33,002:INFO:Initializing create_model()
2025-06-11 19:48:33,002:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:33,002:INFO:Checking exceptions
2025-06-11 19:48:33,002:INFO:Importing libraries
2025-06-11 19:48:33,002:INFO:Copying training dataset
2025-06-11 19:48:33,008:INFO:Defining folds
2025-06-11 19:48:33,008:INFO:Declaring metric variables
2025-06-11 19:48:33,008:INFO:Importing untrained model
2025-06-11 19:48:33,008:INFO:Ridge Regression Imported successfully
2025-06-11 19:48:33,009:INFO:Starting cross validation
2025-06-11 19:48:33,009:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:33,094:INFO:Calculating mean and std
2025-06-11 19:48:33,094:INFO:Creating metrics dataframe
2025-06-11 19:48:33,097:INFO:Uploading results into container
2025-06-11 19:48:33,098:INFO:Uploading model into container now
2025-06-11 19:48:33,098:INFO:_master_model_container: 3
2025-06-11 19:48:33,098:INFO:_display_container: 2
2025-06-11 19:48:33,098:INFO:Ridge(random_state=505)
2025-06-11 19:48:33,098:INFO:create_model() successfully completed......................................
2025-06-11 19:48:33,317:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:33,317:INFO:Creating metrics dataframe
2025-06-11 19:48:33,320:INFO:Initializing Elastic Net
2025-06-11 19:48:33,320:INFO:Total runtime is 0.015660516421000165 minutes
2025-06-11 19:48:33,320:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:33,320:INFO:Initializing create_model()
2025-06-11 19:48:33,320:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:33,320:INFO:Checking exceptions
2025-06-11 19:48:33,320:INFO:Importing libraries
2025-06-11 19:48:33,320:INFO:Copying training dataset
2025-06-11 19:48:33,323:INFO:Defining folds
2025-06-11 19:48:33,324:INFO:Declaring metric variables
2025-06-11 19:48:33,324:INFO:Importing untrained model
2025-06-11 19:48:33,324:INFO:Elastic Net Imported successfully
2025-06-11 19:48:33,324:INFO:Starting cross validation
2025-06-11 19:48:33,325:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:33,398:INFO:Calculating mean and std
2025-06-11 19:48:33,398:INFO:Creating metrics dataframe
2025-06-11 19:48:33,401:INFO:Uploading results into container
2025-06-11 19:48:33,401:INFO:Uploading model into container now
2025-06-11 19:48:33,402:INFO:_master_model_container: 4
2025-06-11 19:48:33,402:INFO:_display_container: 2
2025-06-11 19:48:33,402:INFO:ElasticNet(random_state=505)
2025-06-11 19:48:33,402:INFO:create_model() successfully completed......................................
2025-06-11 19:48:33,618:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:33,618:INFO:Creating metrics dataframe
2025-06-11 19:48:33,622:INFO:Initializing Least Angle Regression
2025-06-11 19:48:33,622:INFO:Total runtime is 0.02069279750188192 minutes
2025-06-11 19:48:33,622:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:33,622:INFO:Initializing create_model()
2025-06-11 19:48:33,622:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:33,622:INFO:Checking exceptions
2025-06-11 19:48:33,622:INFO:Importing libraries
2025-06-11 19:48:33,622:INFO:Copying training dataset
2025-06-11 19:48:33,625:INFO:Defining folds
2025-06-11 19:48:33,625:INFO:Declaring metric variables
2025-06-11 19:48:33,625:INFO:Importing untrained model
2025-06-11 19:48:33,625:INFO:Least Angle Regression Imported successfully
2025-06-11 19:48:33,625:INFO:Starting cross validation
2025-06-11 19:48:33,626:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:33,698:INFO:Calculating mean and std
2025-06-11 19:48:33,699:INFO:Creating metrics dataframe
2025-06-11 19:48:33,702:INFO:Uploading results into container
2025-06-11 19:48:33,702:INFO:Uploading model into container now
2025-06-11 19:48:33,703:INFO:_master_model_container: 5
2025-06-11 19:48:33,703:INFO:_display_container: 2
2025-06-11 19:48:33,703:INFO:Lars(random_state=505)
2025-06-11 19:48:33,703:INFO:create_model() successfully completed......................................
2025-06-11 19:48:33,937:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:33,937:INFO:Creating metrics dataframe
2025-06-11 19:48:33,940:INFO:Initializing Lasso Least Angle Regression
2025-06-11 19:48:33,941:INFO:Total runtime is 0.025991427898406985 minutes
2025-06-11 19:48:33,941:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:33,941:INFO:Initializing create_model()
2025-06-11 19:48:33,941:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:33,941:INFO:Checking exceptions
2025-06-11 19:48:33,942:INFO:Importing libraries
2025-06-11 19:48:33,942:INFO:Copying training dataset
2025-06-11 19:48:33,944:INFO:Defining folds
2025-06-11 19:48:33,944:INFO:Declaring metric variables
2025-06-11 19:48:33,944:INFO:Importing untrained model
2025-06-11 19:48:33,944:INFO:Lasso Least Angle Regression Imported successfully
2025-06-11 19:48:33,945:INFO:Starting cross validation
2025-06-11 19:48:33,945:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:34,019:INFO:Calculating mean and std
2025-06-11 19:48:34,020:INFO:Creating metrics dataframe
2025-06-11 19:48:34,022:INFO:Uploading results into container
2025-06-11 19:48:34,023:INFO:Uploading model into container now
2025-06-11 19:48:34,023:INFO:_master_model_container: 6
2025-06-11 19:48:34,023:INFO:_display_container: 2
2025-06-11 19:48:34,024:INFO:LassoLars(random_state=505)
2025-06-11 19:48:34,024:INFO:create_model() successfully completed......................................
2025-06-11 19:48:34,260:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:34,260:INFO:Creating metrics dataframe
2025-06-11 19:48:34,272:INFO:Initializing Orthogonal Matching Pursuit
2025-06-11 19:48:34,272:INFO:Total runtime is 0.03152236938476563 minutes
2025-06-11 19:48:34,272:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:34,273:INFO:Initializing create_model()
2025-06-11 19:48:34,273:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:34,273:INFO:Checking exceptions
2025-06-11 19:48:34,273:INFO:Importing libraries
2025-06-11 19:48:34,273:INFO:Copying training dataset
2025-06-11 19:48:34,279:INFO:Defining folds
2025-06-11 19:48:34,279:INFO:Declaring metric variables
2025-06-11 19:48:34,279:INFO:Importing untrained model
2025-06-11 19:48:34,279:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-11 19:48:34,281:INFO:Starting cross validation
2025-06-11 19:48:34,282:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:34,350:INFO:Calculating mean and std
2025-06-11 19:48:34,350:INFO:Creating metrics dataframe
2025-06-11 19:48:34,354:INFO:Uploading results into container
2025-06-11 19:48:34,354:INFO:Uploading model into container now
2025-06-11 19:48:34,354:INFO:_master_model_container: 7
2025-06-11 19:48:34,355:INFO:_display_container: 2
2025-06-11 19:48:34,355:INFO:OrthogonalMatchingPursuit()
2025-06-11 19:48:34,355:INFO:create_model() successfully completed......................................
2025-06-11 19:48:34,589:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:34,590:INFO:Creating metrics dataframe
2025-06-11 19:48:34,593:INFO:Initializing Bayesian Ridge
2025-06-11 19:48:34,594:INFO:Total runtime is 0.03687357902526856 minutes
2025-06-11 19:48:34,594:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:34,594:INFO:Initializing create_model()
2025-06-11 19:48:34,594:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:34,594:INFO:Checking exceptions
2025-06-11 19:48:34,594:INFO:Importing libraries
2025-06-11 19:48:34,594:INFO:Copying training dataset
2025-06-11 19:48:34,597:INFO:Defining folds
2025-06-11 19:48:34,597:INFO:Declaring metric variables
2025-06-11 19:48:34,597:INFO:Importing untrained model
2025-06-11 19:48:34,598:INFO:Bayesian Ridge Imported successfully
2025-06-11 19:48:34,598:INFO:Starting cross validation
2025-06-11 19:48:34,598:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:34,680:INFO:Calculating mean and std
2025-06-11 19:48:34,680:INFO:Creating metrics dataframe
2025-06-11 19:48:34,683:INFO:Uploading results into container
2025-06-11 19:48:34,683:INFO:Uploading model into container now
2025-06-11 19:48:34,684:INFO:_master_model_container: 8
2025-06-11 19:48:34,684:INFO:_display_container: 2
2025-06-11 19:48:34,684:INFO:BayesianRidge()
2025-06-11 19:48:34,684:INFO:create_model() successfully completed......................................
2025-06-11 19:48:34,904:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:34,904:INFO:Creating metrics dataframe
2025-06-11 19:48:34,908:INFO:Initializing Passive Aggressive Regressor
2025-06-11 19:48:34,909:INFO:Total runtime is 0.04213451544443767 minutes
2025-06-11 19:48:34,909:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:34,909:INFO:Initializing create_model()
2025-06-11 19:48:34,909:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:34,909:INFO:Checking exceptions
2025-06-11 19:48:34,909:INFO:Importing libraries
2025-06-11 19:48:34,909:INFO:Copying training dataset
2025-06-11 19:48:34,912:INFO:Defining folds
2025-06-11 19:48:34,912:INFO:Declaring metric variables
2025-06-11 19:48:34,912:INFO:Importing untrained model
2025-06-11 19:48:34,912:INFO:Passive Aggressive Regressor Imported successfully
2025-06-11 19:48:34,912:INFO:Starting cross validation
2025-06-11 19:48:34,913:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:34,991:INFO:Calculating mean and std
2025-06-11 19:48:34,992:INFO:Creating metrics dataframe
2025-06-11 19:48:34,994:INFO:Uploading results into container
2025-06-11 19:48:34,995:INFO:Uploading model into container now
2025-06-11 19:48:34,995:INFO:_master_model_container: 9
2025-06-11 19:48:34,995:INFO:_display_container: 2
2025-06-11 19:48:34,996:INFO:PassiveAggressiveRegressor(random_state=505)
2025-06-11 19:48:34,996:INFO:create_model() successfully completed......................................
2025-06-11 19:48:35,215:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:35,215:INFO:Creating metrics dataframe
2025-06-11 19:48:35,219:INFO:Initializing Huber Regressor
2025-06-11 19:48:35,219:INFO:Total runtime is 0.04729955196380616 minutes
2025-06-11 19:48:35,219:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:35,220:INFO:Initializing create_model()
2025-06-11 19:48:35,220:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:35,220:INFO:Checking exceptions
2025-06-11 19:48:35,220:INFO:Importing libraries
2025-06-11 19:48:35,220:INFO:Copying training dataset
2025-06-11 19:48:35,222:INFO:Defining folds
2025-06-11 19:48:35,222:INFO:Declaring metric variables
2025-06-11 19:48:35,223:INFO:Importing untrained model
2025-06-11 19:48:35,223:INFO:Huber Regressor Imported successfully
2025-06-11 19:48:35,224:INFO:Starting cross validation
2025-06-11 19:48:35,226:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:35,299:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 19:48:35,299:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 19:48:35,302:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 19:48:35,308:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 19:48:35,312:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 19:48:35,319:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 19:48:35,325:INFO:Calculating mean and std
2025-06-11 19:48:35,326:INFO:Creating metrics dataframe
2025-06-11 19:48:35,328:INFO:Uploading results into container
2025-06-11 19:48:35,329:INFO:Uploading model into container now
2025-06-11 19:48:35,329:INFO:_master_model_container: 10
2025-06-11 19:48:35,329:INFO:_display_container: 2
2025-06-11 19:48:35,329:INFO:HuberRegressor()
2025-06-11 19:48:35,329:INFO:create_model() successfully completed......................................
2025-06-11 19:48:35,570:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:35,570:INFO:Creating metrics dataframe
2025-06-11 19:48:35,574:INFO:Initializing K Neighbors Regressor
2025-06-11 19:48:35,574:INFO:Total runtime is 0.053230051199595146 minutes
2025-06-11 19:48:35,574:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:35,574:INFO:Initializing create_model()
2025-06-11 19:48:35,574:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:35,574:INFO:Checking exceptions
2025-06-11 19:48:35,574:INFO:Importing libraries
2025-06-11 19:48:35,574:INFO:Copying training dataset
2025-06-11 19:48:35,577:INFO:Defining folds
2025-06-11 19:48:35,577:INFO:Declaring metric variables
2025-06-11 19:48:35,578:INFO:Importing untrained model
2025-06-11 19:48:35,578:INFO:K Neighbors Regressor Imported successfully
2025-06-11 19:48:35,578:INFO:Starting cross validation
2025-06-11 19:48:35,579:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:35,683:INFO:Calculating mean and std
2025-06-11 19:48:35,684:INFO:Creating metrics dataframe
2025-06-11 19:48:35,686:INFO:Uploading results into container
2025-06-11 19:48:35,687:INFO:Uploading model into container now
2025-06-11 19:48:35,687:INFO:_master_model_container: 11
2025-06-11 19:48:35,687:INFO:_display_container: 2
2025-06-11 19:48:35,688:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-11 19:48:35,688:INFO:create_model() successfully completed......................................
2025-06-11 19:48:35,927:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:35,927:INFO:Creating metrics dataframe
2025-06-11 19:48:35,931:INFO:Initializing Decision Tree Regressor
2025-06-11 19:48:35,931:INFO:Total runtime is 0.05916449626286826 minutes
2025-06-11 19:48:35,931:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:35,932:INFO:Initializing create_model()
2025-06-11 19:48:35,932:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:35,932:INFO:Checking exceptions
2025-06-11 19:48:35,932:INFO:Importing libraries
2025-06-11 19:48:35,932:INFO:Copying training dataset
2025-06-11 19:48:35,934:INFO:Defining folds
2025-06-11 19:48:35,934:INFO:Declaring metric variables
2025-06-11 19:48:35,935:INFO:Importing untrained model
2025-06-11 19:48:35,935:INFO:Decision Tree Regressor Imported successfully
2025-06-11 19:48:35,935:INFO:Starting cross validation
2025-06-11 19:48:35,936:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:36,017:INFO:Calculating mean and std
2025-06-11 19:48:36,019:INFO:Creating metrics dataframe
2025-06-11 19:48:36,021:INFO:Uploading results into container
2025-06-11 19:48:36,022:INFO:Uploading model into container now
2025-06-11 19:48:36,022:INFO:_master_model_container: 12
2025-06-11 19:48:36,022:INFO:_display_container: 2
2025-06-11 19:48:36,022:INFO:DecisionTreeRegressor(random_state=505)
2025-06-11 19:48:36,022:INFO:create_model() successfully completed......................................
2025-06-11 19:48:36,239:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:36,239:INFO:Creating metrics dataframe
2025-06-11 19:48:36,243:INFO:Initializing Random Forest Regressor
2025-06-11 19:48:36,243:INFO:Total runtime is 0.0643703858057658 minutes
2025-06-11 19:48:36,244:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:36,245:INFO:Initializing create_model()
2025-06-11 19:48:36,245:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:36,246:INFO:Checking exceptions
2025-06-11 19:48:36,246:INFO:Importing libraries
2025-06-11 19:48:36,246:INFO:Copying training dataset
2025-06-11 19:48:36,255:INFO:Defining folds
2025-06-11 19:48:36,255:INFO:Declaring metric variables
2025-06-11 19:48:36,255:INFO:Importing untrained model
2025-06-11 19:48:36,255:INFO:Random Forest Regressor Imported successfully
2025-06-11 19:48:36,256:INFO:Starting cross validation
2025-06-11 19:48:36,256:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:36,734:INFO:Calculating mean and std
2025-06-11 19:48:36,734:INFO:Creating metrics dataframe
2025-06-11 19:48:36,738:INFO:Uploading results into container
2025-06-11 19:48:36,738:INFO:Uploading model into container now
2025-06-11 19:48:36,739:INFO:_master_model_container: 13
2025-06-11 19:48:36,739:INFO:_display_container: 2
2025-06-11 19:48:36,739:INFO:RandomForestRegressor(n_jobs=-1, random_state=505)
2025-06-11 19:48:36,739:INFO:create_model() successfully completed......................................
2025-06-11 19:48:36,968:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:36,968:INFO:Creating metrics dataframe
2025-06-11 19:48:36,974:INFO:Initializing Extra Trees Regressor
2025-06-11 19:48:36,974:INFO:Total runtime is 0.07655490239461264 minutes
2025-06-11 19:48:36,974:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:36,974:INFO:Initializing create_model()
2025-06-11 19:48:36,974:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:36,974:INFO:Checking exceptions
2025-06-11 19:48:36,974:INFO:Importing libraries
2025-06-11 19:48:36,974:INFO:Copying training dataset
2025-06-11 19:48:36,976:INFO:Defining folds
2025-06-11 19:48:36,977:INFO:Declaring metric variables
2025-06-11 19:48:36,977:INFO:Importing untrained model
2025-06-11 19:48:36,977:INFO:Extra Trees Regressor Imported successfully
2025-06-11 19:48:36,977:INFO:Starting cross validation
2025-06-11 19:48:36,979:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:37,317:INFO:Calculating mean and std
2025-06-11 19:48:37,318:INFO:Creating metrics dataframe
2025-06-11 19:48:37,320:INFO:Uploading results into container
2025-06-11 19:48:37,321:INFO:Uploading model into container now
2025-06-11 19:48:37,321:INFO:_master_model_container: 14
2025-06-11 19:48:37,321:INFO:_display_container: 2
2025-06-11 19:48:37,321:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=505)
2025-06-11 19:48:37,322:INFO:create_model() successfully completed......................................
2025-06-11 19:48:37,519:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:37,520:INFO:Creating metrics dataframe
2025-06-11 19:48:37,525:INFO:Initializing AdaBoost Regressor
2025-06-11 19:48:37,525:INFO:Total runtime is 0.08574260075887045 minutes
2025-06-11 19:48:37,525:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:37,526:INFO:Initializing create_model()
2025-06-11 19:48:37,526:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:37,526:INFO:Checking exceptions
2025-06-11 19:48:37,526:INFO:Importing libraries
2025-06-11 19:48:37,526:INFO:Copying training dataset
2025-06-11 19:48:37,530:INFO:Defining folds
2025-06-11 19:48:37,530:INFO:Declaring metric variables
2025-06-11 19:48:37,531:INFO:Importing untrained model
2025-06-11 19:48:37,531:INFO:AdaBoost Regressor Imported successfully
2025-06-11 19:48:37,531:INFO:Starting cross validation
2025-06-11 19:48:37,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:37,695:INFO:Calculating mean and std
2025-06-11 19:48:37,696:INFO:Creating metrics dataframe
2025-06-11 19:48:37,699:INFO:Uploading results into container
2025-06-11 19:48:37,699:INFO:Uploading model into container now
2025-06-11 19:48:37,700:INFO:_master_model_container: 15
2025-06-11 19:48:37,700:INFO:_display_container: 2
2025-06-11 19:48:37,700:INFO:AdaBoostRegressor(random_state=505)
2025-06-11 19:48:37,701:INFO:create_model() successfully completed......................................
2025-06-11 19:48:37,888:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:37,888:INFO:Creating metrics dataframe
2025-06-11 19:48:37,892:INFO:Initializing Gradient Boosting Regressor
2025-06-11 19:48:37,892:INFO:Total runtime is 0.09185005426406861 minutes
2025-06-11 19:48:37,892:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:37,892:INFO:Initializing create_model()
2025-06-11 19:48:37,892:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:37,892:INFO:Checking exceptions
2025-06-11 19:48:37,892:INFO:Importing libraries
2025-06-11 19:48:37,893:INFO:Copying training dataset
2025-06-11 19:48:37,894:INFO:Defining folds
2025-06-11 19:48:37,895:INFO:Declaring metric variables
2025-06-11 19:48:37,895:INFO:Importing untrained model
2025-06-11 19:48:37,895:INFO:Gradient Boosting Regressor Imported successfully
2025-06-11 19:48:37,895:INFO:Starting cross validation
2025-06-11 19:48:37,896:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:38,051:INFO:Calculating mean and std
2025-06-11 19:48:38,053:INFO:Creating metrics dataframe
2025-06-11 19:48:38,055:INFO:Uploading results into container
2025-06-11 19:48:38,056:INFO:Uploading model into container now
2025-06-11 19:48:38,056:INFO:_master_model_container: 16
2025-06-11 19:48:38,056:INFO:_display_container: 2
2025-06-11 19:48:38,056:INFO:GradientBoostingRegressor(random_state=505)
2025-06-11 19:48:38,056:INFO:create_model() successfully completed......................................
2025-06-11 19:48:38,264:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:38,264:INFO:Creating metrics dataframe
2025-06-11 19:48:38,267:INFO:Initializing Light Gradient Boosting Machine
2025-06-11 19:48:38,267:INFO:Total runtime is 0.09810217618942262 minutes
2025-06-11 19:48:38,267:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:38,268:INFO:Initializing create_model()
2025-06-11 19:48:38,268:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:38,268:INFO:Checking exceptions
2025-06-11 19:48:38,268:INFO:Importing libraries
2025-06-11 19:48:38,268:INFO:Copying training dataset
2025-06-11 19:48:38,270:INFO:Defining folds
2025-06-11 19:48:38,270:INFO:Declaring metric variables
2025-06-11 19:48:38,271:INFO:Importing untrained model
2025-06-11 19:48:38,271:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-11 19:48:38,271:INFO:Starting cross validation
2025-06-11 19:48:38,272:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:38,748:INFO:Calculating mean and std
2025-06-11 19:48:38,749:INFO:Creating metrics dataframe
2025-06-11 19:48:38,752:INFO:Uploading results into container
2025-06-11 19:48:38,753:INFO:Uploading model into container now
2025-06-11 19:48:38,753:INFO:_master_model_container: 17
2025-06-11 19:48:38,753:INFO:_display_container: 2
2025-06-11 19:48:38,754:INFO:LGBMRegressor(n_jobs=-1, random_state=505)
2025-06-11 19:48:38,754:INFO:create_model() successfully completed......................................
2025-06-11 19:48:38,973:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:38,973:INFO:Creating metrics dataframe
2025-06-11 19:48:38,977:INFO:Initializing CatBoost Regressor
2025-06-11 19:48:38,977:INFO:Total runtime is 0.10993138551712037 minutes
2025-06-11 19:48:38,977:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:38,977:INFO:Initializing create_model()
2025-06-11 19:48:38,977:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:38,977:INFO:Checking exceptions
2025-06-11 19:48:38,977:INFO:Importing libraries
2025-06-11 19:48:38,977:INFO:Copying training dataset
2025-06-11 19:48:38,980:INFO:Defining folds
2025-06-11 19:48:38,980:INFO:Declaring metric variables
2025-06-11 19:48:38,980:INFO:Importing untrained model
2025-06-11 19:48:38,980:INFO:CatBoost Regressor Imported successfully
2025-06-11 19:48:38,980:INFO:Starting cross validation
2025-06-11 19:48:38,981:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:42,989:INFO:Calculating mean and std
2025-06-11 19:48:42,990:INFO:Creating metrics dataframe
2025-06-11 19:48:42,992:INFO:Uploading results into container
2025-06-11 19:48:42,993:INFO:Uploading model into container now
2025-06-11 19:48:42,993:INFO:_master_model_container: 18
2025-06-11 19:48:42,993:INFO:_display_container: 2
2025-06-11 19:48:42,993:INFO:<catboost.core.CatBoostRegressor object at 0x000001E010B57D50>
2025-06-11 19:48:42,993:INFO:create_model() successfully completed......................................
2025-06-11 19:48:43,172:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:43,172:INFO:Creating metrics dataframe
2025-06-11 19:48:43,175:INFO:Initializing Dummy Regressor
2025-06-11 19:48:43,175:INFO:Total runtime is 0.17990210851033528 minutes
2025-06-11 19:48:43,176:INFO:SubProcess create_model() called ==================================
2025-06-11 19:48:43,176:INFO:Initializing create_model()
2025-06-11 19:48:43,176:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E300090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:43,176:INFO:Checking exceptions
2025-06-11 19:48:43,176:INFO:Importing libraries
2025-06-11 19:48:43,176:INFO:Copying training dataset
2025-06-11 19:48:43,178:INFO:Defining folds
2025-06-11 19:48:43,178:INFO:Declaring metric variables
2025-06-11 19:48:43,178:INFO:Importing untrained model
2025-06-11 19:48:43,178:INFO:Dummy Regressor Imported successfully
2025-06-11 19:48:43,178:INFO:Starting cross validation
2025-06-11 19:48:43,179:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:48:43,261:INFO:Calculating mean and std
2025-06-11 19:48:43,262:INFO:Creating metrics dataframe
2025-06-11 19:48:43,264:INFO:Uploading results into container
2025-06-11 19:48:43,266:INFO:Uploading model into container now
2025-06-11 19:48:43,266:INFO:_master_model_container: 19
2025-06-11 19:48:43,267:INFO:_display_container: 2
2025-06-11 19:48:43,267:INFO:DummyRegressor()
2025-06-11 19:48:43,267:INFO:create_model() successfully completed......................................
2025-06-11 19:48:43,435:INFO:SubProcess create_model() end ==================================
2025-06-11 19:48:43,435:INFO:Creating metrics dataframe
2025-06-11 19:48:43,442:INFO:Initializing create_model()
2025-06-11 19:48:43,442:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=Lasso(random_state=505), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:48:43,443:INFO:Checking exceptions
2025-06-11 19:48:43,443:INFO:Importing libraries
2025-06-11 19:48:43,443:INFO:Copying training dataset
2025-06-11 19:48:43,445:INFO:Defining folds
2025-06-11 19:48:43,445:INFO:Declaring metric variables
2025-06-11 19:48:43,445:INFO:Importing untrained model
2025-06-11 19:48:43,445:INFO:Declaring custom model
2025-06-11 19:48:43,445:INFO:Lasso Regression Imported successfully
2025-06-11 19:48:43,446:INFO:Cross validation set to False
2025-06-11 19:48:43,446:INFO:Fitting Model
2025-06-11 19:48:43,452:INFO:Lasso(random_state=505)
2025-06-11 19:48:43,452:INFO:create_model() successfully completed......................................
2025-06-11 19:48:43,627:INFO:Creating Dashboard logs
2025-06-11 19:48:43,628:INFO:Model: Lasso Regression
2025-06-11 19:48:43,690:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 505, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2025-06-11 19:48:43,922:INFO:Initializing predict_model()
2025-06-11 19:48:43,922:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=Lasso(random_state=505), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E010B62700>)
2025-06-11 19:48:43,922:INFO:Checking exceptions
2025-06-11 19:48:43,922:INFO:Preloading libraries
2025-06-11 19:48:44,442:INFO:Creating Dashboard logs
2025-06-11 19:48:44,443:INFO:Model: Lasso Least Angle Regression
2025-06-11 19:48:44,505:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': 'deprecated', 'positive': False, 'precompute': 'auto', 'random_state': 505, 'verbose': False}
2025-06-11 19:48:45,005:INFO:Creating Dashboard logs
2025-06-11 19:48:45,006:INFO:Model: Bayesian Ridge
2025-06-11 19:48:45,063:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'tol': 0.001, 'verbose': False}
2025-06-11 19:48:45,625:INFO:Creating Dashboard logs
2025-06-11 19:48:45,625:INFO:Model: Ridge Regression
2025-06-11 19:48:45,703:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 505, 'solver': 'auto', 'tol': 0.0001}
2025-06-11 19:48:46,307:INFO:Creating Dashboard logs
2025-06-11 19:48:46,307:INFO:Model: Linear Regression
2025-06-11 19:48:46,389:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2025-06-11 19:48:46,948:INFO:Creating Dashboard logs
2025-06-11 19:48:46,948:INFO:Model: Elastic Net
2025-06-11 19:48:47,014:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 505, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2025-06-11 19:48:47,598:INFO:Creating Dashboard logs
2025-06-11 19:48:47,599:INFO:Model: Least Angle Regression
2025-06-11 19:48:47,668:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'normalize': 'deprecated', 'precompute': 'auto', 'random_state': 505, 'verbose': False}
2025-06-11 19:48:48,253:INFO:Creating Dashboard logs
2025-06-11 19:48:48,254:INFO:Model: Orthogonal Matching Pursuit
2025-06-11 19:48:48,320:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': 'deprecated', 'precompute': 'auto', 'tol': None}
2025-06-11 19:48:48,773:INFO:Creating Dashboard logs
2025-06-11 19:48:48,773:INFO:Model: AdaBoost Regressor
2025-06-11 19:48:48,833:INFO:Logged params: {'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 505}
2025-06-11 19:48:49,287:INFO:Creating Dashboard logs
2025-06-11 19:48:49,288:INFO:Model: Random Forest Regressor
2025-06-11 19:48:49,334:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 505, 'verbose': 0, 'warm_start': False}
2025-06-11 19:48:49,809:INFO:Creating Dashboard logs
2025-06-11 19:48:49,809:INFO:Model: CatBoost Regressor
2025-06-11 19:48:49,862:WARNING:Couldn't get params for model. Exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 78, in log_model
    params = params.get_all_params()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\catboost\core.py", line 3504, in get_all_params
    raise CatBoostError("There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.")
_catboost.CatBoostError: There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.

2025-06-11 19:48:49,862:INFO:Logged params: {}
2025-06-11 19:48:50,293:INFO:Creating Dashboard logs
2025-06-11 19:48:50,294:INFO:Model: Huber Regressor
2025-06-11 19:48:50,357:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2025-06-11 19:48:50,852:INFO:Creating Dashboard logs
2025-06-11 19:48:50,853:INFO:Model: K Neighbors Regressor
2025-06-11 19:48:50,901:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2025-06-11 19:48:51,353:INFO:Creating Dashboard logs
2025-06-11 19:48:51,354:INFO:Model: Light Gradient Boosting Machine
2025-06-11 19:48:51,406:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 505, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2025-06-11 19:48:51,876:INFO:Creating Dashboard logs
2025-06-11 19:48:51,876:INFO:Model: Gradient Boosting Regressor
2025-06-11 19:48:51,931:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 505, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-11 19:48:52,416:INFO:Creating Dashboard logs
2025-06-11 19:48:52,417:INFO:Model: Extra Trees Regressor
2025-06-11 19:48:52,468:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 505, 'verbose': 0, 'warm_start': False}
2025-06-11 19:48:52,951:INFO:Creating Dashboard logs
2025-06-11 19:48:52,951:INFO:Model: Dummy Regressor
2025-06-11 19:48:53,008:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2025-06-11 19:48:53,464:INFO:Creating Dashboard logs
2025-06-11 19:48:53,465:INFO:Model: Decision Tree Regressor
2025-06-11 19:48:53,514:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 505, 'splitter': 'best'}
2025-06-11 19:48:53,975:INFO:Creating Dashboard logs
2025-06-11 19:48:53,975:INFO:Model: Passive Aggressive Regressor
2025-06-11 19:48:54,025:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 505, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-11 19:48:54,541:INFO:_master_model_container: 19
2025-06-11 19:48:54,541:INFO:_display_container: 2
2025-06-11 19:48:54,541:INFO:Lasso(random_state=505)
2025-06-11 19:48:54,541:INFO:compare_models() successfully completed......................................
2025-06-11 19:48:54,541:INFO:Initializing evaluate_model()
2025-06-11 19:48:54,541:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=Lasso(random_state=505), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-06-11 19:48:54,546:INFO:Initializing plot_model()
2025-06-11 19:48:54,546:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E539750>, estimator=Lasso(random_state=505), plot=pipeline, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-06-11 19:48:54,546:INFO:Checking exceptions
2025-06-11 19:48:54,547:INFO:Preloading libraries
2025-06-11 19:48:54,547:INFO:Copying training dataset
2025-06-11 19:48:54,547:INFO:Plot type: pipeline
2025-06-11 19:48:58,347:INFO:Visual Rendered Successfully
2025-06-11 19:48:58,523:INFO:plot_model() successfully completed......................................
2025-06-11 19:48:58,529:INFO:Initializing save_model()
2025-06-11 19:48:58,530:INFO:save_model(model=Lasso(random_state=505), model_name=model_bread, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-06-11 19:48:58,530:INFO:Adding model into prep_pipe
2025-06-11 19:48:58,533:INFO:model_bread.pkl saved in current working directory
2025-06-11 19:48:58,538:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', Lasso(random_state=505))])
2025-06-11 19:48:58,538:INFO:save_model() successfully completed......................................
2025-06-11 19:48:58,753:INFO:PyCaret RegressionExperiment
2025-06-11 19:48:58,753:INFO:Logging name: forecast_sales_milk
2025-06-11 19:48:58,753:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-11 19:48:58,753:INFO:version 3.2.0
2025-06-11 19:48:58,753:INFO:Initializing setup()
2025-06-11 19:48:58,753:INFO:self.USI: d986
2025-06-11 19:48:58,753:INFO:self._variable_keys: {'gpu_n_jobs_param', 'target_param', 'html_param', 'X', 'y', 'X_train', 'log_plots_param', 'data', 'exp_id', 'X_test', 'transform_target_param', 'n_jobs_param', 'fold_shuffle_param', '_available_plots', 'y_test', '_ml_usecase', 'memory', 'USI', 'idx', 'exp_name_log', 'logging_param', 'fold_generator', 'seed', 'y_train', 'gpu_param', 'fold_groups_param', 'pipeline'}
2025-06-11 19:48:58,753:INFO:Checking environment
2025-06-11 19:48:58,753:INFO:python_version: 3.11.9
2025-06-11 19:48:58,753:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-06-11 19:48:58,753:INFO:machine: AMD64
2025-06-11 19:48:58,753:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-11 19:48:58,764:INFO:Memory: svmem(total=33554628608, available=10605559808, percent=68.4, used=22949068800, free=10605559808)
2025-06-11 19:48:58,764:INFO:Physical Core: 6
2025-06-11 19:48:58,764:INFO:Logical Core: 12
2025-06-11 19:48:58,764:INFO:Checking libraries
2025-06-11 19:48:58,764:INFO:System:
2025-06-11 19:48:58,764:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-06-11 19:48:58,764:INFO:executable: C:\Users\amonreal\Documents\amlbash\.venv\Scripts\python.exe
2025-06-11 19:48:58,764:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-11 19:48:58,764:INFO:PyCaret required dependencies:
2025-06-11 19:48:58,764:INFO:                 pip: 24.0
2025-06-11 19:48:58,764:INFO:          setuptools: 80.9.0
2025-06-11 19:48:58,764:INFO:             pycaret: 3.2.0
2025-06-11 19:48:58,764:INFO:             IPython: 9.3.0
2025-06-11 19:48:58,764:INFO:          ipywidgets: 8.1.7
2025-06-11 19:48:58,764:INFO:                tqdm: 4.67.1
2025-06-11 19:48:58,764:INFO:               numpy: 1.25.2
2025-06-11 19:48:58,764:INFO:              pandas: 1.5.3
2025-06-11 19:48:58,764:INFO:              jinja2: 3.1.6
2025-06-11 19:48:58,764:INFO:               scipy: 1.10.1
2025-06-11 19:48:58,764:INFO:              joblib: 1.2.0
2025-06-11 19:48:58,764:INFO:             sklearn: 1.2.2
2025-06-11 19:48:58,765:INFO:                pyod: 2.0.5
2025-06-11 19:48:58,765:INFO:            imblearn: 0.12.4
2025-06-11 19:48:58,765:INFO:   category_encoders: 2.7.0
2025-06-11 19:48:58,765:INFO:            lightgbm: 4.6.0
2025-06-11 19:48:58,765:INFO:               numba: 0.58.1
2025-06-11 19:48:58,765:INFO:            requests: 2.32.4
2025-06-11 19:48:58,765:INFO:          matplotlib: 3.6.0
2025-06-11 19:48:58,765:INFO:          scikitplot: 0.3.7
2025-06-11 19:48:58,765:INFO:         yellowbrick: 1.5
2025-06-11 19:48:58,765:INFO:              plotly: 5.24.1
2025-06-11 19:48:58,765:INFO:    plotly-resampler: Not installed
2025-06-11 19:48:58,765:INFO:             kaleido: 0.2.1
2025-06-11 19:48:58,765:INFO:           schemdraw: 0.15
2025-06-11 19:48:58,765:INFO:         statsmodels: 0.14.4
2025-06-11 19:48:58,765:INFO:              sktime: 0.21.1
2025-06-11 19:48:58,765:INFO:               tbats: 1.1.3
2025-06-11 19:48:58,765:INFO:            pmdarima: 2.0.4
2025-06-11 19:48:58,765:INFO:              psutil: 7.0.0
2025-06-11 19:48:58,765:INFO:          markupsafe: 2.1.5
2025-06-11 19:48:58,765:INFO:             pickle5: Not installed
2025-06-11 19:48:58,765:INFO:         cloudpickle: 2.2.1
2025-06-11 19:48:58,765:INFO:         deprecation: 2.1.0
2025-06-11 19:48:58,765:INFO:              xxhash: 3.5.0
2025-06-11 19:48:58,765:INFO:           wurlitzer: Not installed
2025-06-11 19:48:58,765:INFO:PyCaret optional dependencies:
2025-06-11 19:48:58,765:INFO:                shap: 0.47.2
2025-06-11 19:48:58,765:INFO:           interpret: 0.6.11
2025-06-11 19:48:58,765:INFO:                umap: 0.5.7
2025-06-11 19:48:58,765:INFO:     ydata_profiling: 4.6.0
2025-06-11 19:48:58,765:INFO:  explainerdashboard: 0.5.1
2025-06-11 19:48:58,765:INFO:             autoviz: Not installed
2025-06-11 19:48:58,765:INFO:           fairlearn: 0.7.0
2025-06-11 19:48:58,765:INFO:          deepchecks: Not installed
2025-06-11 19:48:58,765:INFO:             xgboost: Not installed
2025-06-11 19:48:58,765:INFO:            catboost: 1.2.8
2025-06-11 19:48:58,765:INFO:              kmodes: 0.12.2
2025-06-11 19:48:58,766:INFO:             mlxtend: 0.23.1
2025-06-11 19:48:58,766:INFO:       statsforecast: 1.5.0
2025-06-11 19:48:58,766:INFO:        tune_sklearn: Not installed
2025-06-11 19:48:58,766:INFO:                 ray: Not installed
2025-06-11 19:48:58,766:INFO:            hyperopt: 0.2.7
2025-06-11 19:48:58,766:INFO:              optuna: 4.3.0
2025-06-11 19:48:58,766:INFO:               skopt: 0.10.2
2025-06-11 19:48:58,766:INFO:              mlflow: 1.30.1
2025-06-11 19:48:58,766:INFO:              gradio: 3.50.2
2025-06-11 19:48:58,766:INFO:             fastapi: 0.115.12
2025-06-11 19:48:58,766:INFO:             uvicorn: 0.34.2
2025-06-11 19:48:58,766:INFO:              m2cgen: 0.10.0
2025-06-11 19:48:58,766:INFO:           evidently: 0.2.8
2025-06-11 19:48:58,766:INFO:               fugue: 0.8.6
2025-06-11 19:48:58,766:INFO:           streamlit: Not installed
2025-06-11 19:48:58,766:INFO:             prophet: Not installed
2025-06-11 19:48:58,766:INFO:None
2025-06-11 19:48:58,766:INFO:Set up data.
2025-06-11 19:48:58,769:INFO:Set up folding strategy.
2025-06-11 19:48:58,769:INFO:Set up train/test split.
2025-06-11 19:48:58,771:INFO:Set up index.
2025-06-11 19:48:58,772:INFO:Assigning column types.
2025-06-11 19:48:58,774:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-11 19:48:58,774:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-11 19:48:58,779:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-11 19:48:58,783:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:48:58,831:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:58,865:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:48:58,865:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:58,866:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:58,866:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-11 19:48:58,870:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-11 19:48:58,874:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:48:58,918:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:58,953:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:48:58,953:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:58,953:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:58,954:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-11 19:48:58,958:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-11 19:48:58,962:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,005:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,038:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,040:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:59,040:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:59,044:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,047:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,091:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,125:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:59,126:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:59,126:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-11 19:48:59,133:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,176:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,212:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:59,213:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:59,219:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,263:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,297:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,297:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:59,297:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:59,298:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-11 19:48:59,349:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,383:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:59,384:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:59,435:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,470:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:59,470:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:59,471:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-11 19:48:59,524:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:59,559:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:59,611:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-11 19:48:59,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:59,646:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:59,646:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-11 19:48:59,732:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:59,732:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:59,817:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:59,818:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:48:59,819:INFO:Preparing preprocessing pipeline...
2025-06-11 19:48:59,819:INFO:Set up simple imputation.
2025-06-11 19:48:59,832:INFO:Finished creating preprocessing pipeline.
2025-06-11 19:48:59,835:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2025-06-11 19:48:59,835:INFO:Creating final display dataframe.
2025-06-11 19:48:59,878:INFO:Setup _display_container:                     Description                Value
0                    Session id                  505
1                        Target           sales_milk
2                   Target type           Regression
3           Original data shape             (520, 5)
4        Transformed data shape             (520, 5)
5   Transformed train set shape             (364, 5)
6    Transformed test set shape             (156, 5)
7              Numeric features                    4
8                    Preprocess                 True
9               Imputation type               simple
10           Numeric imputation                 mean
11       Categorical imputation                 mode
12               Fold Generator                KFold
13                  Fold Number                   10
14                     CPU Jobs                   -1
15                      Use GPU                False
16               Log Experiment         MlflowLogger
17              Experiment Name  forecast_sales_milk
18                          USI                 d986
2025-06-11 19:48:59,970:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:48:59,970:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:49:00,058:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-11 19:49:00,058:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-11 19:49:00,059:INFO:Logging experiment in loggers
2025-06-11 19:49:00,192:INFO:SubProcess save_model() called ==================================
2025-06-11 19:49:00,198:INFO:Initializing save_model()
2025-06-11 19:49:00,198:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), model_name=C:\Users\amonreal\AppData\Local\Temp\tmpu4e4705u\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2025-06-11 19:49:00,198:INFO:Adding model into prep_pipe
2025-06-11 19:49:00,198:WARNING:Only Model saved as it was a pipeline.
2025-06-11 19:49:00,200:INFO:C:\Users\amonreal\AppData\Local\Temp\tmpu4e4705u\Transformation Pipeline.pkl saved in current working directory
2025-06-11 19:49:00,202:INFO:Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2025-06-11 19:49:00,202:INFO:save_model() successfully completed......................................
2025-06-11 19:49:00,373:INFO:SubProcess save_model() end ==================================
2025-06-11 19:49:00,413:INFO:setup() successfully completed in 1.31s...............
2025-06-11 19:49:00,414:INFO:Initializing compare_models()
2025-06-11 19:49:00,414:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-06-11 19:49:00,414:INFO:Checking exceptions
2025-06-11 19:49:00,418:INFO:Preparing display monitor
2025-06-11 19:49:00,421:INFO:Initializing Linear Regression
2025-06-11 19:49:00,421:INFO:Total runtime is 0.0 minutes
2025-06-11 19:49:00,421:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:00,422:INFO:Initializing create_model()
2025-06-11 19:49:00,422:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:00,422:INFO:Checking exceptions
2025-06-11 19:49:00,422:INFO:Importing libraries
2025-06-11 19:49:00,422:INFO:Copying training dataset
2025-06-11 19:49:00,424:INFO:Defining folds
2025-06-11 19:49:00,424:INFO:Declaring metric variables
2025-06-11 19:49:00,424:INFO:Importing untrained model
2025-06-11 19:49:00,424:INFO:Linear Regression Imported successfully
2025-06-11 19:49:00,425:INFO:Starting cross validation
2025-06-11 19:49:00,425:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:00,481:INFO:Calculating mean and std
2025-06-11 19:49:00,481:INFO:Creating metrics dataframe
2025-06-11 19:49:00,483:INFO:Uploading results into container
2025-06-11 19:49:00,484:INFO:Uploading model into container now
2025-06-11 19:49:00,484:INFO:_master_model_container: 1
2025-06-11 19:49:00,484:INFO:_display_container: 2
2025-06-11 19:49:00,484:INFO:LinearRegression(n_jobs=-1)
2025-06-11 19:49:00,484:INFO:create_model() successfully completed......................................
2025-06-11 19:49:00,645:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:00,645:INFO:Creating metrics dataframe
2025-06-11 19:49:00,648:INFO:Initializing Lasso Regression
2025-06-11 19:49:00,648:INFO:Total runtime is 0.0037834763526916502 minutes
2025-06-11 19:49:00,648:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:00,648:INFO:Initializing create_model()
2025-06-11 19:49:00,648:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:00,648:INFO:Checking exceptions
2025-06-11 19:49:00,648:INFO:Importing libraries
2025-06-11 19:49:00,648:INFO:Copying training dataset
2025-06-11 19:49:00,650:INFO:Defining folds
2025-06-11 19:49:00,651:INFO:Declaring metric variables
2025-06-11 19:49:00,651:INFO:Importing untrained model
2025-06-11 19:49:00,652:INFO:Lasso Regression Imported successfully
2025-06-11 19:49:00,653:INFO:Starting cross validation
2025-06-11 19:49:00,655:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:00,727:INFO:Calculating mean and std
2025-06-11 19:49:00,727:INFO:Creating metrics dataframe
2025-06-11 19:49:00,729:INFO:Uploading results into container
2025-06-11 19:49:00,729:INFO:Uploading model into container now
2025-06-11 19:49:00,730:INFO:_master_model_container: 2
2025-06-11 19:49:00,730:INFO:_display_container: 2
2025-06-11 19:49:00,730:INFO:Lasso(random_state=505)
2025-06-11 19:49:00,730:INFO:create_model() successfully completed......................................
2025-06-11 19:49:00,886:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:00,886:INFO:Creating metrics dataframe
2025-06-11 19:49:00,889:INFO:Initializing Ridge Regression
2025-06-11 19:49:00,889:INFO:Total runtime is 0.007796565691630045 minutes
2025-06-11 19:49:00,889:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:00,889:INFO:Initializing create_model()
2025-06-11 19:49:00,889:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:00,889:INFO:Checking exceptions
2025-06-11 19:49:00,889:INFO:Importing libraries
2025-06-11 19:49:00,890:INFO:Copying training dataset
2025-06-11 19:49:00,892:INFO:Defining folds
2025-06-11 19:49:00,892:INFO:Declaring metric variables
2025-06-11 19:49:00,892:INFO:Importing untrained model
2025-06-11 19:49:00,892:INFO:Ridge Regression Imported successfully
2025-06-11 19:49:00,892:INFO:Starting cross validation
2025-06-11 19:49:00,893:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:00,966:INFO:Calculating mean and std
2025-06-11 19:49:00,967:INFO:Creating metrics dataframe
2025-06-11 19:49:00,969:INFO:Uploading results into container
2025-06-11 19:49:00,969:INFO:Uploading model into container now
2025-06-11 19:49:00,969:INFO:_master_model_container: 3
2025-06-11 19:49:00,969:INFO:_display_container: 2
2025-06-11 19:49:00,970:INFO:Ridge(random_state=505)
2025-06-11 19:49:00,970:INFO:create_model() successfully completed......................................
2025-06-11 19:49:01,122:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:01,122:INFO:Creating metrics dataframe
2025-06-11 19:49:01,125:INFO:Initializing Elastic Net
2025-06-11 19:49:01,125:INFO:Total runtime is 0.01173580487569173 minutes
2025-06-11 19:49:01,125:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:01,125:INFO:Initializing create_model()
2025-06-11 19:49:01,125:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:01,125:INFO:Checking exceptions
2025-06-11 19:49:01,125:INFO:Importing libraries
2025-06-11 19:49:01,125:INFO:Copying training dataset
2025-06-11 19:49:01,127:INFO:Defining folds
2025-06-11 19:49:01,128:INFO:Declaring metric variables
2025-06-11 19:49:01,128:INFO:Importing untrained model
2025-06-11 19:49:01,128:INFO:Elastic Net Imported successfully
2025-06-11 19:49:01,128:INFO:Starting cross validation
2025-06-11 19:49:01,129:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:01,194:INFO:Calculating mean and std
2025-06-11 19:49:01,194:INFO:Creating metrics dataframe
2025-06-11 19:49:01,196:INFO:Uploading results into container
2025-06-11 19:49:01,197:INFO:Uploading model into container now
2025-06-11 19:49:01,197:INFO:_master_model_container: 4
2025-06-11 19:49:01,197:INFO:_display_container: 2
2025-06-11 19:49:01,197:INFO:ElasticNet(random_state=505)
2025-06-11 19:49:01,197:INFO:create_model() successfully completed......................................
2025-06-11 19:49:01,350:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:01,350:INFO:Creating metrics dataframe
2025-06-11 19:49:01,353:INFO:Initializing Least Angle Regression
2025-06-11 19:49:01,354:INFO:Total runtime is 0.015547096729278563 minutes
2025-06-11 19:49:01,354:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:01,354:INFO:Initializing create_model()
2025-06-11 19:49:01,354:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:01,354:INFO:Checking exceptions
2025-06-11 19:49:01,354:INFO:Importing libraries
2025-06-11 19:49:01,354:INFO:Copying training dataset
2025-06-11 19:49:01,356:INFO:Defining folds
2025-06-11 19:49:01,357:INFO:Declaring metric variables
2025-06-11 19:49:01,357:INFO:Importing untrained model
2025-06-11 19:49:01,357:INFO:Least Angle Regression Imported successfully
2025-06-11 19:49:01,357:INFO:Starting cross validation
2025-06-11 19:49:01,358:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:01,421:INFO:Calculating mean and std
2025-06-11 19:49:01,422:INFO:Creating metrics dataframe
2025-06-11 19:49:01,424:INFO:Uploading results into container
2025-06-11 19:49:01,425:INFO:Uploading model into container now
2025-06-11 19:49:01,425:INFO:_master_model_container: 5
2025-06-11 19:49:01,425:INFO:_display_container: 2
2025-06-11 19:49:01,425:INFO:Lars(random_state=505)
2025-06-11 19:49:01,425:INFO:create_model() successfully completed......................................
2025-06-11 19:49:01,579:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:01,579:INFO:Creating metrics dataframe
2025-06-11 19:49:01,582:INFO:Initializing Lasso Least Angle Regression
2025-06-11 19:49:01,582:INFO:Total runtime is 0.01935235261917114 minutes
2025-06-11 19:49:01,582:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:01,582:INFO:Initializing create_model()
2025-06-11 19:49:01,582:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:01,582:INFO:Checking exceptions
2025-06-11 19:49:01,582:INFO:Importing libraries
2025-06-11 19:49:01,582:INFO:Copying training dataset
2025-06-11 19:49:01,585:INFO:Defining folds
2025-06-11 19:49:01,585:INFO:Declaring metric variables
2025-06-11 19:49:01,585:INFO:Importing untrained model
2025-06-11 19:49:01,585:INFO:Lasso Least Angle Regression Imported successfully
2025-06-11 19:49:01,586:INFO:Starting cross validation
2025-06-11 19:49:01,586:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:01,656:INFO:Calculating mean and std
2025-06-11 19:49:01,657:INFO:Creating metrics dataframe
2025-06-11 19:49:01,659:INFO:Uploading results into container
2025-06-11 19:49:01,659:INFO:Uploading model into container now
2025-06-11 19:49:01,659:INFO:_master_model_container: 6
2025-06-11 19:49:01,659:INFO:_display_container: 2
2025-06-11 19:49:01,659:INFO:LassoLars(random_state=505)
2025-06-11 19:49:01,659:INFO:create_model() successfully completed......................................
2025-06-11 19:49:01,826:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:01,826:INFO:Creating metrics dataframe
2025-06-11 19:49:01,829:INFO:Initializing Orthogonal Matching Pursuit
2025-06-11 19:49:01,829:INFO:Total runtime is 0.02346288760503133 minutes
2025-06-11 19:49:01,829:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:01,829:INFO:Initializing create_model()
2025-06-11 19:49:01,829:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:01,830:INFO:Checking exceptions
2025-06-11 19:49:01,830:INFO:Importing libraries
2025-06-11 19:49:01,830:INFO:Copying training dataset
2025-06-11 19:49:01,832:INFO:Defining folds
2025-06-11 19:49:01,832:INFO:Declaring metric variables
2025-06-11 19:49:01,833:INFO:Importing untrained model
2025-06-11 19:49:01,834:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-11 19:49:01,834:INFO:Starting cross validation
2025-06-11 19:49:01,836:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:01,916:INFO:Calculating mean and std
2025-06-11 19:49:01,917:INFO:Creating metrics dataframe
2025-06-11 19:49:01,919:INFO:Uploading results into container
2025-06-11 19:49:01,919:INFO:Uploading model into container now
2025-06-11 19:49:01,919:INFO:_master_model_container: 7
2025-06-11 19:49:01,919:INFO:_display_container: 2
2025-06-11 19:49:01,919:INFO:OrthogonalMatchingPursuit()
2025-06-11 19:49:01,919:INFO:create_model() successfully completed......................................
2025-06-11 19:49:02,080:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:02,080:INFO:Creating metrics dataframe
2025-06-11 19:49:02,084:INFO:Initializing Bayesian Ridge
2025-06-11 19:49:02,084:INFO:Total runtime is 0.0277139941851298 minutes
2025-06-11 19:49:02,084:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:02,084:INFO:Initializing create_model()
2025-06-11 19:49:02,084:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:02,084:INFO:Checking exceptions
2025-06-11 19:49:02,084:INFO:Importing libraries
2025-06-11 19:49:02,084:INFO:Copying training dataset
2025-06-11 19:49:02,086:INFO:Defining folds
2025-06-11 19:49:02,086:INFO:Declaring metric variables
2025-06-11 19:49:02,087:INFO:Importing untrained model
2025-06-11 19:49:02,087:INFO:Bayesian Ridge Imported successfully
2025-06-11 19:49:02,087:INFO:Starting cross validation
2025-06-11 19:49:02,087:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:02,159:INFO:Calculating mean and std
2025-06-11 19:49:02,159:INFO:Creating metrics dataframe
2025-06-11 19:49:02,161:INFO:Uploading results into container
2025-06-11 19:49:02,162:INFO:Uploading model into container now
2025-06-11 19:49:02,162:INFO:_master_model_container: 8
2025-06-11 19:49:02,162:INFO:_display_container: 2
2025-06-11 19:49:02,162:INFO:BayesianRidge()
2025-06-11 19:49:02,162:INFO:create_model() successfully completed......................................
2025-06-11 19:49:02,325:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:02,325:INFO:Creating metrics dataframe
2025-06-11 19:49:02,328:INFO:Initializing Passive Aggressive Regressor
2025-06-11 19:49:02,328:INFO:Total runtime is 0.03177362283070882 minutes
2025-06-11 19:49:02,329:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:02,329:INFO:Initializing create_model()
2025-06-11 19:49:02,329:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:02,329:INFO:Checking exceptions
2025-06-11 19:49:02,329:INFO:Importing libraries
2025-06-11 19:49:02,329:INFO:Copying training dataset
2025-06-11 19:49:02,331:INFO:Defining folds
2025-06-11 19:49:02,331:INFO:Declaring metric variables
2025-06-11 19:49:02,331:INFO:Importing untrained model
2025-06-11 19:49:02,331:INFO:Passive Aggressive Regressor Imported successfully
2025-06-11 19:49:02,331:INFO:Starting cross validation
2025-06-11 19:49:02,332:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:02,400:INFO:Calculating mean and std
2025-06-11 19:49:02,401:INFO:Creating metrics dataframe
2025-06-11 19:49:02,403:INFO:Uploading results into container
2025-06-11 19:49:02,403:INFO:Uploading model into container now
2025-06-11 19:49:02,404:INFO:_master_model_container: 9
2025-06-11 19:49:02,404:INFO:_display_container: 2
2025-06-11 19:49:02,404:INFO:PassiveAggressiveRegressor(random_state=505)
2025-06-11 19:49:02,404:INFO:create_model() successfully completed......................................
2025-06-11 19:49:02,567:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:02,567:INFO:Creating metrics dataframe
2025-06-11 19:49:02,570:INFO:Initializing Huber Regressor
2025-06-11 19:49:02,570:INFO:Total runtime is 0.0358062227567037 minutes
2025-06-11 19:49:02,570:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:02,571:INFO:Initializing create_model()
2025-06-11 19:49:02,571:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:02,571:INFO:Checking exceptions
2025-06-11 19:49:02,571:INFO:Importing libraries
2025-06-11 19:49:02,571:INFO:Copying training dataset
2025-06-11 19:49:02,573:INFO:Defining folds
2025-06-11 19:49:02,573:INFO:Declaring metric variables
2025-06-11 19:49:02,574:INFO:Importing untrained model
2025-06-11 19:49:02,574:INFO:Huber Regressor Imported successfully
2025-06-11 19:49:02,575:INFO:Starting cross validation
2025-06-11 19:49:02,577:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:02,624:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 19:49:02,630:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 19:49:02,646:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 19:49:02,648:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 19:49:02,665:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-11 19:49:02,669:INFO:Calculating mean and std
2025-06-11 19:49:02,669:INFO:Creating metrics dataframe
2025-06-11 19:49:02,673:INFO:Uploading results into container
2025-06-11 19:49:02,674:INFO:Uploading model into container now
2025-06-11 19:49:02,674:INFO:_master_model_container: 10
2025-06-11 19:49:02,674:INFO:_display_container: 2
2025-06-11 19:49:02,674:INFO:HuberRegressor()
2025-06-11 19:49:02,675:INFO:create_model() successfully completed......................................
2025-06-11 19:49:02,842:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:02,842:INFO:Creating metrics dataframe
2025-06-11 19:49:02,845:INFO:Initializing K Neighbors Regressor
2025-06-11 19:49:02,846:INFO:Total runtime is 0.040412016709645594 minutes
2025-06-11 19:49:02,846:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:02,846:INFO:Initializing create_model()
2025-06-11 19:49:02,846:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:02,846:INFO:Checking exceptions
2025-06-11 19:49:02,846:INFO:Importing libraries
2025-06-11 19:49:02,846:INFO:Copying training dataset
2025-06-11 19:49:02,848:INFO:Defining folds
2025-06-11 19:49:02,848:INFO:Declaring metric variables
2025-06-11 19:49:02,848:INFO:Importing untrained model
2025-06-11 19:49:02,849:INFO:K Neighbors Regressor Imported successfully
2025-06-11 19:49:02,849:INFO:Starting cross validation
2025-06-11 19:49:02,849:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:02,923:INFO:Calculating mean and std
2025-06-11 19:49:02,924:INFO:Creating metrics dataframe
2025-06-11 19:49:02,926:INFO:Uploading results into container
2025-06-11 19:49:02,927:INFO:Uploading model into container now
2025-06-11 19:49:02,927:INFO:_master_model_container: 11
2025-06-11 19:49:02,927:INFO:_display_container: 2
2025-06-11 19:49:02,927:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-11 19:49:02,927:INFO:create_model() successfully completed......................................
2025-06-11 19:49:03,079:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:03,079:INFO:Creating metrics dataframe
2025-06-11 19:49:03,083:INFO:Initializing Decision Tree Regressor
2025-06-11 19:49:03,083:INFO:Total runtime is 0.04436420599619548 minutes
2025-06-11 19:49:03,083:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:03,083:INFO:Initializing create_model()
2025-06-11 19:49:03,083:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:03,083:INFO:Checking exceptions
2025-06-11 19:49:03,083:INFO:Importing libraries
2025-06-11 19:49:03,083:INFO:Copying training dataset
2025-06-11 19:49:03,085:INFO:Defining folds
2025-06-11 19:49:03,086:INFO:Declaring metric variables
2025-06-11 19:49:03,086:INFO:Importing untrained model
2025-06-11 19:49:03,087:INFO:Decision Tree Regressor Imported successfully
2025-06-11 19:49:03,088:INFO:Starting cross validation
2025-06-11 19:49:03,090:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:03,165:INFO:Calculating mean and std
2025-06-11 19:49:03,166:INFO:Creating metrics dataframe
2025-06-11 19:49:03,168:INFO:Uploading results into container
2025-06-11 19:49:03,168:INFO:Uploading model into container now
2025-06-11 19:49:03,168:INFO:_master_model_container: 12
2025-06-11 19:49:03,168:INFO:_display_container: 2
2025-06-11 19:49:03,169:INFO:DecisionTreeRegressor(random_state=505)
2025-06-11 19:49:03,169:INFO:create_model() successfully completed......................................
2025-06-11 19:49:03,326:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:03,326:INFO:Creating metrics dataframe
2025-06-11 19:49:03,329:INFO:Initializing Random Forest Regressor
2025-06-11 19:49:03,329:INFO:Total runtime is 0.0484699289004008 minutes
2025-06-11 19:49:03,329:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:03,330:INFO:Initializing create_model()
2025-06-11 19:49:03,330:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:03,330:INFO:Checking exceptions
2025-06-11 19:49:03,330:INFO:Importing libraries
2025-06-11 19:49:03,330:INFO:Copying training dataset
2025-06-11 19:49:03,333:INFO:Defining folds
2025-06-11 19:49:03,333:INFO:Declaring metric variables
2025-06-11 19:49:03,333:INFO:Importing untrained model
2025-06-11 19:49:03,333:INFO:Random Forest Regressor Imported successfully
2025-06-11 19:49:03,333:INFO:Starting cross validation
2025-06-11 19:49:03,334:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:03,739:INFO:Calculating mean and std
2025-06-11 19:49:03,739:INFO:Creating metrics dataframe
2025-06-11 19:49:03,743:INFO:Uploading results into container
2025-06-11 19:49:03,743:INFO:Uploading model into container now
2025-06-11 19:49:03,744:INFO:_master_model_container: 13
2025-06-11 19:49:03,744:INFO:_display_container: 2
2025-06-11 19:49:03,744:INFO:RandomForestRegressor(n_jobs=-1, random_state=505)
2025-06-11 19:49:03,744:INFO:create_model() successfully completed......................................
2025-06-11 19:49:03,905:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:03,905:INFO:Creating metrics dataframe
2025-06-11 19:49:03,908:INFO:Initializing Extra Trees Regressor
2025-06-11 19:49:03,908:INFO:Total runtime is 0.05811842282613119 minutes
2025-06-11 19:49:03,909:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:03,909:INFO:Initializing create_model()
2025-06-11 19:49:03,909:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:03,909:INFO:Checking exceptions
2025-06-11 19:49:03,909:INFO:Importing libraries
2025-06-11 19:49:03,909:INFO:Copying training dataset
2025-06-11 19:49:03,912:INFO:Defining folds
2025-06-11 19:49:03,912:INFO:Declaring metric variables
2025-06-11 19:49:03,912:INFO:Importing untrained model
2025-06-11 19:49:03,912:INFO:Extra Trees Regressor Imported successfully
2025-06-11 19:49:03,912:INFO:Starting cross validation
2025-06-11 19:49:03,913:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:04,201:INFO:Calculating mean and std
2025-06-11 19:49:04,202:INFO:Creating metrics dataframe
2025-06-11 19:49:04,204:INFO:Uploading results into container
2025-06-11 19:49:04,205:INFO:Uploading model into container now
2025-06-11 19:49:04,205:INFO:_master_model_container: 14
2025-06-11 19:49:04,205:INFO:_display_container: 2
2025-06-11 19:49:04,205:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=505)
2025-06-11 19:49:04,205:INFO:create_model() successfully completed......................................
2025-06-11 19:49:04,364:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:04,365:INFO:Creating metrics dataframe
2025-06-11 19:49:04,368:INFO:Initializing AdaBoost Regressor
2025-06-11 19:49:04,368:INFO:Total runtime is 0.06577519575754802 minutes
2025-06-11 19:49:04,368:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:04,368:INFO:Initializing create_model()
2025-06-11 19:49:04,368:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:04,368:INFO:Checking exceptions
2025-06-11 19:49:04,368:INFO:Importing libraries
2025-06-11 19:49:04,368:INFO:Copying training dataset
2025-06-11 19:49:04,371:INFO:Defining folds
2025-06-11 19:49:04,371:INFO:Declaring metric variables
2025-06-11 19:49:04,371:INFO:Importing untrained model
2025-06-11 19:49:04,371:INFO:AdaBoost Regressor Imported successfully
2025-06-11 19:49:04,371:INFO:Starting cross validation
2025-06-11 19:49:04,371:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:04,490:INFO:Calculating mean and std
2025-06-11 19:49:04,491:INFO:Creating metrics dataframe
2025-06-11 19:49:04,493:INFO:Uploading results into container
2025-06-11 19:49:04,494:INFO:Uploading model into container now
2025-06-11 19:49:04,494:INFO:_master_model_container: 15
2025-06-11 19:49:04,494:INFO:_display_container: 2
2025-06-11 19:49:04,494:INFO:AdaBoostRegressor(random_state=505)
2025-06-11 19:49:04,494:INFO:create_model() successfully completed......................................
2025-06-11 19:49:04,653:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:04,653:INFO:Creating metrics dataframe
2025-06-11 19:49:04,657:INFO:Initializing Gradient Boosting Regressor
2025-06-11 19:49:04,657:INFO:Total runtime is 0.07059515317281087 minutes
2025-06-11 19:49:04,657:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:04,658:INFO:Initializing create_model()
2025-06-11 19:49:04,658:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:04,658:INFO:Checking exceptions
2025-06-11 19:49:04,658:INFO:Importing libraries
2025-06-11 19:49:04,658:INFO:Copying training dataset
2025-06-11 19:49:04,660:INFO:Defining folds
2025-06-11 19:49:04,660:INFO:Declaring metric variables
2025-06-11 19:49:04,660:INFO:Importing untrained model
2025-06-11 19:49:04,661:INFO:Gradient Boosting Regressor Imported successfully
2025-06-11 19:49:04,661:INFO:Starting cross validation
2025-06-11 19:49:04,661:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:04,821:INFO:Calculating mean and std
2025-06-11 19:49:04,822:INFO:Creating metrics dataframe
2025-06-11 19:49:04,824:INFO:Uploading results into container
2025-06-11 19:49:04,824:INFO:Uploading model into container now
2025-06-11 19:49:04,825:INFO:_master_model_container: 16
2025-06-11 19:49:04,825:INFO:_display_container: 2
2025-06-11 19:49:04,825:INFO:GradientBoostingRegressor(random_state=505)
2025-06-11 19:49:04,825:INFO:create_model() successfully completed......................................
2025-06-11 19:49:04,985:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:04,985:INFO:Creating metrics dataframe
2025-06-11 19:49:04,989:INFO:Initializing Light Gradient Boosting Machine
2025-06-11 19:49:04,989:INFO:Total runtime is 0.07613317171732585 minutes
2025-06-11 19:49:04,989:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:04,989:INFO:Initializing create_model()
2025-06-11 19:49:04,989:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:04,989:INFO:Checking exceptions
2025-06-11 19:49:04,989:INFO:Importing libraries
2025-06-11 19:49:04,989:INFO:Copying training dataset
2025-06-11 19:49:04,992:INFO:Defining folds
2025-06-11 19:49:04,992:INFO:Declaring metric variables
2025-06-11 19:49:04,992:INFO:Importing untrained model
2025-06-11 19:49:04,993:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-11 19:49:04,993:INFO:Starting cross validation
2025-06-11 19:49:04,993:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:05,429:INFO:Calculating mean and std
2025-06-11 19:49:05,429:INFO:Creating metrics dataframe
2025-06-11 19:49:05,432:INFO:Uploading results into container
2025-06-11 19:49:05,432:INFO:Uploading model into container now
2025-06-11 19:49:05,433:INFO:_master_model_container: 17
2025-06-11 19:49:05,433:INFO:_display_container: 2
2025-06-11 19:49:05,433:INFO:LGBMRegressor(n_jobs=-1, random_state=505)
2025-06-11 19:49:05,433:INFO:create_model() successfully completed......................................
2025-06-11 19:49:05,614:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:05,614:INFO:Creating metrics dataframe
2025-06-11 19:49:05,617:INFO:Initializing CatBoost Regressor
2025-06-11 19:49:05,617:INFO:Total runtime is 0.08659131129582723 minutes
2025-06-11 19:49:05,617:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:05,618:INFO:Initializing create_model()
2025-06-11 19:49:05,618:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:05,618:INFO:Checking exceptions
2025-06-11 19:49:05,618:INFO:Importing libraries
2025-06-11 19:49:05,618:INFO:Copying training dataset
2025-06-11 19:49:05,620:INFO:Defining folds
2025-06-11 19:49:05,620:INFO:Declaring metric variables
2025-06-11 19:49:05,621:INFO:Importing untrained model
2025-06-11 19:49:05,621:INFO:CatBoost Regressor Imported successfully
2025-06-11 19:49:05,621:INFO:Starting cross validation
2025-06-11 19:49:05,622:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:09,047:INFO:Calculating mean and std
2025-06-11 19:49:09,048:INFO:Creating metrics dataframe
2025-06-11 19:49:09,050:INFO:Uploading results into container
2025-06-11 19:49:09,051:INFO:Uploading model into container now
2025-06-11 19:49:09,051:INFO:_master_model_container: 18
2025-06-11 19:49:09,051:INFO:_display_container: 2
2025-06-11 19:49:09,051:INFO:<catboost.core.CatBoostRegressor object at 0x000001E010B56190>
2025-06-11 19:49:09,051:INFO:create_model() successfully completed......................................
2025-06-11 19:49:09,208:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:09,208:INFO:Creating metrics dataframe
2025-06-11 19:49:09,212:INFO:Initializing Dummy Regressor
2025-06-11 19:49:09,212:INFO:Total runtime is 0.1465068777402242 minutes
2025-06-11 19:49:09,212:INFO:SubProcess create_model() called ==================================
2025-06-11 19:49:09,212:INFO:Initializing create_model()
2025-06-11 19:49:09,212:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E00E1BA150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:09,212:INFO:Checking exceptions
2025-06-11 19:49:09,212:INFO:Importing libraries
2025-06-11 19:49:09,212:INFO:Copying training dataset
2025-06-11 19:49:09,215:INFO:Defining folds
2025-06-11 19:49:09,215:INFO:Declaring metric variables
2025-06-11 19:49:09,216:INFO:Importing untrained model
2025-06-11 19:49:09,216:INFO:Dummy Regressor Imported successfully
2025-06-11 19:49:09,217:INFO:Starting cross validation
2025-06-11 19:49:09,219:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-11 19:49:09,285:INFO:Calculating mean and std
2025-06-11 19:49:09,285:INFO:Creating metrics dataframe
2025-06-11 19:49:09,288:INFO:Uploading results into container
2025-06-11 19:49:09,288:INFO:Uploading model into container now
2025-06-11 19:49:09,289:INFO:_master_model_container: 19
2025-06-11 19:49:09,289:INFO:_display_container: 2
2025-06-11 19:49:09,289:INFO:DummyRegressor()
2025-06-11 19:49:09,289:INFO:create_model() successfully completed......................................
2025-06-11 19:49:09,449:INFO:SubProcess create_model() end ==================================
2025-06-11 19:49:09,449:INFO:Creating metrics dataframe
2025-06-11 19:49:09,458:INFO:Initializing create_model()
2025-06-11 19:49:09,458:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=Lasso(random_state=505), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-11 19:49:09,458:INFO:Checking exceptions
2025-06-11 19:49:09,459:INFO:Importing libraries
2025-06-11 19:49:09,459:INFO:Copying training dataset
2025-06-11 19:49:09,461:INFO:Defining folds
2025-06-11 19:49:09,461:INFO:Declaring metric variables
2025-06-11 19:49:09,461:INFO:Importing untrained model
2025-06-11 19:49:09,461:INFO:Declaring custom model
2025-06-11 19:49:09,461:INFO:Lasso Regression Imported successfully
2025-06-11 19:49:09,461:INFO:Cross validation set to False
2025-06-11 19:49:09,461:INFO:Fitting Model
2025-06-11 19:49:09,466:INFO:Lasso(random_state=505)
2025-06-11 19:49:09,466:INFO:create_model() successfully completed......................................
2025-06-11 19:49:09,627:INFO:Creating Dashboard logs
2025-06-11 19:49:09,627:INFO:Model: Lasso Regression
2025-06-11 19:49:09,694:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 505, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2025-06-11 19:49:09,894:INFO:Initializing predict_model()
2025-06-11 19:49:09,894:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=Lasso(random_state=505), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E010B637E0>)
2025-06-11 19:49:09,894:INFO:Checking exceptions
2025-06-11 19:49:09,894:INFO:Preloading libraries
2025-06-11 19:49:10,410:INFO:Creating Dashboard logs
2025-06-11 19:49:10,410:INFO:Model: Lasso Least Angle Regression
2025-06-11 19:49:10,472:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': 'deprecated', 'positive': False, 'precompute': 'auto', 'random_state': 505, 'verbose': False}
2025-06-11 19:49:11,094:INFO:Creating Dashboard logs
2025-06-11 19:49:11,094:INFO:Model: Elastic Net
2025-06-11 19:49:11,170:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 505, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2025-06-11 19:49:11,764:INFO:Creating Dashboard logs
2025-06-11 19:49:11,764:INFO:Model: Bayesian Ridge
2025-06-11 19:49:11,840:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'tol': 0.001, 'verbose': False}
2025-06-11 19:49:12,442:INFO:Creating Dashboard logs
2025-06-11 19:49:12,443:INFO:Model: Ridge Regression
2025-06-11 19:49:12,498:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 505, 'solver': 'auto', 'tol': 0.0001}
2025-06-11 19:49:13,022:INFO:Creating Dashboard logs
2025-06-11 19:49:13,022:INFO:Model: Linear Regression
2025-06-11 19:49:13,102:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2025-06-11 19:49:13,645:INFO:Creating Dashboard logs
2025-06-11 19:49:13,646:INFO:Model: Least Angle Regression
2025-06-11 19:49:13,732:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'normalize': 'deprecated', 'precompute': 'auto', 'random_state': 505, 'verbose': False}
2025-06-11 19:49:14,253:INFO:Creating Dashboard logs
2025-06-11 19:49:14,254:INFO:Model: Orthogonal Matching Pursuit
2025-06-11 19:49:14,327:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': 'deprecated', 'precompute': 'auto', 'tol': None}
2025-06-11 19:49:14,815:INFO:Creating Dashboard logs
2025-06-11 19:49:14,815:INFO:Model: AdaBoost Regressor
2025-06-11 19:49:14,894:INFO:Logged params: {'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 505}
2025-06-11 19:49:15,475:INFO:Creating Dashboard logs
2025-06-11 19:49:15,475:INFO:Model: Huber Regressor
2025-06-11 19:49:15,530:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2025-06-11 19:49:15,977:INFO:Creating Dashboard logs
2025-06-11 19:49:15,978:INFO:Model: Gradient Boosting Regressor
2025-06-11 19:49:16,044:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 505, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-11 19:49:16,591:INFO:Creating Dashboard logs
2025-06-11 19:49:16,591:INFO:Model: Random Forest Regressor
2025-06-11 19:49:16,643:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 505, 'verbose': 0, 'warm_start': False}
2025-06-11 19:49:17,177:INFO:Creating Dashboard logs
2025-06-11 19:49:17,177:INFO:Model: Light Gradient Boosting Machine
2025-06-11 19:49:17,234:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 505, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2025-06-11 19:49:17,804:INFO:Creating Dashboard logs
2025-06-11 19:49:17,805:INFO:Model: CatBoost Regressor
2025-06-11 19:49:17,855:WARNING:Couldn't get params for model. Exception:
Traceback (most recent call last):
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 78, in log_model
    params = params.get_all_params()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\catboost\core.py", line 3504, in get_all_params
    raise CatBoostError("There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.")
_catboost.CatBoostError: There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.

2025-06-11 19:49:17,855:INFO:Logged params: {}
2025-06-11 19:49:18,303:INFO:Creating Dashboard logs
2025-06-11 19:49:18,303:INFO:Model: K Neighbors Regressor
2025-06-11 19:49:18,380:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2025-06-11 19:49:18,847:INFO:Creating Dashboard logs
2025-06-11 19:49:18,848:INFO:Model: Extra Trees Regressor
2025-06-11 19:49:18,930:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 505, 'verbose': 0, 'warm_start': False}
2025-06-11 19:49:19,530:INFO:Creating Dashboard logs
2025-06-11 19:49:19,531:INFO:Model: Dummy Regressor
2025-06-11 19:49:19,611:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2025-06-11 19:49:20,128:INFO:Creating Dashboard logs
2025-06-11 19:49:20,129:INFO:Model: Decision Tree Regressor
2025-06-11 19:49:20,185:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 505, 'splitter': 'best'}
2025-06-11 19:49:20,731:INFO:Creating Dashboard logs
2025-06-11 19:49:20,732:INFO:Model: Passive Aggressive Regressor
2025-06-11 19:49:20,785:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 505, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-11 19:49:21,324:INFO:_master_model_container: 19
2025-06-11 19:49:21,324:INFO:_display_container: 2
2025-06-11 19:49:21,324:INFO:Lasso(random_state=505)
2025-06-11 19:49:21,324:INFO:compare_models() successfully completed......................................
2025-06-11 19:49:21,324:INFO:Initializing evaluate_model()
2025-06-11 19:49:21,324:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=Lasso(random_state=505), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-06-11 19:49:21,329:INFO:Initializing plot_model()
2025-06-11 19:49:21,329:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E00E789950>, estimator=Lasso(random_state=505), plot=pipeline, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-06-11 19:49:21,330:INFO:Checking exceptions
2025-06-11 19:49:21,333:INFO:Preloading libraries
2025-06-11 19:49:21,334:INFO:Copying training dataset
2025-06-11 19:49:21,334:INFO:Plot type: pipeline
2025-06-11 19:49:23,468:INFO:Visual Rendered Successfully
2025-06-11 19:49:23,679:INFO:plot_model() successfully completed......................................
2025-06-11 19:49:23,688:INFO:Initializing save_model()
2025-06-11 19:49:23,688:INFO:save_model(model=Lasso(random_state=505), model_name=model_milk, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\amonreal\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-06-11 19:49:23,688:INFO:Adding model into prep_pipe
2025-06-11 19:49:23,693:INFO:model_milk.pkl saved in current working directory
2025-06-11 19:49:23,704:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', Lasso(random_state=505))])
2025-06-11 19:49:23,704:INFO:save_model() successfully completed......................................
2025-06-11 19:50:08,129:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\utils\requirements_utils.py:20: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  import pkg_resources  # noqa: TID251

2025-06-11 19:50:09,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:50:09,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:50:09,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:50:09,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:50:09,621:INFO:Initializing load_model()
2025-06-11 19:50:09,621:INFO:load_model(model_name=model_paper, platform=None, authentication=None, verbose=True)
2025-06-11 19:50:10,264:INFO:Initializing load_model()
2025-06-11 19:50:10,265:INFO:load_model(model_name=model_bread, platform=None, authentication=None, verbose=True)
2025-06-11 19:50:10,268:INFO:Initializing load_model()
2025-06-11 19:50:10,268:INFO:load_model(model_name=model_milk, platform=None, authentication=None, verbose=True)
2025-06-11 19:51:58,557:WARNING:C:\Users\amonreal\Documents\amlbash\.venv\Lib\site-packages\mlflow\utils\requirements_utils.py:20: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  import pkg_resources  # noqa: TID251

2025-06-11 19:51:59,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:51:59,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:51:59,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:51:59,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 19:52:00,044:INFO:Initializing load_model()
2025-06-11 19:52:00,045:INFO:load_model(model_name=model_paper, platform=None, authentication=None, verbose=True)
2025-06-11 19:52:00,659:INFO:Initializing load_model()
2025-06-11 19:52:00,659:INFO:load_model(model_name=model_bread, platform=None, authentication=None, verbose=True)
2025-06-11 19:52:00,661:INFO:Initializing load_model()
2025-06-11 19:52:00,661:INFO:load_model(model_name=model_milk, platform=None, authentication=None, verbose=True)
2025-06-11 19:53:00,703:INFO:Initializing predict_model()
2025-06-11 19:53:00,703:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC5B7F0390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BC5B7E5EE0>)
2025-06-11 19:53:00,703:INFO:Checking exceptions
2025-06-11 19:53:00,703:INFO:Preloading libraries
2025-06-11 19:53:00,704:INFO:Set up data.
2025-06-11 19:53:00,708:INFO:Set up index.
2025-06-11 19:53:00,900:INFO:Initializing predict_model()
2025-06-11 19:53:00,900:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC59D6F310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', Lasso(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BC5B7E5EE0>)
2025-06-11 19:53:00,900:INFO:Checking exceptions
2025-06-11 19:53:00,900:INFO:Preloading libraries
2025-06-11 19:53:00,901:INFO:Set up data.
2025-06-11 19:53:00,903:INFO:Set up index.
2025-06-11 19:53:01,078:INFO:Initializing predict_model()
2025-06-11 19:53:01,078:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC5B79FAD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', Lasso(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BC5B7E5EE0>)
2025-06-11 19:53:01,078:INFO:Checking exceptions
2025-06-11 19:53:01,079:INFO:Preloading libraries
2025-06-11 19:53:01,079:INFO:Set up data.
2025-06-11 19:53:01,081:INFO:Set up index.
2025-06-11 19:53:56,664:INFO:Initializing predict_model()
2025-06-11 19:53:56,664:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC5B704E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BC5B7822A0>)
2025-06-11 19:53:56,664:INFO:Checking exceptions
2025-06-11 19:53:56,664:INFO:Preloading libraries
2025-06-11 19:53:56,665:INFO:Set up data.
2025-06-11 19:53:56,667:INFO:Set up index.
2025-06-11 19:53:56,783:INFO:Initializing predict_model()
2025-06-11 19:53:56,783:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC5B104910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', Lasso(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BC599C8F40>)
2025-06-11 19:53:56,783:INFO:Checking exceptions
2025-06-11 19:53:56,783:INFO:Preloading libraries
2025-06-11 19:53:56,783:INFO:Set up data.
2025-06-11 19:53:56,785:INFO:Set up index.
2025-06-11 19:53:56,898:INFO:Initializing predict_model()
2025-06-11 19:53:56,898:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC5B73D9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', Lasso(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BC224582C0>)
2025-06-11 19:53:56,898:INFO:Checking exceptions
2025-06-11 19:53:56,898:INFO:Preloading libraries
2025-06-11 19:53:56,899:INFO:Set up data.
2025-06-11 19:53:56,901:INFO:Set up index.
2025-06-11 19:59:19,681:INFO:Initializing predict_model()
2025-06-11 19:59:19,682:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC5B707650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BC5B7827A0>)
2025-06-11 19:59:19,682:INFO:Checking exceptions
2025-06-11 19:59:19,682:INFO:Preloading libraries
2025-06-11 19:59:19,682:INFO:Set up data.
2025-06-11 19:59:19,685:INFO:Set up index.
2025-06-11 19:59:19,880:INFO:Initializing predict_model()
2025-06-11 19:59:19,881:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC59E3E9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', Lasso(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BC5B7827A0>)
2025-06-11 19:59:19,881:INFO:Checking exceptions
2025-06-11 19:59:19,881:INFO:Preloading libraries
2025-06-11 19:59:19,881:INFO:Set up data.
2025-06-11 19:59:19,883:INFO:Set up index.
2025-06-11 19:59:20,053:INFO:Initializing predict_model()
2025-06-11 19:59:20,053:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001BC5B6BE190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['temperature_c', 'holiday_flag',
                                             'promotion_score',
                                             'foot_traffic'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', Lasso(random_state=505))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BC5B7827A0>)
2025-06-11 19:59:20,053:INFO:Checking exceptions
2025-06-11 19:59:20,053:INFO:Preloading libraries
2025-06-11 19:59:20,054:INFO:Set up data.
2025-06-11 19:59:20,055:INFO:Set up index.
